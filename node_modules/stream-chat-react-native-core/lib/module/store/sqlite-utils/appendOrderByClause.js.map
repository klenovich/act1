{"version":3,"names":["appendOrderByClause","selectQuery","orderBy","orderByClause","key","order","undefined","push","length","join","exports"],"sources":["appendOrderByClause.ts"],"sourcesContent":["import type { Schema } from '../schema';\nimport type { PreparedQueries, TableColumnNames } from '../types';\n\nexport const appendOrderByClause = <T extends keyof Schema>(\n  selectQuery: string,\n  orderBy?: Partial<{ [k in TableColumnNames<T>]: 1 | -1 }>,\n): PreparedQueries => {\n  if (!orderBy) return [selectQuery, []];\n\n  const orderByClause = [];\n\n  for (const key in orderBy) {\n    const order = orderBy[key];\n    if (order === undefined) continue;\n\n    orderByClause.push(`${key} ${order === 1 ? 'ASC' : 'DESC'}`);\n  }\n\n  if (!orderByClause.length) {\n    return [selectQuery, []];\n  }\n\n  return [`${selectQuery} ORDER BY ${orderByClause.join(', ')}`];\n};\n"],"mappings":";;;;AAGO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAC9BC,WAAmB,EACnBC,OAAyD,EACrC;EACpB,IAAI,CAACA,OAAO,EAAE,OAAO,CAACD,WAAW,EAAE,EAAE,CAAC;EAEtC,IAAME,aAAa,GAAG,EAAE;EAExB,KAAK,IAAMC,GAAG,IAAIF,OAAO,EAAE;IACzB,IAAMG,KAAK,GAAGH,OAAO,CAACE,GAAG,CAAC;IAC1B,IAAIC,KAAK,KAAKC,SAAS,EAAE;IAEzBH,aAAa,CAACI,IAAI,CAAIH,GAAG,UAAIC,KAAK,KAAK,CAAC,GAAG,KAAK,GAAG,MAAM,CAAE,CAAC;EAC9D;EAEA,IAAI,CAACF,aAAa,CAACK,MAAM,EAAE;IACzB,OAAO,CAACP,WAAW,EAAE,EAAE,CAAC;EAC1B;EAEA,OAAO,CAAIA,WAAW,kBAAaE,aAAa,CAACM,IAAI,CAAC,IAAI,CAAC,CAAG;AAChE,CAAC;AAACC,OAAA,CAAAV,mBAAA,GAAAA,mBAAA"}