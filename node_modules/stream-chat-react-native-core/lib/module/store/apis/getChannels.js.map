{"version":3,"names":["_getChannelMessages","require","_getMembers","_getReads","_selectChannels","_mapStorableToChannel","getChannels","_ref","channelIds","currentUserId","channels","selectChannels","cidVsMembers","getMembers","cidVsReads","getReads","cidVsMessages","getChannelMessages","map","c","_extends2","mapStorableToChannel","members","cid","messages","pinned_messages","read","exports"],"sources":["getChannels.ts"],"sourcesContent":["import type { ChannelAPIResponse } from 'stream-chat';\n\nimport { getChannelMessages } from './getChannelMessages';\nimport { getMembers } from './getMembers';\nimport { getReads } from './getReads';\nimport { selectChannels } from './queries/selectChannels';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { mapStorableToChannel } from '../mappers/mapStorableToChannel';\n\n/**\n * Returns the list of channels with state enriched for given channel ids.\n *\n * @param {Object} param\n * @param {Array} param.channelIds List of channel ids to fetch.\n * @param {Array} param.currentUserId Id of the current logged in user.\n *\n * @returns {Array} Channels with enriched state.\n */\nexport const getChannels = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  channelIds,\n  currentUserId,\n}: {\n  channelIds: string[];\n  currentUserId: string;\n}): Omit<ChannelAPIResponse<StreamChatGenerics>, 'duration'>[] => {\n  const channels = selectChannels({ channelIds });\n\n  const cidVsMembers = getMembers<StreamChatGenerics>({ channelIds });\n  const cidVsReads = getReads<StreamChatGenerics>({ channelIds });\n  const cidVsMessages = getChannelMessages<StreamChatGenerics>({\n    channelIds,\n    currentUserId,\n  });\n\n  // Enrich the channels with state\n  return channels.map((c) => ({\n    ...mapStorableToChannel<StreamChatGenerics>(c),\n    members: cidVsMembers[c.cid],\n    messages: cidVsMessages[c.cid],\n    pinned_messages: [],\n    read: cidVsReads[c.cid],\n  }));\n};\n"],"mappings":";;;;;;AAEA,IAAAA,mBAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAH,OAAA;AAGA,IAAAI,qBAAA,GAAAJ,OAAA;AAWO,IAAMK,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAQ0C;EAAA,IALhEC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IACVC,aAAa,GAAAF,IAAA,CAAbE,aAAa;EAKb,IAAMC,QAAQ,GAAG,IAAAC,8BAAc,EAAC;IAAEH,UAAU,EAAVA;EAAW,CAAC,CAAC;EAE/C,IAAMI,YAAY,GAAG,IAAAC,sBAAU,EAAqB;IAAEL,UAAU,EAAVA;EAAW,CAAC,CAAC;EACnE,IAAMM,UAAU,GAAG,IAAAC,kBAAQ,EAAqB;IAAEP,UAAU,EAAVA;EAAW,CAAC,CAAC;EAC/D,IAAMQ,aAAa,GAAG,IAAAC,sCAAkB,EAAqB;IAC3DT,UAAU,EAAVA,UAAU;IACVC,aAAa,EAAbA;EACF,CAAC,CAAC;EAGF,OAAOC,QAAQ,CAACQ,GAAG,CAAC,UAACC,CAAC;IAAA,WAAAC,SAAA,iBACjB,IAAAC,0CAAoB,EAAqBF,CAAC,CAAC;MAC9CG,OAAO,EAAEV,YAAY,CAACO,CAAC,CAACI,GAAG,CAAC;MAC5BC,QAAQ,EAAER,aAAa,CAACG,CAAC,CAACI,GAAG,CAAC;MAC9BE,eAAe,EAAE,EAAE;MACnBC,IAAI,EAAEZ,UAAU,CAACK,CAAC,CAACI,GAAG;IAAC;EAAA,CACvB,CAAC;AACL,CAAC;AAACI,OAAA,CAAArB,WAAA,GAAAA,WAAA"}