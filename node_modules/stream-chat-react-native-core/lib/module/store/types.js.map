{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import type { Channel, StreamChat } from 'stream-chat';\n\nimport type { Schema } from './schema';\n\nexport type Table = keyof Schema;\nexport type TableRow<T extends Table> = Schema[T];\nexport type TableRowJoinedUser<T extends Table> = Schema[T] & {\n  user: TableRow<'users'>;\n};\n\nexport type TableColumnNames<T extends Table> = keyof Schema[T];\nexport type TableColumnValue = string | boolean | number | undefined;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PreparedQueries = [string] | [string, Array<any>];\n\nexport type PendingTaskTypes = {\n  deleteMessage: 'delete-message';\n  deleteReaction: 'delete-reaction';\n  sendReaction: 'send-reaction';\n};\n\nexport type PendingTask = {\n  channelId: string;\n  channelType: string;\n  messageId: string;\n  id?: number;\n} & (\n  | {\n      payload: Parameters<Channel['sendReaction']>;\n      type: PendingTaskTypes['sendReaction'];\n    }\n  | {\n      payload: Parameters<StreamChat['deleteMessage']>;\n      type: PendingTaskTypes['deleteMessage'];\n    }\n  | {\n      payload: Parameters<Channel['deleteReaction']>;\n      type: PendingTaskTypes['deleteReaction'];\n    }\n);\n"],"mappings":""}