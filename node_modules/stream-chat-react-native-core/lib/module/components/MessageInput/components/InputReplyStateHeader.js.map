{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_MessageInputContext","_ThemeContext","_TranslationContext","_icons","_this","_jsxFileName","styles","StyleSheet","create","replyBoxHeader","alignItems","flexDirection","justifyContent","paddingBottom","replyBoxHeaderTitle","fontSize","fontWeight","InputReplyStateHeaderWithContext","_ref","clearQuotedMessageState","disabled","resetInput","_useTranslationContex","useTranslationContext","t","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","black","grey","grey_gainsboro","_useTheme$theme$messa","messageInput","editingStateHeader","editingBoxHeader","editingBoxHeaderTitle","createElement","View","style","__self","__source","fileName","lineNumber","columnNumber","CurveLineLeftUp","pathFill","Text","color","TouchableOpacity","onPress","testID","CircleClose","exports","areEqual","prevProps","nextProps","prevDisabled","nextDisabled","disabledEqual","MemoizedInputReplyStateHeader","React","memo","InputReplyStateHeader","props","_useMessageInputConte","useMessageInputContext","_extends2","displayName"],"sources":["InputReplyStateHeader.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport type { ChannelContextValue } from '../../../contexts/channelContext/ChannelContext';\nimport {\n  MessageInputContextValue,\n  useMessageInputContext,\n} from '../../../contexts/messageInputContext/MessageInputContext';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\nimport { useTranslationContext } from '../../../contexts/translationContext/TranslationContext';\n\nimport { CircleClose, CurveLineLeftUp } from '../../../icons';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\nconst styles = StyleSheet.create({\n  replyBoxHeader: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 10,\n  },\n  replyBoxHeaderTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n});\n\nexport type InputReplyStateHeaderPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<MessageInputContextValue<StreamChatGenerics>, 'clearQuotedMessageState' | 'resetInput'> &\n  Pick<ChannelContextValue<StreamChatGenerics>, 'disabled'>;\n\nexport const InputReplyStateHeaderWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  clearQuotedMessageState,\n  disabled,\n  resetInput,\n}: InputReplyStateHeaderPropsWithContext<StreamChatGenerics>) => {\n  const { t } = useTranslationContext();\n  const {\n    theme: {\n      colors: { black, grey, grey_gainsboro },\n      messageInput: {\n        editingStateHeader: { editingBoxHeader, editingBoxHeaderTitle },\n      },\n    },\n  } = useTheme();\n\n  return (\n    <View style={[styles.replyBoxHeader, editingBoxHeader]}>\n      <CurveLineLeftUp pathFill={grey_gainsboro} />\n      <Text style={[styles.replyBoxHeaderTitle, { color: black }, editingBoxHeaderTitle]}>\n        {t('Reply to Message')}\n      </Text>\n      <TouchableOpacity\n        disabled={disabled}\n        onPress={() => {\n          resetInput();\n          clearQuotedMessageState();\n        }}\n        testID='close-button'\n      >\n        <CircleClose pathFill={grey} />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: InputReplyStateHeaderPropsWithContext<StreamChatGenerics>,\n  nextProps: InputReplyStateHeaderPropsWithContext<StreamChatGenerics>,\n) => {\n  const { disabled: prevDisabled } = prevProps;\n  const { disabled: nextDisabled } = nextProps;\n\n  const disabledEqual = prevDisabled === nextDisabled;\n  if (!disabledEqual) return false;\n\n  return true;\n};\n\nconst MemoizedInputReplyStateHeader = React.memo(\n  InputReplyStateHeaderWithContext,\n  areEqual,\n) as typeof InputReplyStateHeaderWithContext;\n\nexport type InputReplyStateHeaderProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<InputReplyStateHeaderPropsWithContext<StreamChatGenerics>>;\n\nexport const InputReplyStateHeader = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: InputReplyStateHeaderProps<StreamChatGenerics>,\n) => {\n  const { clearQuotedMessageState, resetInput } = useMessageInputContext<StreamChatGenerics>();\n\n  return <MemoizedInputReplyStateHeader {...{ clearQuotedMessageState, resetInput }} {...props} />;\n};\n\nInputReplyStateHeader.displayName = 'ReplyStateHeader{messageInput}';\n"],"mappings":"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"}