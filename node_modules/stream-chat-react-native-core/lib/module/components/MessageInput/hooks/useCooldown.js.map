{"version":3,"names":["_react","require","_streamChat","_ChannelContext","_ChatContext","_date","useCooldown","_client$user","_channel$state$member","_useState","useState","Date","_useState2","_slicedToArray2","endsAt","setEndsAt","_useChatContext","useChatContext","client","_useChannelContext","useChannelContext","channel","_ref","data","cooldown","interval","disabledRoles","BuiltinRoles","Admin","ChannelModerator","userClientRole","user","role","userChannelRole","state","members","userID","disabledFor","roles","some","roleToSkip","includes","enabled","start","now","ONE_SECOND_IN_MS","exports"],"sources":["useCooldown.ts"],"sourcesContent":["import { useState } from 'react';\n\nimport { BuiltinRoles, ChannelResponse, Role } from 'stream-chat';\n\nimport { useChannelContext } from '../../../contexts/channelContext/ChannelContext';\nimport { useChatContext } from '../../../contexts/chatContext/ChatContext';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\nimport { ONE_SECOND_IN_MS } from '../../../utils/date';\n\ntype Roles = Array<Role>;\n\n/**\n * useCooldown can be used to start a cooldown defined\n * for a Channel by setting an end time for\n **/\nexport const useCooldown = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>() => {\n  const [endsAt, setEndsAt] = useState(new Date());\n\n  const { client } = useChatContext<StreamChatGenerics>();\n  const { channel } = useChannelContext<StreamChatGenerics>();\n  const { cooldown } = (channel?.data || {}) as ChannelResponse<StreamChatGenerics>;\n  const interval: number = cooldown ?? 0;\n\n  /**\n   * We get the roles a user has globally set on the Client, and the role\n   * they have locally within the chat. If any of the predefined\n   * `disabledRoles` are matched to either of the users roles, the user\n   * will not have a cooldown at all.\n   **/\n  const disabledRoles = [BuiltinRoles.Admin, BuiltinRoles.ChannelModerator];\n  const userClientRole = client?.user?.role || '';\n  const userChannelRole = channel?.state.members[client.userID || '']?.role || '';\n\n  const disabledFor = (roles: Roles) =>\n    disabledRoles.some((roleToSkip) => roles.includes(roleToSkip));\n\n  const enabled = interval > 0 && !disabledFor([userClientRole, userChannelRole]);\n\n  const start = () => {\n    if (enabled) {\n      setEndsAt(new Date(Date.now() + interval * ONE_SECOND_IN_MS));\n    }\n  };\n\n  return { endsAt, start };\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,WAAA,GAAAD,OAAA;AAEA,IAAAE,eAAA,GAAAF,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AAEA,IAAAI,KAAA,GAAAJ,OAAA;AAQO,IAAMK,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAEjB;EAAA,IAAAC,YAAA,EAAAC,qBAAA;EACL,IAAAC,SAAA,GAA4B,IAAAC,eAAQ,EAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAAAC,UAAA,OAAAC,eAAA,aAAAJ,SAAA;IAAzCK,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,IAAAI,eAAA,GAAmB,IAAAC,2BAAc,EAAqB,CAAC;IAA/CC,MAAM,GAAAF,eAAA,CAANE,MAAM;EACd,IAAAC,kBAAA,GAAoB,IAAAC,iCAAiB,EAAqB,CAAC;IAAnDC,OAAO,GAAAF,kBAAA,CAAPE,OAAO;EACf,IAAAC,IAAA,GAAsB,CAAAD,OAAO,oBAAPA,OAAO,CAAEE,IAAI,KAAI,CAAC,CAAC;IAAjCC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAChB,IAAMC,QAAgB,GAAGD,QAAQ,WAARA,QAAQ,GAAI,CAAC;EAQtC,IAAME,aAAa,GAAG,CAACC,wBAAY,CAACC,KAAK,EAAED,wBAAY,CAACE,gBAAgB,CAAC;EACzE,IAAMC,cAAc,GAAG,CAAAZ,MAAM,qBAAAX,YAAA,GAANW,MAAM,CAAEa,IAAI,qBAAZxB,YAAA,CAAcyB,IAAI,KAAI,EAAE;EAC/C,IAAMC,eAAe,GAAG,CAAAZ,OAAO,qBAAAb,qBAAA,GAAPa,OAAO,CAAEa,KAAK,CAACC,OAAO,CAACjB,MAAM,CAACkB,MAAM,IAAI,EAAE,CAAC,qBAA3C5B,qBAAA,CAA6CwB,IAAI,KAAI,EAAE;EAE/E,IAAMK,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAY;IAAA,OAC/BZ,aAAa,CAACa,IAAI,CAAC,UAACC,UAAU;MAAA,OAAKF,KAAK,CAACG,QAAQ,CAACD,UAAU,CAAC;IAAA,EAAC;EAAA;EAEhE,IAAME,OAAO,GAAGjB,QAAQ,GAAG,CAAC,IAAI,CAACY,WAAW,CAAC,CAACP,cAAc,EAAEG,eAAe,CAAC,CAAC;EAE/E,IAAMU,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;IAClB,IAAID,OAAO,EAAE;MACX3B,SAAS,CAAC,IAAIJ,IAAI,CAACA,IAAI,CAACiC,GAAG,CAAC,CAAC,GAAGnB,QAAQ,GAAGoB,sBAAgB,CAAC,CAAC;IAC/D;EACF,CAAC;EAED,OAAO;IAAE/B,MAAM,EAANA,MAAM;IAAE6B,KAAK,EAALA;EAAM,CAAC;AAC1B,CAAC;AAACG,OAAA,CAAAxC,WAAA,GAAAA,WAAA"}