{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ThemeContext","_this","_jsxFileName","ChannelPreviewUnreadCount","props","maxUnreadCount","unread","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$chann","channelPreview","unreadContainer","unreadText","accent_red","colors","createElement","View","style","styles","backgroundColor","__self","__source","fileName","lineNumber","columnNumber","Text","numberOfLines","exports","StyleSheet","create","alignItems","borderRadius","flexShrink","justifyContent","color","fontSize","fontWeight","paddingHorizontal","paddingVertical"],"sources":["ChannelPreviewUnreadCount.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport type { ChannelPreviewProps } from './ChannelPreview';\n\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\n\nexport type ChannelPreviewUnreadCountProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<ChannelPreviewProps<StreamChatGenerics>, 'channel'> & {\n  maxUnreadCount: number;\n  unread?: number;\n};\n\nexport const ChannelPreviewUnreadCount = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ChannelPreviewUnreadCountProps<StreamChatGenerics>,\n) => {\n  const { maxUnreadCount, unread } = props;\n  const {\n    theme: {\n      channelPreview: { unreadContainer, unreadText },\n      colors: { accent_red },\n    },\n  } = useTheme();\n\n  if (!unread) return null;\n\n  return (\n    <View style={[styles.unreadContainer, { backgroundColor: accent_red }, unreadContainer]}>\n      <Text numberOfLines={1} style={[styles.unreadText, unreadText]}>\n        {unread > maxUnreadCount ? `${maxUnreadCount}+` : unread}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  unreadContainer: {\n    alignItems: 'center',\n    borderRadius: 8,\n    flexShrink: 1,\n    justifyContent: 'center',\n  },\n  unreadText: {\n    color: '#FFFFFF',\n    fontSize: 11,\n    fontWeight: '700',\n    paddingHorizontal: 5,\n    paddingVertical: 1,\n  },\n});\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAIA,IAAAE,aAAA,GAAAF,OAAA;AAAoE,IAAAG,KAAA;EAAAC,YAAA;AAW7D,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAGpCC,KAAyD,EACtD;EACH,IAAQC,cAAc,GAAaD,KAAK,CAAhCC,cAAc;IAAEC,MAAM,GAAKF,KAAK,CAAhBE,MAAM;EAC9B,IAAAC,SAAA,GAKI,IAAAC,sBAAQ,EAAC,CAAC;IAAAC,eAAA,GAAAF,SAAA,CAJZG,KAAK;IAAAC,qBAAA,GAAAF,eAAA,CACHG,cAAc;IAAIC,eAAe,GAAAF,qBAAA,CAAfE,eAAe;IAAEC,UAAU,GAAAH,qBAAA,CAAVG,UAAU;IACnCC,UAAU,GAAAN,eAAA,CAApBO,MAAM,CAAID,UAAU;EAIxB,IAAI,CAACT,MAAM,EAAE,OAAO,IAAI;EAExB,OACEV,MAAA,YAAAqB,aAAA,CAAClB,YAAA,CAAAmB,IAAI;IAACC,KAAK,EAAE,CAACC,MAAM,CAACP,eAAe,EAAE;MAAEQ,eAAe,EAAEN;IAAW,CAAC,EAAEF,eAAe,CAAE;IAAAS,MAAA,EAAArB,KAAA;IAAAsB,QAAA;MAAAC,QAAA,EAAAtB,YAAA;MAAAuB,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtF9B,MAAA,YAAAqB,aAAA,CAAClB,YAAA,CAAA4B,IAAI;IAACC,aAAa,EAAE,CAAE;IAACT,KAAK,EAAE,CAACC,MAAM,CAACN,UAAU,EAAEA,UAAU,CAAE;IAAAQ,MAAA,EAAArB,KAAA;IAAAsB,QAAA;MAAAC,QAAA,EAAAtB,YAAA;MAAAuB,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5DpB,MAAM,GAAGD,cAAc,GAAMA,cAAc,SAAMC,MAC9C,CACF,CAAC;AAEX,CAAC;AAACuB,OAAA,CAAA1B,yBAAA,GAAAA,yBAAA;AAEF,IAAMiB,MAAM,GAAGU,uBAAU,CAACC,MAAM,CAAC;EAC/BlB,eAAe,EAAE;IACfmB,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE,CAAC;IACfC,UAAU,EAAE,CAAC;IACbC,cAAc,EAAE;EAClB,CAAC;EACDrB,UAAU,EAAE;IACVsB,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,iBAAiB,EAAE,CAAC;IACpBC,eAAe,EAAE;EACnB;AACF,CAAC,CAAC"}