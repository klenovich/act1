{"version":3,"names":["_react","require","_ChatContext","_TranslationContext","getMessageSenderName","message","currentUserId","t","membersLength","_message$user","user","id","_message$user2","_message$user3","_message$user4","name","username","getMentionUsers","mentionedUser","Array","isArray","mentionUserString","reduce","acc","cur","userName","length","replaceAll","getLatestMessageDisplayText","channel","client","_message$attachments","bold","text","isMessageTypeDeleted","type","userID","members","Object","keys","state","messageSender","messageSenderText","boldOwner","includes","shortenedText","substring","replace","mentionedUsers","mentioned_users","regEx","RegExp","concat","_toConsumableArray2","split","index","test","push","command","attachments","getLatestMessageDisplayDate","tDateTimeParser","parserOutput","created_at","isDayOrMoment","isSame","Date","format","MessageReadStatus","exports","getLatestMessageReadStatus","readEvents","_message$user5","NOT_SENT_BY_CURRENT_USER","readList","read","messageUpdatedAt","updated_at","undefined","values","some","_ref","last_read","READ","UNREAD","getLatestMessagePreview","params","lastMessage","messages","messageObject","previews","status","channelStateLastMessage","useLatestMessagePreview","forceUpdate","_useChatContext","useChatContext","_useTranslationContex","useTranslationContext","channelConfigExists","getConfig","channelLastMessageString","_useState","useState","_useState2","_slicedToArray2","setReadEvents","_useState3","_useState4","latestMessagePreview","setLatestMessagePreview","readStatus","useEffect","_channel$getConfig","read_events"],"sources":["useLatestMessagePreview.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport type { Channel, ChannelState, MessageResponse, StreamChat, UserResponse } from 'stream-chat';\n\nimport { useChatContext } from '../../../contexts/chatContext/ChatContext';\nimport {\n  isDayOrMoment,\n  TDateTimeParser,\n  useTranslationContext,\n} from '../../../contexts/translationContext/TranslationContext';\n\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\ntype LatestMessage<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> =\n  | ReturnType<ChannelState<StreamChatGenerics>['formatMessage']>\n  | MessageResponse<StreamChatGenerics>;\n\nexport type LatestMessagePreview<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  created_at: string | number | Date;\n  messageObject: LatestMessage<StreamChatGenerics> | undefined;\n  previews: {\n    bold: boolean;\n    text: string;\n  }[];\n  status: number;\n};\n\nconst getMessageSenderName = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  message: LatestMessage<StreamChatGenerics> | undefined,\n  currentUserId: string | undefined,\n  t: (key: string) => string,\n  membersLength: number,\n) => {\n  if (message?.user?.id === currentUserId) {\n    return t('You');\n  }\n\n  if (membersLength > 2) {\n    return message?.user?.name || message?.user?.username || message?.user?.id || '';\n  }\n\n  return '';\n};\n\nconst getMentionUsers = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  mentionedUser: UserResponse<StreamChatGenerics>[] | undefined,\n) => {\n  if (Array.isArray(mentionedUser)) {\n    const mentionUserString = mentionedUser.reduce((acc, cur) => {\n      const userName = cur.name || cur.id || '';\n      if (userName) {\n        acc += `${acc.length ? '|' : ''}@${userName}`;\n      }\n      return acc;\n    }, '');\n\n    // escape special characters\n    return mentionUserString.replaceAll(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  }\n\n  return '';\n};\n\nconst getLatestMessageDisplayText = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  channel: Channel<StreamChatGenerics>,\n  client: StreamChat<StreamChatGenerics>,\n  message: LatestMessage<StreamChatGenerics> | undefined,\n  t: (key: string) => string,\n) => {\n  if (!message) return [{ bold: false, text: t('Nothing yet...') }];\n  const isMessageTypeDeleted = message.type === 'deleted';\n  if (isMessageTypeDeleted) return [{ bold: false, text: t('Message deleted') }];\n  const currentUserId = client?.userID;\n  const members = Object.keys(channel.state.members);\n\n  const messageSender = getMessageSenderName(message, currentUserId, t, members.length);\n  const messageSenderText = messageSender\n    ? `${messageSender === t('You') ? '' : '@'}${messageSender}: `\n    : '';\n  const boldOwner = messageSenderText.includes('@');\n  if (message.text) {\n    // rough guess optimization to limit string preview to max 100 characters\n    const shortenedText = message.text.substring(0, 100).replace(/\\n/g, ' ');\n    const mentionedUsers = getMentionUsers(message.mentioned_users);\n    const regEx = new RegExp(`^(${mentionedUsers})`);\n    return [\n      { bold: boldOwner, text: messageSenderText },\n      ...shortenedText.split('').reduce(\n        (acc, cur, index) => {\n          if (cur === '@' && mentionedUsers && regEx.test(shortenedText.substring(index))) {\n            acc.push({ bold: true, text: cur });\n          } else if (mentionedUsers && regEx.test(acc[acc.length - 1].text)) {\n            acc.push({ bold: false, text: cur });\n          } else {\n            acc[acc.length - 1].text += cur;\n          }\n          return acc;\n        },\n        [{ bold: false, text: '' }],\n      ),\n    ];\n  }\n  if (message.command) {\n    return [\n      { bold: boldOwner, text: messageSenderText },\n      { bold: false, text: `/${message.command}` },\n    ];\n  }\n  if (message.attachments?.length) {\n    return [\n      { bold: boldOwner, text: messageSenderText },\n      { bold: false, text: t('üèô Attachment...') },\n    ];\n  }\n  return [\n    { bold: boldOwner, text: messageSenderText },\n    { bold: false, text: t('Empty message...') },\n  ];\n};\n\nconst getLatestMessageDisplayDate = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  message: LatestMessage<StreamChatGenerics> | undefined,\n  tDateTimeParser: TDateTimeParser,\n) => {\n  const parserOutput = tDateTimeParser(message?.created_at);\n  if (isDayOrMoment(parserOutput)) {\n    if (parserOutput.isSame(new Date(), 'day')) {\n      return parserOutput.format('LT');\n    }\n    return parserOutput.format('L');\n  }\n  return parserOutput;\n};\n\nexport enum MessageReadStatus {\n  NOT_SENT_BY_CURRENT_USER = 0,\n  UNREAD = 1,\n  READ = 2,\n}\n\nconst getLatestMessageReadStatus = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  channel: Channel<StreamChatGenerics>,\n  client: StreamChat<StreamChatGenerics>,\n  message: LatestMessage<StreamChatGenerics> | undefined,\n  readEvents: boolean,\n): MessageReadStatus => {\n  const currentUserId = client.userID;\n  if (!message || currentUserId !== message.user?.id || readEvents === false) {\n    return MessageReadStatus.NOT_SENT_BY_CURRENT_USER;\n  }\n\n  const readList = channel.state.read;\n  if (currentUserId) {\n    delete readList[currentUserId];\n  }\n\n  const messageUpdatedAt = message.updated_at\n    ? typeof message.updated_at === 'string'\n      ? new Date(message.updated_at)\n      : message.updated_at\n    : undefined;\n\n  return Object.values(readList).some(\n    ({ last_read }) => messageUpdatedAt && messageUpdatedAt < last_read,\n  )\n    ? MessageReadStatus.READ\n    : MessageReadStatus.UNREAD;\n};\n\nconst getLatestMessagePreview = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(params: {\n  channel: Channel<StreamChatGenerics>;\n  client: StreamChat<StreamChatGenerics>;\n  readEvents: boolean;\n  t: (key: string) => string;\n  tDateTimeParser: TDateTimeParser;\n  lastMessage?:\n    | ReturnType<ChannelState<StreamChatGenerics>['formatMessage']>\n    | MessageResponse<StreamChatGenerics>;\n}) => {\n  const { channel, client, lastMessage, readEvents, t, tDateTimeParser } = params;\n\n  const messages = channel.state.messages;\n\n  if (!messages.length && !lastMessage) {\n    return {\n      created_at: '',\n      messageObject: undefined,\n      previews: [\n        {\n          bold: false,\n          text: t('Nothing yet...'),\n        },\n      ],\n      status: MessageReadStatus.NOT_SENT_BY_CURRENT_USER,\n    };\n  }\n\n  const channelStateLastMessage = messages.length ? messages[messages.length - 1] : undefined;\n\n  const message = lastMessage !== undefined ? lastMessage : channelStateLastMessage;\n\n  return {\n    created_at: getLatestMessageDisplayDate(message, tDateTimeParser),\n    messageObject: message,\n    previews: getLatestMessageDisplayText(channel, client, message, t),\n    status: getLatestMessageReadStatus(channel, client, message, readEvents),\n  };\n};\n\n/**\n * Hook to set the display preview for latest message on channel.\n *\n * @param {*} channel Channel object\n *\n * @returns {object} latest message preview e.g.. { text: 'this was last message ...', created_at: '11/12/2020', messageObject: { originalMessageObject } }\n */\nexport const useLatestMessagePreview = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  channel: Channel<StreamChatGenerics>,\n  forceUpdate: number,\n  lastMessage?:\n    | ReturnType<ChannelState<StreamChatGenerics>['formatMessage']>\n    | MessageResponse<StreamChatGenerics>,\n) => {\n  const { client } = useChatContext<StreamChatGenerics>();\n  const { t, tDateTimeParser } = useTranslationContext();\n\n  const channelConfigExists = typeof channel?.getConfig === 'function';\n\n  const messages = channel.state.messages;\n  const message = messages.length ? messages[messages.length - 1] : undefined;\n\n  const channelLastMessageString = `${lastMessage?.id || message?.id}${\n    lastMessage?.updated_at || message?.updated_at\n  }`;\n\n  const [readEvents, setReadEvents] = useState(true);\n  const [latestMessagePreview, setLatestMessagePreview] = useState<\n    LatestMessagePreview<StreamChatGenerics>\n  >({\n    created_at: '',\n    messageObject: undefined,\n    previews: [\n      {\n        bold: false,\n        text: '',\n      },\n    ],\n    status: MessageReadStatus.NOT_SENT_BY_CURRENT_USER,\n  });\n\n  const readStatus = getLatestMessageReadStatus(\n    channel,\n    client,\n    lastMessage || message,\n    readEvents,\n  );\n\n  useEffect(() => {\n    if (channelConfigExists) {\n      const read_events = channel.getConfig()?.read_events;\n      if (typeof read_events === 'boolean') {\n        setReadEvents(read_events);\n      }\n    }\n  }, [channelConfigExists]);\n\n  useEffect(\n    () =>\n      setLatestMessagePreview(\n        getLatestMessagePreview({\n          channel,\n          client,\n          lastMessage,\n          readEvents,\n          t,\n          tDateTimeParser,\n        }),\n      ),\n    [channelLastMessageString, forceUpdate, readEvents, readStatus],\n  );\n\n  return latestMessagePreview;\n};\n"],"mappings":"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"}