{"version":3,"names":["_reactNative","require","_reactNativeReanimated","_OverlayContext","_native","HasPinched","exports","IsSwiping","MARGIN","useImageGalleryGestures","_ref","currentImageHeight","halfScreenHeight","halfScreenWidth","headerFooterVisible","offsetScale","overlayOpacity","photoLength","scale","screenHeight","screenWidth","selectedIndex","setSelectedIndex","translateX","translateY","translationX","_useOverlayContext","useOverlayContext","setOverlay","isAndroid","Platform","OS","hasHitBottomScale","useSharedValue","hasHitTopScale","originX","originY","oldFocalX","oldFocalY","focalX","focalY","index","value","offsetX","offsetY","focalOffsetX","focalOffsetY","adjustedFocalX","adjustedFocalY","tapX","tapY","numberOfPinchFingers","isSwiping","isPinch","hasPinched","resetTouchValues","UNDETERMINED","resetMovementValues","onPan","useAnimatedGestureHandler","onActive","evt","numberOfPointers","TRUE","FALSE","translationY","maxXYRatio","Math","abs","localEvtScale","onFinish","finalXPosition","velocityX","finalYPosition","velocityY","cancelAnimation","withTiming","duration","easing","Easing","out","ease","runOnJS","withDecay","clamp","deceleration","velocity","onStart","onPinch","triggerHaptic","onSingleTap","onDoubleTap","absoluteX","absoluteY","translateYTopBottom","lowerBound","upperBound","min","max"],"sources":["useImageGalleryGestures.tsx"],"sourcesContent":["import { Platform } from 'react-native';\nimport type {\n  PanGestureHandlerGestureEvent,\n  PinchGestureHandlerGestureEvent,\n  TapGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport {\n  cancelAnimation,\n  Easing,\n  runOnJS,\n  SharedValue,\n  useAnimatedGestureHandler,\n  useSharedValue,\n  withDecay,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport { useOverlayContext } from '../../../contexts/overlayContext/OverlayContext';\nimport { triggerHaptic } from '../../../native';\n\nexport enum HasPinched {\n  FALSE = 0,\n  TRUE,\n}\n\nexport enum IsSwiping {\n  UNDETERMINED = 0,\n  TRUE,\n  FALSE,\n}\n\nconst MARGIN = 32;\n\nexport const useImageGalleryGestures = ({\n  currentImageHeight,\n  halfScreenHeight,\n  halfScreenWidth,\n  headerFooterVisible,\n  offsetScale,\n  overlayOpacity,\n  photoLength,\n  scale,\n  screenHeight,\n  screenWidth,\n  selectedIndex,\n  setSelectedIndex,\n  translateX,\n  translateY,\n  translationX,\n}: {\n  currentImageHeight: number;\n  halfScreenHeight: number;\n  halfScreenWidth: number;\n  headerFooterVisible: SharedValue<number>;\n  offsetScale: SharedValue<number>;\n  overlayOpacity: SharedValue<number>;\n  photoLength: number;\n  scale: SharedValue<number>;\n  screenHeight: number;\n  screenWidth: number;\n  selectedIndex: number;\n  setSelectedIndex: React.Dispatch<React.SetStateAction<number>>;\n  translateX: SharedValue<number>;\n  translateY: SharedValue<number>;\n  translationX: SharedValue<number>;\n}) => {\n  const { setOverlay } = useOverlayContext();\n  const isAndroid = Platform.OS === 'android';\n\n  /**\n   * Values to track scale for haptic feedback firing\n   */\n  const hasHitBottomScale = useSharedValue(1);\n  const hasHitTopScale = useSharedValue(0);\n\n  /**\n   * Shared values for touch tracking\n   */\n  const originX = useSharedValue(0);\n  const originY = useSharedValue(0);\n  const oldFocalX = useSharedValue(0);\n  const oldFocalY = useSharedValue(0);\n  const focalX = useSharedValue(0);\n  const focalY = useSharedValue(0);\n  const index = useSharedValue(0);\n\n  /**\n   * if a specific image index > 0 has been passed in\n   * while creating the hook, set the value of the index\n   * reference to its value.\n   *\n   * This makes it possible to seelct an image in the list,\n   * and scroll/pan as normal. Prior to this,\n   * it was always assumed that one started at index 0 in the\n   * gallery.\n   * */\n  if (index.value !== selectedIndex) {\n    index.value = selectedIndex;\n  }\n\n  /**\n   * Shared values for movement\n   */\n  const offsetX = useSharedValue(0);\n  const offsetY = useSharedValue(0);\n\n  /**\n   * Shared values for touch tracking\n   */\n  const focalOffsetX = useSharedValue(0);\n  const focalOffsetY = useSharedValue(0);\n  const adjustedFocalX = useSharedValue(0);\n  const adjustedFocalY = useSharedValue(0);\n  const tapX = useSharedValue(0);\n  const tapY = useSharedValue(0);\n\n  /**\n   * Shared values for gesture tracking\n   */\n  const numberOfPinchFingers = useSharedValue(0);\n  const isSwiping = useSharedValue(0);\n  const isPinch = useSharedValue(false);\n  const hasPinched = useSharedValue(0);\n\n  /**\n   * Reset gesture values for use on touch release\n   */\n  const resetTouchValues = () => {\n    'worklet';\n    focalX.value = 0;\n    focalY.value = 0;\n    oldFocalX.value = 0;\n    oldFocalY.value = 0;\n    originX.value = 0;\n    originY.value = 0;\n    focalOffsetX.value = 0;\n    focalOffsetY.value = 0;\n    numberOfPinchFingers.value = 0;\n    isPinch.value = false;\n    isSwiping.value = IsSwiping.UNDETERMINED;\n  };\n\n  /**\n   * Reset movement values for use on selected photo change\n   */\n  const resetMovementValues = () => {\n    'worklet';\n    translateX.value = 0;\n    translateY.value = 0;\n    scale.value = 1;\n    offsetScale.value = 1;\n  };\n\n  /**\n   * We use simultaneousHandlers to allow pan and pinch gesture handlers\n   * depending on the gesture. The touch is fully handled by the pinch\n   * gesture handler once it has began so all interactions by the pan\n   * handler are blocked if isPinch.value is true\n   */\n  const onPan = useAnimatedGestureHandler<PanGestureHandlerGestureEvent>(\n    {\n      onActive: (evt) => {\n        if (evt.numberOfPointers === 1 && !isPinch.value) {\n          /**\n           * If Android where a second finger cannot be added back and\n           * removing one finger returns to Pan Handler then adjust origin\n           * on finger remove and set swiping false\n           */\n          if (isAndroid && hasPinched.value === HasPinched.TRUE) {\n            hasPinched.value = HasPinched.FALSE;\n            isSwiping.value = IsSwiping.FALSE;\n            offsetX.value = translateX.value + evt.translationX;\n            offsetY.value = translateY.value - evt.translationY;\n          }\n\n          /**\n           * isSwiping is used to prevent Y movement if a clear swipe to next\n           * or previous is begun when at the edge of a photo. The value is\n           * either 0, 1, or 2, via the IsSwiping enum designating undetermined,\n           * true, or false and is reset on releasing the touch\n           */\n          if (isSwiping.value === IsSwiping.UNDETERMINED) {\n            const maxXYRatio = isAndroid ? 1 : 0.25;\n            if (\n              Math.abs(evt.translationX / evt.translationY) > maxXYRatio &&\n              (Math.abs(-halfScreenWidth * (scale.value - 1) - offsetX.value) < 3 ||\n                Math.abs(halfScreenWidth * (scale.value - 1) - offsetX.value) < 3)\n            ) {\n              isSwiping.value = IsSwiping.TRUE;\n            }\n            if (Math.abs(evt.translationY) > 25) {\n              isSwiping.value = IsSwiping.FALSE;\n            }\n          }\n\n          /**\n           * localEvtScale is used for swipe away\n           */\n          const localEvtScale = scale.value / offsetScale.value;\n\n          /**\n           * If not swiping translate the image in X and Y to the event\n           * translation plus offset. If swiping only translate X, if\n           * swiping down when at top of screen or centered balance scale\n           * using offset to a degree (this needs improvement the calculation\n           * is incorrect but likely needs origin use to be 100%)\n           */\n          translateX.value =\n            scale.value !== offsetScale.value\n              ? offsetX.value * localEvtScale - evt.translationX\n              : offsetX.value - evt.translationX;\n          translateY.value =\n            isSwiping.value !== IsSwiping.TRUE\n              ? scale.value !== offsetScale.value\n                ? offsetY.value * localEvtScale + evt.translationY\n                : offsetY.value + evt.translationY\n              : translateY.value;\n\n          /**\n           * If swiping down start scaling down the image for swipe\n           * away effect\n           */\n          scale.value =\n            currentImageHeight * offsetScale.value < screenHeight && translateY.value > 0\n              ? offsetScale.value * (1 - (1 / 3) * (translateY.value / screenHeight))\n              : currentImageHeight * offsetScale.value > screenHeight &&\n                translateY.value > (currentImageHeight / 2) * offsetScale.value - halfScreenHeight\n              ? offsetScale.value *\n                (1 -\n                  (1 / 3) *\n                    ((translateY.value -\n                      ((currentImageHeight / 2) * offsetScale.value - halfScreenHeight)) /\n                      screenHeight))\n              : scale.value;\n\n          overlayOpacity.value = localEvtScale;\n        }\n      },\n      onFinish: (evt) => {\n        if (!isPinch.value && evt.numberOfPointers < 2) {\n          /**\n           * To determine if the fling should page to the next image we\n           * calculate a final position based on the current position and\n           * event velocity\n           */\n          const finalXPosition = evt.translationX - evt.velocityX * 0.3;\n          const finalYPosition = evt.translationY + evt.velocityY * 0.1;\n\n          /**\n           * If there is a next photo, the image is lined up to the right\n           * edge, the swipe is to the left, and the final position is more\n           * than half the screen width, move to the next image\n           */\n          if (\n            index.value < photoLength - 1 &&\n            Math.abs(halfScreenWidth * (scale.value - 1) + offsetX.value) < 3 &&\n            translateX.value < 0 &&\n            finalXPosition < -halfScreenWidth &&\n            isSwiping.value === IsSwiping.TRUE\n          ) {\n            cancelAnimation(translationX);\n            translationX.value = withTiming(\n              -(screenWidth + MARGIN) * (index.value + 1),\n              {\n                duration: 200,\n                easing: Easing.out(Easing.ease),\n              },\n              () => {\n                resetMovementValues();\n                index.value = index.value + 1;\n                runOnJS(setSelectedIndex)(index.value);\n              },\n            );\n\n            /**\n             * If there is a previous photo, the image is lined up to the left\n             * edge, the swipe is to the right, and the final position is more\n             * than half the screen width, move to the previous image\n             */\n          } else if (\n            index.value > 0 &&\n            Math.abs(-halfScreenWidth * (scale.value - 1) + offsetX.value) < 3 &&\n            translateX.value > 0 &&\n            finalXPosition > halfScreenWidth &&\n            isSwiping.value === IsSwiping.TRUE\n          ) {\n            cancelAnimation(translationX);\n            translationX.value = withTiming(\n              -(screenWidth + MARGIN) * (index.value - 1),\n              {\n                duration: 200,\n                easing: Easing.out(Easing.ease),\n              },\n              () => {\n                resetMovementValues();\n                index.value = index.value - 1;\n                runOnJS(setSelectedIndex)(index.value);\n              },\n            );\n          }\n\n          /**\n           * When the pan is finished if the scale is less than 1 return the\n           * photo to center, if the photo is inside the edges of the screen\n           * return the photo to line up with the edges, otherwise use decay\n           * with a clamping at the edges to give the effect the image is\n           * sliding along using velocity and friction\n           */\n          translateX.value =\n            scale.value < 1\n              ? withTiming(0)\n              : translateX.value > halfScreenWidth * (scale.value - 1)\n              ? withTiming(halfScreenWidth * (scale.value - 1), {\n                  duration: 200,\n                })\n              : translateX.value < -halfScreenWidth * (scale.value - 1)\n              ? withTiming(-halfScreenWidth * (scale.value - 1), {\n                  duration: 200,\n                })\n              : withDecay({\n                  clamp: [\n                    -halfScreenWidth * (scale.value - 1),\n                    halfScreenWidth * (scale.value - 1),\n                  ],\n                  deceleration: 0.99,\n                  velocity: -evt.velocityX,\n                });\n\n          /**\n           * When the pan is finished if the height is less than the screen\n           * height return the photo to center, if the photo is inside the\n           * edges of the screen return the photo to line up with the edges,\n           * otherwise use decay with a clamping at the edges to give the effect\n           * the image is sliding along using velocity and friction\n           */\n          translateY.value =\n            currentImageHeight * scale.value < screenHeight\n              ? withTiming(0)\n              : translateY.value > (currentImageHeight / 2) * scale.value - halfScreenHeight\n              ? withTiming((currentImageHeight / 2) * scale.value - halfScreenHeight)\n              : translateY.value < (-currentImageHeight / 2) * scale.value + halfScreenHeight\n              ? withTiming((-currentImageHeight / 2) * scale.value + halfScreenHeight)\n              : withDecay({\n                  clamp: [\n                    (-currentImageHeight / 2) * scale.value + halfScreenHeight,\n                    (currentImageHeight / 2) * scale.value - halfScreenHeight,\n                  ],\n                  deceleration: 0.99,\n                  velocity: evt.velocityY,\n                });\n\n          resetTouchValues();\n\n          /**\n           * If the scale has been reduced below one, i.e. zoomed out, translate\n           * the zoom back to one\n           */\n          scale.value =\n            scale.value !== offsetScale.value ? withTiming(offsetScale.value) : offsetScale.value;\n\n          /**\n           * If the photo is centered or at the top of the screen if scaled larger\n           * than the screen, and not paging left or right, and the final Y position\n           * is greater than half the screen using swipe velocity and position, close\n           * the overlay\n           */\n          if (\n            finalYPosition > halfScreenHeight &&\n            offsetY.value + 8 >= (currentImageHeight / 2) * scale.value - halfScreenHeight &&\n            isSwiping.value !== IsSwiping.TRUE &&\n            translateY.value !== 0 &&\n            !(\n              Math.abs(halfScreenWidth * (scale.value - 1) + offsetX.value) < 3 &&\n              translateX.value < 0 &&\n              finalXPosition < -halfScreenWidth\n            ) &&\n            !(\n              Math.abs(-halfScreenWidth * (scale.value - 1) + offsetX.value) < 3 &&\n              translateX.value > 0 &&\n              finalXPosition > halfScreenWidth\n            )\n          ) {\n            cancelAnimation(translateX);\n            cancelAnimation(translateY);\n            cancelAnimation(scale);\n            overlayOpacity.value = withTiming(\n              0,\n              {\n                duration: 200,\n                easing: Easing.out(Easing.ease),\n              },\n              () => {\n                runOnJS(setOverlay)('none');\n              },\n            );\n            scale.value = withTiming(0.6, {\n              duration: 200,\n              easing: Easing.out(Easing.ease),\n            });\n            translateY.value =\n              evt.velocityY > 1000\n                ? withDecay({\n                    velocity: evt.velocityY,\n                  })\n                : withTiming(halfScreenHeight + (currentImageHeight / 2) * scale.value, {\n                    duration: 200,\n                    easing: Easing.out(Easing.ease),\n                  });\n            translateX.value = withDecay({\n              velocity: -evt.velocityX,\n            });\n          }\n        }\n      },\n      onStart: () => {\n        if (!isPinch.value) {\n          /**\n           * Cancel any previous motion animation on translations when a touch\n           * begins to interrupt the animation and take over the position handling\n           */\n          cancelAnimation(translateX);\n          cancelAnimation(translateY);\n          cancelAnimation(scale);\n          offsetX.value = translateX.value;\n          offsetY.value = translateY.value;\n        }\n\n        /**\n         * Reset hasPinched for Android single finger offset\n         */\n        hasPinched.value = HasPinched.FALSE;\n      },\n    },\n    [currentImageHeight, photoLength],\n  );\n\n  /**\n   * On pinch is run when two or more fingers touch the screen, it then takes over\n   * all touch handling even if the number of fingers is reduced to one until the\n   * touch is complete\n   */\n  const onPinch = useAnimatedGestureHandler<PinchGestureHandlerGestureEvent>(\n    {\n      onActive: (evt) => {\n        /**\n         * Android starts with a zero event with 1 touch instead of two\n         * we therefore must wait to capture starting info until the double\n         * touch begins\n         */\n        if (!isPinch.value && isAndroid) {\n          /**\n           * Set hasPinched to true so when removing one finger the pan active\n           * state adjusts the offset\n           */\n          hasPinched.value = HasPinched.TRUE;\n\n          /**\n           * Cancel any previous motion animation on translations when a touch\n           * begins to interrupt the animation and take over the position handling\n           */\n          cancelAnimation(translateX);\n          cancelAnimation(translateY);\n          cancelAnimation(scale);\n\n          /**\n           * Reset isSwiping as now the pan gesture handler is no longer running\n           */\n          isSwiping.value = IsSwiping.UNDETERMINED;\n\n          /**\n           * Set initial values for pinch gesture interaction handler\n           */\n          numberOfPinchFingers.value = evt.numberOfPointers;\n          offsetX.value = translateX.value;\n          offsetY.value = translateY.value;\n          adjustedFocalX.value = evt.focalX - (halfScreenWidth - offsetX.value);\n          adjustedFocalY.value = evt.focalY - (halfScreenHeight + offsetY.value);\n          originX.value = adjustedFocalX.value;\n          originY.value = adjustedFocalY.value;\n          offsetScale.value = scale.value;\n        }\n\n        /**\n         * Set pinch to true to stop all pan gesture interactions, we do this\n         * again here for Android outside the check that creates type\n         */\n        isPinch.value = true;\n\n        /**\n         * The scale is clamped to a minimum of 1 and maximum of 8 for aesthetics.\n         * We use the clamped value to determine a local event scale so the focal\n         * point does not become out of sync with the actual photo scaling, e.g.\n         * evt.scale is 20 but scale is 8, using evt.scale for offset will put the\n         * photo and calculations out of sync\n         */\n        scale.value = clamp(offsetScale.value * evt.scale, 1, 8);\n        const localEvtScale = scale.value / offsetScale.value;\n\n        /**\n         * When we hit the top or bottom of the scale clamping we run a haptic\n         * trigger, we track if it has been run to not spam the trigger\n         */\n        if (scale.value !== 8 && scale.value !== 1) {\n          hasHitTopScale.value = 0;\n          hasHitBottomScale.value = 0;\n        } else if (scale.value === 8 && hasHitTopScale.value === 0) {\n          hasHitTopScale.value = 1;\n          runOnJS(triggerHaptic)('impactLight');\n        } else if (scale.value === 1 && hasHitBottomScale.value === 0) {\n          hasHitBottomScale.value = 1;\n          runOnJS(triggerHaptic)('impactLight');\n        }\n\n        /**\n         * We calculate the adjusted focal point on the photo using the events\n         * focal position on the screen, screen size, and current photo offset\n         */\n        adjustedFocalX.value = evt.focalX - (halfScreenWidth - offsetX.value);\n        adjustedFocalY.value = evt.focalY - (halfScreenHeight + offsetY.value);\n\n        /**\n         * If the number of fingers on the screen changes, the position of the\n         * focal point will change and this needs to be accounted for, e.g. if\n         * two fingers are on the screen the focal is between them, but if one is\n         * then removed the focal is now at the remaining fingers touch position.\n         * If this happens without accounting for the change the image will jump\n         * around, we keep track of the previous two finger focal to adjust for this\n         * change in a reduction from two fingers to one, then if another finger\n         * is added again we adjust the origin to account for the difference between\n         * the original two finger touch and the new two finger touch position.\n         */\n        if (numberOfPinchFingers.value !== evt.numberOfPointers) {\n          numberOfPinchFingers.value = evt.numberOfPointers;\n          if (evt.numberOfPointers === 1) {\n            focalOffsetX.value = oldFocalX.value - adjustedFocalX.value;\n            focalOffsetY.value = oldFocalY.value - adjustedFocalY.value;\n          } else if (numberOfPinchFingers.value > 1) {\n            originX.value =\n              originX.value -\n              (oldFocalX.value / localEvtScale - adjustedFocalX.value / localEvtScale);\n            originY.value =\n              originY.value -\n              (oldFocalY.value / localEvtScale - adjustedFocalY.value / localEvtScale);\n          }\n        }\n\n        /**\n         * If pinch handler has been activated via two fingers then the fingers\n         * reduced to one we keep track of the old focal using the focal offset\n         * from when the number of fingers was two. We then translate the photo\n         * taking into account the offset, focal, focal offset, origin, and scale.\n         */\n        if (numberOfPinchFingers.value === 1) {\n          oldFocalX.value = adjustedFocalX.value + focalOffsetX.value;\n          oldFocalY.value = adjustedFocalY.value + focalOffsetY.value;\n          translateX.value = offsetX.value - oldFocalX.value + localEvtScale * originX.value;\n          translateY.value = offsetY.value + oldFocalY.value - localEvtScale * originY.value;\n\n          /**\n           * If the number of fingers in the gesture is greater than one the\n           * adjusted focal point is saved as the old focal and the photo is\n           * translated taking into account the offset, focal, origin, and scale.\n           */\n        } else if (numberOfPinchFingers.value > 1) {\n          oldFocalX.value = adjustedFocalX.value;\n          oldFocalY.value = adjustedFocalY.value;\n          translateX.value = offsetX.value - adjustedFocalX.value + localEvtScale * originX.value;\n          translateY.value = offsetY.value + adjustedFocalY.value - localEvtScale * originY.value;\n        }\n      },\n      onFinish: () => {\n        if (isPinch.value) {\n          /**\n           * When the pinch is finished if the scale is less than 1 return the\n           * photo to center, if the photo is inside the edges of the screen\n           * return the photo to line up with the edges, otherwise leave the\n           * photo in its current position\n           */\n          translateX.value =\n            scale.value < 1\n              ? withTiming(0)\n              : translateX.value > halfScreenWidth * (scale.value - 1)\n              ? withTiming(halfScreenWidth * (scale.value - 1))\n              : translateX.value < -halfScreenWidth * (scale.value - 1)\n              ? withTiming(-halfScreenWidth * (scale.value - 1))\n              : translateX.value;\n\n          /**\n           * When the pinch is finished if the height is less than the screen\n           * height return the photo to center, if the photo is inside the\n           * edges of the screen return the photo to line up with the edges,\n           * otherwise leave the photo in its current position\n           */\n          translateY.value =\n            currentImageHeight * scale.value < screenHeight\n              ? withTiming(0)\n              : translateY.value > (currentImageHeight / 2) * scale.value - screenHeight / 2\n              ? withTiming((currentImageHeight / 2) * scale.value - screenHeight / 2)\n              : translateY.value < (-currentImageHeight / 2) * scale.value + screenHeight / 2\n              ? withTiming((-currentImageHeight / 2) * scale.value + screenHeight / 2)\n              : translateY.value;\n\n          /**\n           * If the scale has been reduced below one, i.e. zoomed out, translate\n           * the zoom back to one\n           */\n          offsetScale.value = scale.value < 1 ? 1 : scale.value;\n          scale.value = scale.value < 1 ? withTiming(1) : scale.value;\n          resetTouchValues();\n        }\n      },\n      onStart: (evt) => {\n        /**\n         * Android starts with a zero event with 1 touch instead of two\n         * we therefore must wait to capture starting info until the double\n         * touch begins\n         */\n        if (!isAndroid) {\n          /**\n           * Cancel any previous motion animation on translations when a touch\n           * begins to interrupt the animation and take over the position handling\n           */\n          cancelAnimation(translateX);\n          cancelAnimation(translateY);\n          cancelAnimation(scale);\n\n          /**\n           * Set pinch to true to stop all pan gesture interactions\n           */\n          isPinch.value = true;\n\n          /**\n           * Reset isSwiping as now the pan gesture handler is no longer running\n           */\n          isSwiping.value = IsSwiping.UNDETERMINED;\n\n          /**\n           * Set initial values for pinch gesture interaction handler\n           */\n          numberOfPinchFingers.value = evt.numberOfPointers;\n          offsetX.value = translateX.value;\n          offsetY.value = translateY.value;\n          adjustedFocalX.value = evt.focalX - (halfScreenWidth - offsetX.value);\n          adjustedFocalY.value = evt.focalY - (halfScreenHeight + offsetY.value);\n          originX.value = adjustedFocalX.value;\n          originY.value = adjustedFocalY.value;\n          offsetScale.value = scale.value;\n        }\n\n        /**\n         * Reset hasPinched for Android single finger offset\n         */\n        hasPinched.value = HasPinched.FALSE;\n      },\n    },\n    [currentImageHeight],\n  );\n\n  /**\n   * Single tap handler for header hiding and showing\n   */\n  const onSingleTap = useAnimatedGestureHandler<TapGestureHandlerGestureEvent>({\n    onActive: () => {\n      cancelAnimation(headerFooterVisible);\n      headerFooterVisible.value = headerFooterVisible.value > 0 ? withTiming(0) : withTiming(1);\n    },\n  });\n\n  /**\n   * Double tap handler to zoom back out and hide header and footer\n   */\n  const onDoubleTap = useAnimatedGestureHandler<TapGestureHandlerGestureEvent>({\n    onActive: (evt) => {\n      if (Math.abs(tapX.value - evt.absoluteX) < 64 && Math.abs(tapY.value - evt.absoluteY) < 64) {\n        if (offsetScale.value === 1 && offsetX.value === 0 && offsetY.value === 0) {\n          offsetScale.value = 2;\n          scale.value = withTiming(2, {\n            duration: 200,\n            easing: Easing.out(Easing.ease),\n          });\n          translateX.value = withTiming(evt.absoluteX - halfScreenWidth, {\n            duration: 200,\n            easing: Easing.out(Easing.ease),\n          });\n          if (currentImageHeight * 2 > screenHeight) {\n            const translateYTopBottom =\n              evt.absoluteY > halfScreenHeight\n                ? -(currentImageHeight * 2 - screenHeight) / 2\n                : (currentImageHeight * 2 - screenHeight) / 2;\n            translateY.value = withTiming(translateYTopBottom, {\n              duration: 200,\n              easing: Easing.out(Easing.ease),\n            });\n          }\n        } else {\n          offsetScale.value = 1;\n          scale.value = withTiming(1, {\n            duration: 200,\n            easing: Easing.out(Easing.ease),\n          });\n          offsetX.value = 0;\n          offsetY.value = 0;\n          translateX.value = withTiming(0, {\n            duration: 200,\n            easing: Easing.out(Easing.ease),\n          });\n          translateY.value = withTiming(0, {\n            duration: 200,\n            easing: Easing.out(Easing.ease),\n          });\n          if (headerFooterVisible.value !== 0) {\n            cancelAnimation(headerFooterVisible);\n            headerFooterVisible.value = withTiming(0);\n          }\n        }\n      }\n    },\n    onStart: (evt) => {\n      tapX.value = evt.absoluteX;\n      tapY.value = evt.absoluteY;\n    },\n  });\n\n  return {\n    onDoubleTap,\n    onPan,\n    onPinch,\n    onSingleTap,\n  };\n};\n\n/**\n * Clamping worklet to clamp the scaling\n */\nexport const clamp = (value: number, lowerBound: number, upperBound: number) => {\n  'worklet';\n  return Math.min(Math.max(lowerBound, value), upperBound);\n};\n"],"mappings":"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"}