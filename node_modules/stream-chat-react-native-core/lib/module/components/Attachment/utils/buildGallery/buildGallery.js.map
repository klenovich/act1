{"version":3,"names":["_buildGalleryOfSingleImage","require","_buildGalleryOfThreeImages","_buildGalleryOfTwoImages","_buildThumbnailGrid","buildGallery","_ref","images","sizeConfig","length","buildGalleryOfSingleImage","image","buildGalleryOfTwoImages","buildGalleryOfThreeImages","buildThumbnailGrid","grid","slice","invertedDirections"],"sources":["buildGallery.ts"],"sourcesContent":["import type { Attachment } from 'stream-chat';\n\nimport { buildGalleryOfSingleImage } from './buildGalleryOfSingleImage';\nimport { buildGalleryOfThreeImages } from './buildGalleryOfThreeImages';\nimport { buildGalleryOfTwoImages } from './buildGalleryOfTwoImages';\n\nimport { buildThumbnailGrid } from './buildThumbnailGrid';\n\nimport type { GallerySizeAndThumbnailGrid, GallerySizeConfig } from './types';\n\nimport type { DefaultStreamChatGenerics } from '../../../../types/types';\n\n/**\n * Builds and returns a gallery of optimized images to be rendered on UI.\n * This function take a object parameter with following properties:\n *\n * @param {Attachment[]} images - Array of image attachments\n * @param {GallerySizeConfig} sizeConfig - Theme config for the gallery\n *\n * The returned object contains following properties:\n *\n * - height {number[]} - Height of the gallery\n * - width {number[]} - Width of the gallery\n * - thumbnailGrid {number[][]} - Grid of thumbnail images\n * - invertedDirections {boolean} - Whether to invert the direction of the grid. By default grid is rendered with column as primary direction and row as secondary direction.\n *\n * @return {GallerySizeAndThumbnailGrid}\n */\nexport function buildGallery<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  images,\n  sizeConfig,\n}: {\n  images: Attachment<StreamChatGenerics>[];\n  sizeConfig: GallerySizeConfig;\n}): GallerySizeAndThumbnailGrid {\n  if (images.length === 1) {\n    return buildGalleryOfSingleImage({\n      image: images[0],\n      sizeConfig,\n    });\n  }\n\n  if (images.length === 2) {\n    return buildGalleryOfTwoImages({\n      images,\n      sizeConfig,\n    });\n  }\n\n  if (images.length === 3) {\n    return buildGalleryOfThreeImages({\n      images,\n      sizeConfig,\n    });\n  }\n\n  /**\n   * -----------\n   * |    |    |\n   * |    |    |\n   * -----------\n   * |    |    |\n   * |    |    |\n   * -----------\n   */\n  return buildThumbnailGrid({\n    grid: [\n      [1, 1],\n      [1, 1],\n    ],\n    images: images.slice(0, 4),\n    invertedDirections: true,\n    sizeConfig,\n  });\n}\n"],"mappings":";;;;AAEA,IAAAA,0BAAA,GAAAC,OAAA;AACA,IAAAC,0BAAA,GAAAD,OAAA;AACA,IAAAE,wBAAA,GAAAF,OAAA;AAEA,IAAAG,mBAAA,GAAAH,OAAA;AAsBO,SAASI,YAAYA,CAAAC,IAAA,EAQI;EAAA,IAL9BC,MAAM,GAAAD,IAAA,CAANC,MAAM;IACNC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EAKV,IAAID,MAAM,CAACE,MAAM,KAAK,CAAC,EAAE;IACvB,OAAO,IAAAC,oDAAyB,EAAC;MAC/BC,KAAK,EAAEJ,MAAM,CAAC,CAAC,CAAC;MAChBC,UAAU,EAAVA;IACF,CAAC,CAAC;EACJ;EAEA,IAAID,MAAM,CAACE,MAAM,KAAK,CAAC,EAAE;IACvB,OAAO,IAAAG,gDAAuB,EAAC;MAC7BL,MAAM,EAANA,MAAM;MACNC,UAAU,EAAVA;IACF,CAAC,CAAC;EACJ;EAEA,IAAID,MAAM,CAACE,MAAM,KAAK,CAAC,EAAE;IACvB,OAAO,IAAAI,oDAAyB,EAAC;MAC/BN,MAAM,EAANA,MAAM;MACNC,UAAU,EAAVA;IACF,CAAC,CAAC;EACJ;EAWA,OAAO,IAAAM,sCAAkB,EAAC;IACxBC,IAAI,EAAE,CACJ,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,CACP;IACDR,MAAM,EAAEA,MAAM,CAACS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1BC,kBAAkB,EAAE,IAAI;IACxBT,UAAU,EAAVA;EACF,CAAC,CAAC;AACJ"}