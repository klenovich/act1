{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ThemeContext","_TranslationContext","_Lightning","_Smile","_this","_jsxFileName","styles","StyleSheet","create","container","alignItems","flexDirection","padding","title","fontSize","paddingLeft","AutoCompleteSuggestionHeaderWithContext","_ref","queryText","triggerType","_useTranslationContex","useTranslationContext","t","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","accent_blue","grey","_useTheme$theme$messa","messageInput","suggestions","header","createElement","View","style","__self","__source","fileName","lineNumber","columnNumber","Lightning","pathFill","Text","color","testID","Smile","areEqual","prevProps","nextProps","prevQueryText","prevType","nextQueryText","nextType","typeEqual","valueEqual","MemoizedAutoCompleteSuggestionHeader","React","memo","AutoCompleteSuggestionHeader","props","_extends2","exports","displayName"],"sources":["AutoCompleteSuggestionHeader.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport type { SuggestionsContextValue } from '../../contexts/suggestionsContext/SuggestionsContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { useTranslationContext } from '../../contexts/translationContext/TranslationContext';\n\nimport { Lightning } from '../../icons/Lightning';\nimport { Smile } from '../../icons/Smile';\nimport type { DefaultStreamChatGenerics } from '../../types/types';\n\nexport type AutoCompleteSuggestionHeaderPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<SuggestionsContextValue<StreamChatGenerics>, 'triggerType' | 'queryText'>;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    padding: 8,\n  },\n  title: {\n    fontSize: 14,\n    paddingLeft: 8,\n  },\n});\n\nconst AutoCompleteSuggestionHeaderWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  queryText,\n  triggerType,\n}: AutoCompleteSuggestionHeaderPropsWithContext<StreamChatGenerics>) => {\n  const { t } = useTranslationContext();\n  const {\n    theme: {\n      colors: { accent_blue, grey },\n      messageInput: {\n        suggestions: {\n          header: { container, title },\n        },\n      },\n    },\n  } = useTheme();\n\n  if (triggerType === 'command') {\n    return (\n      <View style={[styles.container, container]}>\n        <Lightning pathFill={accent_blue} />\n        <Text style={[styles.title, { color: grey }, title]} testID='commands-header-title'>\n          {t('Instant Commands')}\n        </Text>\n      </View>\n    );\n  } else if (triggerType === 'emoji') {\n    return (\n      <View style={[styles.container, container]}>\n        <Smile pathFill={accent_blue} />\n        <Text style={[styles.title, { color: grey }, title]} testID='emojis-header-title'>\n          {t('Emoji matching') + ' \"' + queryText + '\"'}\n        </Text>\n      </View>\n    );\n  } else if (triggerType === 'mention') {\n    return null;\n  } else {\n    return null;\n  }\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: AutoCompleteSuggestionHeaderPropsWithContext<StreamChatGenerics>,\n  nextProps: AutoCompleteSuggestionHeaderPropsWithContext<StreamChatGenerics>,\n) => {\n  const { queryText: prevQueryText, triggerType: prevType } = prevProps;\n  const { queryText: nextQueryText, triggerType: nextType } = nextProps;\n\n  const typeEqual = prevType === nextType;\n  if (!typeEqual) return false;\n\n  const valueEqual = prevQueryText === nextQueryText;\n  if (!valueEqual) return false;\n  return true;\n};\n\nconst MemoizedAutoCompleteSuggestionHeader = React.memo(\n  AutoCompleteSuggestionHeaderWithContext,\n  areEqual,\n) as typeof AutoCompleteSuggestionHeaderWithContext;\n\nexport type AutoCompleteSuggestionHeaderProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = AutoCompleteSuggestionHeaderPropsWithContext<StreamChatGenerics>;\n\nexport const AutoCompleteSuggestionHeader = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: AutoCompleteSuggestionHeaderProps<StreamChatGenerics>,\n) => <MemoizedAutoCompleteSuggestionHeader {...props} />;\n\nAutoCompleteSuggestionHeader.displayName =\n  'AutoCompleteSuggestionHeader{messageInput{suggestions{Header}}}';\n"],"mappings":"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"}