{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_AutoCompleteSuggestionCommandIcon","_ThemeContext","_AtMentions","_Avatar","_this","_jsxFileName","styles","StyleSheet","create","args","fontSize","column","flex","justifyContent","paddingLeft","container","alignItems","flexDirection","paddingHorizontal","paddingVertical","name","fontWeight","paddingBottom","tag","text","title","AutoCompleteSuggestionItemWithContext","_ref","itemProps","triggerType","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","accent_blue","black","grey","_useTheme$theme$messa","messageInput","suggestions","_useTheme$theme$messa2","command","argsStyle","commandContainer","_useTheme$theme$messa3","emoji","emojiContainer","_useTheme$theme$messa4","mention","avatarSize","mentionContainer","nameStyle","_ref2","id","image","online","createElement","View","style","__self","__source","fileName","lineNumber","columnNumber","Avatar","size","Text","color","testID","AtMentions","pathFill","_ref3","unicode","_ref4","AutoCompleteSuggestionCommandIcon","replace","char","toUpperCase","areEqual","prevProps","nextProps","prevItemProps","prevType","nextItemProps","nextType","itemPropsEqual","typeEqual","MemoizedAutoCompleteSuggestionItem","React","memo","AutoCompleteSuggestionItem","props","_extends2","exports","displayName"],"sources":["AutoCompleteSuggestionItem.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { AutoCompleteSuggestionCommandIcon } from './AutoCompleteSuggestionCommandIcon';\n\nimport type {\n  Suggestion,\n  SuggestionCommand,\n  SuggestionsContextValue,\n  SuggestionUser,\n} from '../../contexts/suggestionsContext/SuggestionsContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport type { Emoji } from '../../emoji-data/compiled';\nimport { AtMentions } from '../../icons/AtMentions';\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { Avatar } from '../Avatar/Avatar';\n\nexport type AutoCompleteSuggestionItemPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<SuggestionsContextValue, 'triggerType'> & {\n  itemProps: Suggestion<StreamChatGenerics>;\n};\n\nconst styles = StyleSheet.create({\n  args: {\n    fontSize: 14,\n  },\n  column: {\n    flex: 1,\n    justifyContent: 'space-evenly',\n    paddingLeft: 8,\n  },\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  name: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    paddingBottom: 2,\n  },\n  tag: {\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  text: {\n    fontSize: 14,\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    paddingHorizontal: 8,\n  },\n});\n\nconst AutoCompleteSuggestionItemWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  itemProps,\n  triggerType,\n}: AutoCompleteSuggestionItemPropsWithContext<StreamChatGenerics>) => {\n  const {\n    theme: {\n      colors: { accent_blue, black, grey },\n      messageInput: {\n        suggestions: {\n          command: { args: argsStyle, container: commandContainer, title },\n          emoji: { container: emojiContainer, text },\n          mention: { avatarSize, column, container: mentionContainer, name: nameStyle },\n        },\n      },\n    },\n  } = useTheme();\n\n  if (triggerType === 'mention') {\n    const { id, image, name, online } = itemProps as SuggestionUser<StreamChatGenerics>;\n    return (\n      <View style={[styles.container, mentionContainer]}>\n        <Avatar image={image} name={name} online={online} size={avatarSize} />\n        <View style={[styles.column, column]}>\n          <Text style={[styles.name, { color: black }, nameStyle]} testID='mentions-item-name'>\n            {name || id}\n          </Text>\n        </View>\n        <AtMentions pathFill={accent_blue} />\n      </View>\n    );\n  } else if (triggerType === 'emoji') {\n    const { name, unicode } = itemProps as Emoji;\n    return (\n      <View style={[styles.container, emojiContainer]}>\n        <Text style={[styles.text, { color: black }, text]} testID='emojis-item-unicode'>\n          {unicode}\n        </Text>\n        <Text style={[styles.text, { color: black }, text]} testID='emojis-item-name'>\n          {` ${name}`}\n        </Text>\n      </View>\n    );\n  } else if (triggerType === 'command') {\n    const { args, name } = itemProps as SuggestionCommand<StreamChatGenerics>;\n    return (\n      <View style={[styles.container, commandContainer]}>\n        <AutoCompleteSuggestionCommandIcon name={name} />\n        <Text style={[styles.title, { color: black }, title]} testID='commands-item-title'>\n          {(name || '').replace(/^\\w/, (char) => char.toUpperCase())}\n        </Text>\n        <Text style={[styles.args, { color: grey }, argsStyle]} testID='commands-item-args'>\n          {`/${name} ${args}`}\n        </Text>\n      </View>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: AutoCompleteSuggestionItemPropsWithContext<StreamChatGenerics>,\n  nextProps: AutoCompleteSuggestionItemPropsWithContext<StreamChatGenerics>,\n) => {\n  const { itemProps: prevItemProps, triggerType: prevType } = prevProps;\n  const { itemProps: nextItemProps, triggerType: nextType } = nextProps;\n  const itemPropsEqual = prevItemProps === nextItemProps;\n  if (!itemPropsEqual) return false;\n  const typeEqual = prevType === nextType;\n  if (!typeEqual) return false;\n  return true;\n};\n\nconst MemoizedAutoCompleteSuggestionItem = React.memo(\n  AutoCompleteSuggestionItemWithContext,\n  areEqual,\n) as typeof AutoCompleteSuggestionItemWithContext;\n\nexport type AutoCompleteSuggestionItemProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = AutoCompleteSuggestionItemPropsWithContext<StreamChatGenerics>;\n\nexport const AutoCompleteSuggestionItem = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: AutoCompleteSuggestionItemProps<StreamChatGenerics>,\n) => <MemoizedAutoCompleteSuggestionItem {...props} />;\n\nAutoCompleteSuggestionItem.displayName =\n  'AutoCompleteSuggestionItem{messageInput{suggestions{Item}}}';\n"],"mappings":"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"}