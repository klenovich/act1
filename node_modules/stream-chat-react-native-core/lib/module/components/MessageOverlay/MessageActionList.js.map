{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNativeReanimated","_interopRequireWildcard","_MessageActionListItem","_MessageOverlayContext","_ThemeContext","_utils","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","MessageActionListWithContext","props","alignment","messageActions","showScreen","_props$MessageActionL","MessageActionListItem","DefaultMessageActionListItem","isMyMessage","message","messageReactions","error","isThreadMessage","messageActionProps","_useTheme","useTheme","white_snow","theme","colors","height","useSharedValue","width","showScreenStyle","useAnimatedStyle","transform","translateY","interpolate","value","translateX","scale","createElement","View","onLayout","_ref","layout","nativeEvent","style","styles","container","backgroundColor","testID","__self","__source","fileName","lineNumber","columnNumber","map","messageAction","index","_extends2","title","length","areEqual","prevProps","nextProps","prevAlignment","prevMessageActions","nextAlignment","nextMessageActions","messageActionsEqual","alignmentEqual","MemoizedMessageActionList","React","memo","MessageActionList","_useMessageOverlayCon","useMessageOverlayContext","data","_ref2","exports","StyleSheet","create","bottomBorder","borderBottomWidth","borderRadius","marginTop","minWidth","vw","overflow","row","alignItems","flexDirection","justifyContent","paddingHorizontal","paddingVertical","titleStyle","paddingLeft"],"sources":["MessageActionList.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, ViewStyle } from 'react-native';\nimport Animated, { interpolate, useAnimatedStyle, useSharedValue } from 'react-native-reanimated';\n\nimport { MessageActionListItem as DefaultMessageActionListItem } from './MessageActionListItem';\n\nimport {\n  MessageOverlayData,\n  useMessageOverlayContext,\n} from '../../contexts/messageOverlayContext/MessageOverlayContext';\nimport type { OverlayProviderProps } from '../../contexts/overlayContext/OverlayContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { vw } from '../../utils/utils';\n\nexport type MessageActionListPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  OverlayProviderProps<StreamChatGenerics>,\n  | 'MessageActionListItem'\n  | 'error'\n  | 'isMyMessage'\n  | 'isThreadMessage'\n  | 'message'\n  | 'messageReactions'\n> &\n  Pick<MessageOverlayData<StreamChatGenerics>, 'alignment' | 'messageActions'> & {\n    showScreen: Animated.SharedValue<number>;\n  };\n\nconst MessageActionListWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageActionListPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    alignment,\n    messageActions,\n    showScreen,\n    MessageActionListItem = DefaultMessageActionListItem,\n    isMyMessage,\n    message,\n    messageReactions,\n    error,\n    isThreadMessage,\n  } = props;\n\n  const messageActionProps = {\n    error,\n    isMyMessage,\n    isThreadMessage,\n    message,\n    messageReactions,\n  };\n\n  const {\n    theme: {\n      colors: { white_snow },\n    },\n  } = useTheme();\n\n  const height = useSharedValue(0);\n  const width = useSharedValue(0);\n\n  const showScreenStyle = useAnimatedStyle<ViewStyle>(\n    () => ({\n      transform: [\n        {\n          translateY: interpolate(showScreen.value, [0, 1], [-height.value / 2, 0]),\n        },\n        {\n          translateX: interpolate(\n            showScreen.value,\n            [0, 1],\n            [alignment === 'left' ? -width.value / 2 : width.value / 2, 0],\n          ),\n        },\n        {\n          scale: showScreen.value,\n        },\n      ],\n    }),\n    [alignment],\n  );\n\n  return (\n    <Animated.View\n      onLayout={({ nativeEvent: { layout } }) => {\n        width.value = layout.width;\n        height.value = layout.height;\n      }}\n      style={[styles.container, { backgroundColor: white_snow }, showScreenStyle]}\n      testID='message-action-list'\n    >\n      {messageActions?.map((messageAction, index) => (\n        <MessageActionListItem\n          key={messageAction.title}\n          {...messageActionProps}\n          {...{ ...messageAction, index, length: messageActions.length }}\n        />\n      ))}\n    </Animated.View>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageActionListPropsWithContext<StreamChatGenerics>,\n  nextProps: MessageActionListPropsWithContext<StreamChatGenerics>,\n) => {\n  const { alignment: prevAlignment, messageActions: prevMessageActions } = prevProps;\n  const { alignment: nextAlignment, messageActions: nextMessageActions } = nextProps;\n\n  const messageActionsEqual = prevMessageActions?.length === nextMessageActions?.length;\n  if (!messageActionsEqual) return false;\n\n  const alignmentEqual = prevAlignment === nextAlignment;\n  if (!alignmentEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageActionList = React.memo(\n  MessageActionListWithContext,\n  areEqual,\n) as typeof MessageActionListWithContext;\n\nexport type MessageActionListProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<Omit<MessageActionListPropsWithContext<StreamChatGenerics>, 'showScreen'>> &\n  Pick<\n    MessageActionListPropsWithContext<StreamChatGenerics>,\n    'showScreen' | 'message' | 'isMyMessage' | 'error' | 'isThreadMessage' | 'messageReactions'\n  >;\n\n/**\n * MessageActionList - A high level component which implements all the logic required for MessageActions\n */\nexport const MessageActionList = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageActionListProps<StreamChatGenerics>,\n) => {\n  const { data } = useMessageOverlayContext<StreamChatGenerics>();\n\n  const { alignment, messageActions } = data || {};\n\n  return <MemoizedMessageActionList {...{ alignment, messageActions }} {...props} />;\n};\n\nconst styles = StyleSheet.create({\n  bottomBorder: {\n    borderBottomWidth: 1,\n  },\n  container: {\n    borderRadius: 16,\n    marginTop: 8,\n    minWidth: vw(65),\n    overflow: 'hidden',\n  },\n  row: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    minWidth: vw(65),\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n  },\n  titleStyle: {\n    paddingLeft: 20,\n  },\n});\n"],"mappings":"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"}