{"version":3,"names":["_ChannelContext","require","_ChatContext","_MessagesContext","_PaginatedMessageListContext","_ThreadContext","_getDateSeparators","_getGroupStyles","_getReadStates","isMessageWithStylesReadByAndDateSeparator","message","readBy","undefined","exports","useMessageList","params","noGroupByUser","threadList","_useChatContext","useChatContext","client","_useChannelContext","useChannelContext","hideDateSeparators","maxTimeBetweenGroupedMessages","read","_useMessagesContext","useMessagesContext","deletedMessagesVisibilityType","_useMessagesContext$g","getMessagesGroupStyles","getGroupStyles","_usePaginatedMessageL","usePaginatedMessageListContext","messages","_useThreadContext","useThreadContext","threadMessages","messageList","readList","dateSeparators","getDateSeparators","userId","userID","messageGroupStyles","readData","getReadStates","messagesWithStylesReadByAndDateSeparator","filter","msg","isMessageTypeDeleted","type","_msg$user","user","id","_msg$user2","map","_extends2","dateSeparator","groupStyles","_toConsumableArray2","reverse"],"sources":["useMessageList.ts"],"sourcesContent":["import type { ChannelState, MessageResponse } from 'stream-chat';\n\nimport {\n  ChannelContextValue,\n  useChannelContext,\n} from '../../../contexts/channelContext/ChannelContext';\nimport { useChatContext } from '../../../contexts/chatContext/ChatContext';\nimport {\n  DeletedMessagesVisibilityType,\n  useMessagesContext,\n} from '../../../contexts/messagesContext/MessagesContext';\nimport { usePaginatedMessageListContext } from '../../../contexts/paginatedMessageListContext/PaginatedMessageListContext';\nimport { useThreadContext } from '../../../contexts/threadContext/ThreadContext';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\nimport { getDateSeparators } from '../utils/getDateSeparators';\nimport { getGroupStyles } from '../utils/getGroupStyles';\nimport { getReadStates } from '../utils/getReadStates';\n\nexport type UseMessageListParams = {\n  deletedMessagesVisibilityType?: DeletedMessagesVisibilityType;\n  noGroupByUser?: boolean;\n  threadList?: boolean;\n};\n\nexport type GroupType = string;\n\nexport type MessagesWithStylesReadByAndDateSeparator<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = MessageResponse<StreamChatGenerics> & {\n  groupStyles: GroupType[];\n  readBy: boolean | number;\n  dateSeparator?: Date;\n};\n\nexport type MessageType<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> =\n  | ReturnType<ChannelState<StreamChatGenerics>['formatMessage']>\n  | MessagesWithStylesReadByAndDateSeparator<StreamChatGenerics>;\n\n// Type guards to check MessageType\nexport const isMessageWithStylesReadByAndDateSeparator = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  message: MessageType<StreamChatGenerics>,\n): message is MessagesWithStylesReadByAndDateSeparator<StreamChatGenerics> =>\n  (message as MessagesWithStylesReadByAndDateSeparator<StreamChatGenerics>).readBy !== undefined;\n\nexport const useMessageList = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  params: UseMessageListParams,\n) => {\n  const { noGroupByUser, threadList } = params;\n  const { client } = useChatContext<StreamChatGenerics>();\n  const { hideDateSeparators, maxTimeBetweenGroupedMessages, read } =\n    useChannelContext<StreamChatGenerics>();\n  const { deletedMessagesVisibilityType, getMessagesGroupStyles = getGroupStyles } =\n    useMessagesContext<StreamChatGenerics>();\n  const { messages } = usePaginatedMessageListContext<StreamChatGenerics>();\n  const { threadMessages } = useThreadContext<StreamChatGenerics>();\n\n  const messageList = threadList ? threadMessages : messages;\n  const readList: ChannelContextValue<StreamChatGenerics>['read'] | undefined = threadList\n    ? undefined\n    : read;\n\n  const dateSeparators = getDateSeparators<StreamChatGenerics>({\n    deletedMessagesVisibilityType,\n    hideDateSeparators,\n    messages: messageList,\n    userId: client.userID,\n  });\n\n  const messageGroupStyles = getMessagesGroupStyles<StreamChatGenerics>({\n    dateSeparators,\n    hideDateSeparators,\n    maxTimeBetweenGroupedMessages,\n    messages: messageList,\n    noGroupByUser,\n    userId: client.userID,\n  });\n\n  const readData = getReadStates(client.userID, messageList, readList);\n\n  const messagesWithStylesReadByAndDateSeparator = messageList\n    .filter((msg) => {\n      const isMessageTypeDeleted = msg.type === 'deleted';\n      if (deletedMessagesVisibilityType === 'sender') {\n        return !isMessageTypeDeleted || msg.user?.id === client.userID;\n      } else if (deletedMessagesVisibilityType === 'receiver') {\n        return !isMessageTypeDeleted || msg.user?.id !== client.userID;\n      } else if (deletedMessagesVisibilityType === 'never') {\n        return !isMessageTypeDeleted;\n      } else {\n        return msg;\n      }\n    })\n    .map((msg) => ({\n      ...msg,\n      dateSeparator: dateSeparators[msg.id] || undefined,\n      groupStyles: messageGroupStyles[msg.id] || ['single'],\n      readBy: msg.id ? readData[msg.id] || false : false,\n    }));\n\n  return [\n    ...messagesWithStylesReadByAndDateSeparator,\n  ].reverse() as MessageType<StreamChatGenerics>[];\n};\n"],"mappings":"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"}