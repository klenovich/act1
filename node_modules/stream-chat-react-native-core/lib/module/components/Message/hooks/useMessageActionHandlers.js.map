{"version":3,"names":["useMessageActionHandlers","_ref","channel","client","deleteMessage","deleteReaction","message","retrySendMessage","sendReaction","setEditingState","setQuotedMessageState","handleResendMessage","handleQuotedReplyMessage","isMuted","mutedUsers","some","mute","_message$user","user","id","userID","target","handleDeleteMessage","_ref2","_asyncToGenerator2","_regenerator","mark","_callee","wrap","_callee$","_context","prev","next","stop","apply","arguments","handleToggleMuteUser","_ref3","_callee2","_message$user2","_callee2$","_context2","abrupt","unmuteUser","muteUser","handleToggleBanUser","_ref4","_callee3","messageUser","_callee3$","_context3","banned","unbanUser","banUser","handleTogglePinMessage","_ref5","_callee4","MessagePinnedHeaderStatus","_callee4$","_context4","pinned","pinMessage","unpinMessage","handleEditMessage","handleToggleReaction","_ref6","_callee5","reactionType","_message$own_reaction","messageId","own_reactions","userExistingReaction","_callee5$","_context5","find","reaction","type","console","warn","t0","log","_x","exports"],"sources":["useMessageActionHandlers.ts"],"sourcesContent":["import type { MessageResponse } from 'stream-chat';\n\nimport type { ChannelContextValue } from '../../../contexts/channelContext/ChannelContext';\nimport type { ChatContextValue } from '../../../contexts/chatContext/ChatContext';\nimport type { MessageContextValue } from '../../../contexts/messageContext/MessageContext';\nimport type { MessagesContextValue } from '../../../contexts/messagesContext/MessagesContext';\n\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\nexport const useMessageActionHandlers = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  channel,\n  client,\n  deleteMessage,\n  deleteReaction,\n  message,\n  retrySendMessage,\n  sendReaction,\n  setEditingState,\n  setQuotedMessageState,\n}: Pick<\n  MessagesContextValue<StreamChatGenerics>,\n  | 'sendReaction'\n  | 'deleteMessage'\n  | 'deleteReaction'\n  | 'retrySendMessage'\n  | 'setEditingState'\n  | 'setQuotedMessageState'\n  | 'supportedReactions'\n> &\n  Pick<ChannelContextValue<StreamChatGenerics>, 'channel' | 'enforceUniqueReaction'> &\n  Pick<ChatContextValue<StreamChatGenerics>, 'client'> &\n  Pick<MessageContextValue<StreamChatGenerics>, 'message'>) => {\n  const handleResendMessage = () =>\n    retrySendMessage(message as MessageResponse<StreamChatGenerics>);\n\n  const handleQuotedReplyMessage = () => {\n    setQuotedMessageState(message);\n  };\n\n  const isMuted = (client.mutedUsers || []).some(\n    (mute) => mute.user.id === client.userID && mute.target.id === message.user?.id,\n  );\n\n  const handleDeleteMessage = async () => {\n    await deleteMessage(message as MessageResponse<StreamChatGenerics>);\n  };\n\n  const handleToggleMuteUser = async () => {\n    if (!message.user?.id) {\n      return;\n    }\n\n    if (isMuted) {\n      await client.unmuteUser(message.user.id);\n    } else {\n      await client.muteUser(message.user.id);\n    }\n  };\n\n  const handleToggleBanUser = async () => {\n    const messageUser = message.user;\n    if (!messageUser) {\n      return;\n    }\n\n    if (messageUser.banned) {\n      await client.unbanUser(messageUser.id);\n    } else {\n      await client.banUser(messageUser.id);\n    }\n  };\n\n  const handleTogglePinMessage = async () => {\n    const MessagePinnedHeaderStatus = message.pinned;\n    if (!MessagePinnedHeaderStatus) {\n      await client.pinMessage(message, null);\n    } else {\n      await client.unpinMessage(message);\n    }\n  };\n\n  const handleEditMessage = () => {\n    setEditingState(message);\n  };\n\n  const handleToggleReaction = async (reactionType: string) => {\n    const messageId = message.id;\n    const own_reactions = message.own_reactions ?? [];\n    const userExistingReaction = own_reactions.find((reaction) => {\n      // own user should only ever contain the current user id\n      // just in case we check to prevent bugs with message updates from breaking reactions\n      if (reaction.user && client.userID === reaction.user.id && reaction.type === reactionType) {\n        return true;\n      } else if (reaction.user && client.userID !== reaction.user.id) {\n        console.warn(\n          `message.own_reactions contained reactions from a different user, this indicates a bug`,\n        );\n      }\n      return false;\n    });\n    // Change reaction in local state, make API call in background, revert to old message if fails\n    try {\n      if (channel && messageId) {\n        if (userExistingReaction) {\n          await deleteReaction(userExistingReaction.type, messageId);\n        } else {\n          await sendReaction(reactionType, messageId);\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return {\n    handleDeleteMessage,\n    handleEditMessage,\n    handleQuotedReplyMessage,\n    handleResendMessage,\n    handleToggleBanUser,\n    handleToggleMuteUser,\n    handleTogglePinMessage,\n    handleToggleReaction,\n  };\n};\n"],"mappings":"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"}