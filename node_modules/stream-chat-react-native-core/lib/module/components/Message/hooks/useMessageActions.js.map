{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_useMessageActionHandlers","_ThemeContext","_icons","_native","_removeReservedFields","_utils","_this","_jsxFileName","useMessageActions","_ref","_message$user3","channel","client","deleteMessageFromContext","deleteMessage","deleteReaction","enforceUniqueReaction","handleBlock","handleCopy","handleDelete","handleEdit","handleFlag","handleMute","handlePinMessage","handleQuotedReply","handleReactionProp","handleReaction","handleRetry","handleThreadReply","message","onThreadSelect","openThread","retrySendMessage","selectReaction","sendReaction","setEditingState","setOverlay","setQuotedMessageState","supportedReactions","t","_useTheme","useTheme","_useTheme$theme$color","theme","colors","accent_blue","accent_red","grey","_useMessageActionHand","useMessageActionHandlers","handleDeleteMessage","handleEditMessage","handleQuotedReplyMessage","handleResendMessage","handleToggleBanUser","handleToggleMuteUser","handleTogglePinMessage","handleToggleReaction","error","type","status","MessageStatusTypes","FAILED","onOpenThread","isMuted","mutedUsers","some","mute","_message$user","user","id","userID","target","blockUser","action","_action","_asyncToGenerator2","_regenerator","mark","_callee","_message$user2","wrap","_callee$","_context","prev","next","stop","apply","arguments","actionType","icon","createElement","UserDelete","pathFill","__self","__source","fileName","lineNumber","columnNumber","title","banned","copyMessage","setClipboardString","text","Copy","undefined","Alert","alert","onPress","_onPress","_callee2","_callee2$","_context2","style","cancelable","Delete","titleStyle","color","editMessage","Edit","pinMessage","Pin","height","width","unpinMessage","Unpin","flagMessage","_onPress2","_callee3","_callee3$","_context3","t0","MessageFlag","_ref2","_callee4","reactionType","_callee4$","_context4","_x","muteUser","_action2","_callee5","_message$user4","_callee5$","_context5","Mute","quotedReply","CurveLineLeftUp","retry","_action3","_callee6","messageWithoutReservedFields","_callee6$","_context6","removeReservedFields","SendUp","threadReply","ThreadReply","exports"],"sources":["useMessageActions.tsx"],"sourcesContent":["import React from 'react';\nimport { Alert } from 'react-native';\n\nimport { useMessageActionHandlers } from './useMessageActionHandlers';\n\nimport type { ChannelContextValue } from '../../../contexts/channelContext/ChannelContext';\nimport type { ChatContextValue } from '../../../contexts/chatContext/ChatContext';\nimport type { MessageContextValue } from '../../../contexts/messageContext/MessageContext';\nimport type { MessagesContextValue } from '../../../contexts/messagesContext/MessagesContext';\nimport type { OverlayContextValue } from '../../../contexts/overlayContext/OverlayContext';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\nimport type { ThreadContextValue } from '../../../contexts/threadContext/ThreadContext';\nimport type { TranslationContextValue } from '../../../contexts/translationContext/TranslationContext';\nimport {\n  Copy,\n  CurveLineLeftUp,\n  Delete,\n  Edit,\n  MessageFlag,\n  Mute,\n  Pin,\n  SendUp,\n  ThreadReply,\n  Unpin,\n  UserDelete,\n} from '../../../icons';\nimport { setClipboardString } from '../../../native';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\nimport { removeReservedFields } from '../../../utils/removeReservedFields';\nimport { MessageStatusTypes } from '../../../utils/utils';\n\nimport type { MessageType } from '../../MessageList/hooks/useMessageList';\nimport type { MessageActionType } from '../../MessageOverlay/MessageActionListItem';\n\nexport const useMessageActions = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  channel,\n  client,\n  deleteMessage: deleteMessageFromContext,\n  deleteReaction,\n  enforceUniqueReaction,\n  handleBlock,\n  handleCopy,\n  handleDelete,\n  handleEdit,\n  handleFlag,\n  handleMute,\n  handlePinMessage,\n  handleQuotedReply,\n  handleReaction: handleReactionProp,\n  handleRetry,\n  handleThreadReply,\n  message,\n  onThreadSelect,\n  openThread,\n  retrySendMessage,\n  selectReaction,\n  sendReaction,\n  setEditingState,\n  setOverlay,\n  setQuotedMessageState,\n  supportedReactions,\n  t,\n}: Pick<\n  MessagesContextValue<StreamChatGenerics>,\n  | 'deleteMessage'\n  | 'sendReaction'\n  | 'handleBlock'\n  | 'handleCopy'\n  | 'handleDelete'\n  | 'handleEdit'\n  | 'handleFlag'\n  | 'handleQuotedReply'\n  | 'handleMute'\n  | 'handlePinMessage'\n  | 'handleRetry'\n  | 'handleReaction'\n  | 'handleThreadReply'\n  | 'removeMessage'\n  | 'deleteReaction'\n  | 'retrySendMessage'\n  | 'setEditingState'\n  | 'setQuotedMessageState'\n  | 'selectReaction'\n  | 'supportedReactions'\n  | 'updateMessage'\n> &\n  Pick<ChannelContextValue<StreamChatGenerics>, 'channel' | 'enforceUniqueReaction'> &\n  Pick<ChatContextValue<StreamChatGenerics>, 'client'> &\n  Pick<OverlayContextValue, 'setOverlay'> &\n  Pick<ThreadContextValue<StreamChatGenerics>, 'openThread'> &\n  Pick<MessageContextValue<StreamChatGenerics>, 'message'> &\n  Pick<TranslationContextValue, 't'> & {\n    onThreadSelect?: (message: MessageType<StreamChatGenerics>) => void;\n  }) => {\n  const {\n    theme: {\n      colors: { accent_blue, accent_red, grey },\n    },\n  } = useTheme();\n  const {\n    handleDeleteMessage,\n    handleEditMessage,\n    handleQuotedReplyMessage,\n    handleResendMessage,\n    handleToggleBanUser,\n    handleToggleMuteUser,\n    handleTogglePinMessage,\n    handleToggleReaction,\n  } = useMessageActionHandlers({\n    channel,\n    client,\n    deleteMessage: deleteMessageFromContext,\n    deleteReaction,\n    enforceUniqueReaction,\n    message,\n    retrySendMessage,\n    sendReaction,\n    setEditingState,\n    setQuotedMessageState,\n    supportedReactions,\n  });\n\n  const error = message.type === 'error' || message.status === MessageStatusTypes.FAILED;\n\n  const onOpenThread = () => {\n    if (onThreadSelect) {\n      onThreadSelect(message);\n    }\n    if (openThread) {\n      openThread(message);\n    }\n  };\n\n  const isMuted = (client.mutedUsers || []).some(\n    (mute) => mute.user.id === client.userID && mute.target.id === message.user?.id,\n  );\n\n  const blockUser: MessageActionType = {\n    action: async () => {\n      setOverlay('none');\n      if (message.user?.id) {\n        if (handleBlock) {\n          handleBlock(message);\n        }\n\n        await handleToggleBanUser();\n      }\n    },\n    actionType: 'blockUser',\n    icon: <UserDelete pathFill={grey} />,\n    title: message.user?.banned ? t('Unblock User') : t('Block User'),\n  };\n\n  const copyMessage: MessageActionType | undefined =\n    setClipboardString !== null\n      ? {\n          action: () => {\n            setOverlay('none');\n            if (handleCopy) {\n              handleCopy(message);\n            }\n            setClipboardString(message.text || '');\n          },\n          actionType: 'copyMessage',\n          icon: <Copy pathFill={grey} />,\n          title: t('Copy Message'),\n        }\n      : undefined;\n\n  const deleteMessage: MessageActionType = {\n    action: () => {\n      setOverlay('alert');\n      if (message.id) {\n        Alert.alert(\n          t('Delete Message'),\n          t('Are you sure you want to permanently delete this message?'),\n          [\n            { onPress: () => setOverlay('none'), text: t('Cancel') },\n            {\n              onPress: async () => {\n                setOverlay('none');\n                if (handleDelete) {\n                  handleDelete(message);\n                }\n\n                await handleDeleteMessage();\n              },\n              style: 'destructive',\n              text: t('Delete'),\n            },\n          ],\n          { cancelable: false },\n        );\n      }\n    },\n    actionType: 'deleteMessage',\n    icon: <Delete pathFill={accent_red} />,\n    title: t('Delete Message'),\n    titleStyle: { color: accent_red },\n  };\n\n  const editMessage: MessageActionType = {\n    action: () => {\n      setOverlay('none');\n      if (handleEdit) {\n        handleEdit(message);\n      }\n      handleEditMessage();\n    },\n    actionType: 'editMessage',\n    icon: <Edit pathFill={grey} />,\n    title: t('Edit Message'),\n  };\n\n  const pinMessage: MessageActionType = {\n    action: () => {\n      setOverlay('none');\n      if (handlePinMessage) {\n        handlePinMessage(message);\n      }\n      handleTogglePinMessage();\n    },\n    actionType: 'pinMessage',\n    icon: <Pin height={23} pathFill={grey} width={24} />,\n    title: t('Pin to Conversation'),\n  };\n\n  const unpinMessage: MessageActionType = {\n    action: () => {\n      setOverlay('none');\n      if (handlePinMessage) {\n        handlePinMessage(message);\n      }\n      handleTogglePinMessage();\n    },\n    actionType: 'unpinMessage',\n    icon: <Unpin pathFill={grey} />,\n    title: t('Unpin from Conversation'),\n  };\n\n  const flagMessage: MessageActionType = {\n    action: () => {\n      setOverlay('alert');\n      if (message.id) {\n        Alert.alert(\n          t('Flag Message'),\n          t('Do you want to send a copy of this message to a moderator for further investigation?'),\n          [\n            { onPress: () => setOverlay('none'), text: t('Cancel') },\n            {\n              onPress: async () => {\n                try {\n                  if (handleFlag) {\n                    handleFlag(message);\n                  }\n                  await client.flagMessage(message.id);\n                  Alert.alert(\n                    t('Message flagged'),\n                    t('The message has been reported to a moderator.'),\n                    [\n                      {\n                        onPress: () => setOverlay('none'),\n                        text: t('Ok'),\n                      },\n                    ],\n                  );\n                } catch (_) {\n                  Alert.alert(\n                    t('Cannot Flag Message'),\n                    t(\n                      'Flag action failed either due to a network issue or the message is already flagged',\n                    ),\n                    [\n                      {\n                        onPress: () => setOverlay('none'),\n                        text: t('Ok'),\n                      },\n                    ],\n                  );\n                }\n              },\n              text: t('Flag'),\n            },\n          ],\n          { cancelable: false },\n        );\n      }\n    },\n    actionType: 'flagMessage',\n    icon: <MessageFlag pathFill={grey} />,\n    title: t('Flag Message'),\n  };\n\n  const handleReaction = !error\n    ? selectReaction\n      ? selectReaction(message)\n      : async (reactionType: string) => {\n          if (handleReactionProp) {\n            handleReactionProp(message, reactionType);\n          }\n\n          await handleToggleReaction(reactionType);\n        }\n    : undefined;\n\n  const muteUser: MessageActionType = {\n    action: async () => {\n      setOverlay('none');\n      if (message.user?.id) {\n        if (handleMute) {\n          handleMute(message);\n        }\n\n        await handleToggleMuteUser();\n      }\n    },\n    actionType: 'muteUser',\n    icon: <Mute pathFill={grey} />,\n    title: isMuted ? t('Unmute User') : t('Mute User'),\n  };\n\n  const quotedReply: MessageActionType = {\n    action: () => {\n      setOverlay('none');\n      if (handleQuotedReply) {\n        handleQuotedReply(message);\n      }\n      handleQuotedReplyMessage();\n    },\n    actionType: 'quotedReply',\n    icon: <CurveLineLeftUp pathFill={grey} />,\n    title: t('Reply'),\n  };\n\n  const retry: MessageActionType = {\n    action: async () => {\n      setOverlay('none');\n      const messageWithoutReservedFields = removeReservedFields(message);\n      if (handleRetry) {\n        handleRetry(messageWithoutReservedFields);\n      }\n\n      await handleResendMessage();\n    },\n    actionType: 'retry',\n    icon: <SendUp pathFill={accent_blue} />,\n    title: t('Resend'),\n  };\n\n  const threadReply: MessageActionType = {\n    action: () => {\n      setOverlay('none');\n      if (handleThreadReply) {\n        handleThreadReply(message);\n      }\n      onOpenThread();\n    },\n    actionType: 'threadReply',\n    icon: <ThreadReply pathFill={grey} />,\n    title: t('Thread Reply'),\n  };\n\n  return {\n    blockUser,\n    copyMessage,\n    deleteMessage,\n    editMessage,\n    flagMessage,\n    handleReaction,\n    muteUser,\n    pinMessage,\n    quotedReply,\n    retry,\n    threadReply,\n    unpinMessage,\n  };\n};\n"],"mappings":"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"}