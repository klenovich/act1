{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_useCreateMessageContext","_useMessageActionHandlers","_useMessageActions2","_messageActions","_ChannelContext","_ChatContext","_KeyboardContext","_MessageContext","_MessageOverlayContext","_MessagesContext","_OverlayContext","_OwnCapabilitiesContext","_ThemeContext","_ThreadContext","_TranslationContext","_native","_utils","_useMessageList","_this","_jsxFileName","MessageWithContext","props","_message$user","isMessageTypeDeleted","message","type","sendReaction","channel","deleteMessageFromContext","deleteMessage","disabled","dismissKeyboard","dismissKeyboardOnMessageTouch","_props$enableLongPres","enableLongPress","enforceUniqueReaction","_props$forceAlignMess","forceAlignMessages","goToMessage","_props$groupStyles","groupStyles","handleBlock","handleCopy","handleDelete","handleEdit","handleFlag","handleMute","handlePinMessage","handleQuotedReply","handleReactionProp","handleReaction","handleRetry","handleThreadReply","chatContext","lastReceivedId","members","_props$messageActions","messageActions","messageActionsProp","defaultMessageActions","messageContentOrderProp","messageContentOrder","messagesContext","MessageSimple","onLongPressProp","onLongPress","onLongPressMessageProp","onLongPressMessage","onPressProp","onPress","onPressMessageProp","onPressMessage","onPressInProp","onPressIn","onPressInMessageProp","onPressInMessage","onThreadSelect","openThread","OverlayReactionList","preventPress","removeMessage","deleteReaction","retrySendMessage","selectReaction","setData","setEditingState","setOverlay","setQuotedMessageState","showAvatar","showMessageStatus","showUnreadUnderlay","style","supportedReactions","t","isTargetedMessage","_props$threadList","threadList","updateMessage","client","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","bg_gradient_start","targetedMessageBackground","_useTheme$theme$messa","messageSimple","targetedMessageContainer","targetedMessageUnderlay","actionsEnabled","status","MessageStatusTypes","RECEIVED","isMyMessage","userID","user","id","handleAction","_ref","_asyncToGenerator2","_regenerator","mark","_callee","name","value","data","wrap","_callee$","_context","prev","next","sendAction","_defineProperty2","sent","parent_id","stop","_x","_x2","apply","arguments","onPressQuotedMessage","quotedMessage","errorOrFailed","FAILED","error","length","undefined","Keyboard","dismiss","quoted_message","showMessageOverlay","alignment","attachments","Array","isArray","reduce","acc","cur","files","push","other","og_scrape_url","isVideoPackageAvailable","videos","image_url","asset_url","thumb_url","title_link","images","hasAttachmentActions","some","attachment","actions","filter","content","text","onlyEmojis","emojiRegex","test","onOpenThread","hasReactions","latest_reactions","clientId","reactions","_message$latest_react","reactionType","reactionsOfReactionType","reaction","hasOwnReaction","user_id","own","ownCapabilities","useOwnCapabilitiesContext","_useMessageActionHand","useMessageActionHandlers","handleDeleteMessage","handleEditMessage","handleQuotedReplyMessage","handleResendMessage","handleToggleBanUser","handleToggleMuteUser","handleTogglePinMessage","handleToggleReaction","_useMessageActions","useMessageActions","blockUser","copyMessage","editMessage","flagMessage","muteUser","pinMessage","quotedReply","retry","threadReply","unpinMessage","_useTranslationContex","useTranslationContext","userLanguage","_ref2","_callee2","messageReactions","isThreadMessage","dismissOverlay","_args2","_callee2$","_context2","Boolean","messageContext","_extends2","messageReactionTitle","otherAttachments","actionHandlers","resendMessage","toggleBanUser","toggleMuteUser","toggleReaction","payload","defaultHandler","emitter","event","triggerHaptic","useCreateMessageContext","lastGroupMessage","onPressArgs","additionalInfo","handleOnPress","onPressInArgs","handleOnpressIn","createElement","View","pinned","backgroundColor","testID","__self","__source","fileName","lineNumber","columnNumber","MessageProvider","areEqual","prevProps","nextProps","_prevMessage$quoted_m","_nextMessage$quoted_m","_prevMessage$quoted_m2","_nextMessage$quoted_m2","_prevMessage$user","_nextMessage$user","prevMutedUsers","mutedUsers","prevGoToMessage","prevGroupStyles","isAttachmentEqual","prevIsTargetedMessage","prevLastReceivedId","prevMembers","prevMessage","prevShowUnreadUnderlay","prevT","nextMutedUsers","nextGoToMessage","nextGroupStyles","nextIsTargetedMessage","nextLastReceivedId","nextMembers","nextMessage","nextShowUnreadUnderlay","nextT","membersEqual","Object","keys","repliesEqual","reply_count","lastReceivedIdChangedAndMatters","goToMessageChangedAndMatters","quoted_message_id","groupStylesEqual","isPrevMessageTypeDeleted","isNextMessageTypeDeleted","messageEqual","isMessageWithStylesReadByAndDateSeparator","readBy","updated_at","isPrevQuotedMessageTypeDeleted","isNextQuotedMessageTypeDeleted","quotedMessageEqual","messageUserBannedEqual","banned","prevMessageAttachments","nextMessageAttachments","attachmentsEqual","every","index","attachmentKeysEqual","latestReactionsEqual","_ref3","_nextMessage$latest_r","mutedUserSame","mutedUser","_prevMessage$user2","target","_nextMessage$user2","showUnreadUnderlayEqual","tEqual","targetedMessageEqual","MemoizedMessage","React","memo","Message","_useChannelContext","useChannelContext","useChatContext","_useKeyboardContext","useKeyboardContext","_useMessageOverlayCon","useMessageOverlayContext","useMessagesContext","_useOverlayContext","useOverlayContext","_useThreadContext","useThreadContext","_useTranslationContex2","exports"],"sources":["Message.tsx"],"sourcesContent":["import React from 'react';\nimport { GestureResponderEvent, Keyboard, StyleProp, View, ViewStyle } from 'react-native';\n\nimport type { Attachment, UserResponse } from 'stream-chat';\n\nimport { useCreateMessageContext } from './hooks/useCreateMessageContext';\nimport { useMessageActionHandlers } from './hooks/useMessageActionHandlers';\nimport { useMessageActions } from './hooks/useMessageActions';\nimport { messageActions as defaultMessageActions } from './utils/messageActions';\n\nimport {\n  ChannelContextValue,\n  useChannelContext,\n} from '../../contexts/channelContext/ChannelContext';\nimport { ChatContextValue, useChatContext } from '../../contexts/chatContext/ChatContext';\nimport {\n  KeyboardContextValue,\n  useKeyboardContext,\n} from '../../contexts/keyboardContext/KeyboardContext';\nimport {\n  MessageContextValue,\n  MessageProvider,\n  Reactions,\n} from '../../contexts/messageContext/MessageContext';\nimport {\n  MessageOverlayContextValue,\n  useMessageOverlayContext,\n} from '../../contexts/messageOverlayContext/MessageOverlayContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport {\n  OverlayContextValue,\n  useOverlayContext,\n} from '../../contexts/overlayContext/OverlayContext';\nimport { useOwnCapabilitiesContext } from '../../contexts/ownCapabilitiesContext/OwnCapabilitiesContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { ThreadContextValue, useThreadContext } from '../../contexts/threadContext/ThreadContext';\nimport {\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../contexts/translationContext/TranslationContext';\n\nimport { isVideoPackageAvailable, triggerHaptic } from '../../native';\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { emojiRegex, MessageStatusTypes } from '../../utils/utils';\n\nimport {\n  isMessageWithStylesReadByAndDateSeparator,\n  MessageType,\n} from '../MessageList/hooks/useMessageList';\nimport type { MessageActionListItemProps } from '../MessageOverlay/MessageActionListItem';\n\nexport type TouchableEmitter =\n  | 'fileAttachment'\n  | 'gallery'\n  | 'giphy'\n  | 'message'\n  | 'messageContent'\n  | 'messageReplies'\n  | 'reactionList';\n\nexport type TextMentionTouchableHandlerPayload<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  emitter: 'textMention';\n  additionalInfo?: { user?: UserResponse<StreamChatGenerics> };\n};\n\nexport type UrlTouchableHandlerPayload = {\n  emitter: 'textLink' | 'card';\n  additionalInfo?: { url?: string };\n};\n\nexport type FileAttachmentTouchableHandlerPayload<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  emitter: 'fileAttachment';\n  additionalInfo?: { attachment?: Attachment<StreamChatGenerics> };\n};\n\nexport type TouchableHandlerPayload = {\n  defaultHandler?: () => void;\n  event?: GestureResponderEvent;\n} & (\n  | {\n      emitter?: Exclude<TouchableEmitter, 'textMention' | 'textLink' | 'card' | 'fileAttachment'>;\n    }\n  | TextMentionTouchableHandlerPayload\n  | UrlTouchableHandlerPayload\n  | FileAttachmentTouchableHandlerPayload\n);\n\nexport type MessageTouchableHandlerPayload<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = TouchableHandlerPayload & {\n  actionHandlers?: MessageActionHandlers;\n  additionalInfo?: Record<string, unknown>;\n  message?: MessageType<StreamChatGenerics>;\n};\n\nexport type MessageActionHandlers = {\n  deleteMessage: () => Promise<void>;\n  editMessage: () => void;\n  pinMessage: () => Promise<void>;\n  quotedReply: () => void;\n  resendMessage: () => Promise<void>;\n  showMessageOverlay: () => void;\n  toggleBanUser: () => Promise<void>;\n  toggleMuteUser: () => Promise<void>;\n  toggleReaction: (reactionType: string) => Promise<void>;\n};\n\nexport type MessagePropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  ChannelContextValue<StreamChatGenerics>,\n  'channel' | 'disabled' | 'enforceUniqueReaction' | 'members'\n> &\n  Pick<KeyboardContextValue, 'dismissKeyboard'> &\n  Partial<Omit<MessageContextValue<StreamChatGenerics>, 'groupStyles' | 'message'>> &\n  Pick<MessageContextValue<StreamChatGenerics>, 'groupStyles' | 'message'> &\n  Pick<\n    MessagesContextValue<StreamChatGenerics>,\n    | 'sendReaction'\n    | 'deleteMessage'\n    | 'dismissKeyboardOnMessageTouch'\n    | 'forceAlignMessages'\n    | 'handleBlock'\n    | 'handleCopy'\n    | 'handleDelete'\n    | 'handleEdit'\n    | 'handleFlag'\n    | 'handleMute'\n    | 'handlePinMessage'\n    | 'handleQuotedReply'\n    | 'handleReaction'\n    | 'handleRetry'\n    | 'handleThreadReply'\n    | 'isAttachmentEqual'\n    | 'messageActions'\n    | 'messageContentOrder'\n    | 'MessageSimple'\n    | 'onLongPressMessage'\n    | 'onPressInMessage'\n    | 'onPressMessage'\n    | 'OverlayReactionList'\n    | 'removeMessage'\n    | 'deleteReaction'\n    | 'retrySendMessage'\n    | 'selectReaction'\n    | 'setEditingState'\n    | 'setQuotedMessageState'\n    | 'supportedReactions'\n    | 'updateMessage'\n  > &\n  Pick<MessageOverlayContextValue<StreamChatGenerics>, 'setData'> &\n  Pick<OverlayContextValue, 'setOverlay'> &\n  Pick<ThreadContextValue<StreamChatGenerics>, 'openThread'> &\n  Pick<TranslationContextValue, 't'> & {\n    chatContext: ChatContextValue<StreamChatGenerics>;\n    messagesContext: MessagesContextValue<StreamChatGenerics>;\n    /**\n     * Whether or not users are able to long press messages.\n     */\n    enableLongPress?: boolean;\n    goToMessage?: (messageId: string) => void;\n    isTargetedMessage?: boolean;\n    /**\n     * Array of allowed actions or null on message, this can also be a function returning the array.\n     * If all the actions need to be disabled an empty array should be provided as value of prop\n     */\n    /**\n     * You can call methods available on the Message\n     * component such as handleEdit, handleDelete, handleAction etc.\n     *\n     * Source - [Message](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/Message/Message.tsx)\n     *\n     * By default, we show the overlay with all the message actions on long press.\n     *\n     * @param message Message object which was long pressed\n     * @param event   Event object for onLongPress event\n     **/\n    onLongPress?: (payload: Partial<MessageTouchableHandlerPayload<StreamChatGenerics>>) => void;\n\n    /**\n     * You can call methods available on the Message\n     * component such as handleEdit, handleDelete, handleAction etc.\n     *\n     * Source - [Message](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/Message/Message.tsx)\n     *\n     * By default, we will dismiss the keyboard on press.\n     *\n     * @param message Message object which was long pressed\n     * @param event   Event object for onLongPress event\n     * */\n    onPress?: (payload: Partial<MessageTouchableHandlerPayload<StreamChatGenerics>>) => void;\n    onPressIn?: (payload: Partial<MessageTouchableHandlerPayload<StreamChatGenerics>>) => void;\n    /**\n     * Handler to open the thread on message. This is callback for touch event for replies button.\n     *\n     * @param message A message object to open the thread upon.\n     */\n    onThreadSelect?: (message: MessageType<StreamChatGenerics>) => void;\n    showUnreadUnderlay?: boolean;\n    style?: StyleProp<ViewStyle>;\n  };\n\n/**\n * Since this component doesn't consume `messages` from `MessagesContext`,\n * we memoized and broke it up to prevent new messages from re-rendering\n * each individual Message component.\n */\nconst MessageWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessagePropsWithContext<StreamChatGenerics>,\n) => {\n  const isMessageTypeDeleted = props.message.type === 'deleted';\n\n  const {\n    sendReaction,\n    channel,\n    deleteMessage: deleteMessageFromContext,\n    disabled,\n    dismissKeyboard,\n    dismissKeyboardOnMessageTouch,\n    enableLongPress = true,\n    enforceUniqueReaction,\n    forceAlignMessages = false,\n    goToMessage,\n    groupStyles = ['bottom'],\n    handleBlock,\n    handleCopy,\n    handleDelete,\n    handleEdit,\n    handleFlag,\n    handleMute,\n    handlePinMessage,\n    handleQuotedReply,\n    handleReaction: handleReactionProp,\n    handleRetry,\n    handleThreadReply,\n    chatContext,\n    lastReceivedId,\n    members,\n    message,\n    messageActions: messageActionsProp = defaultMessageActions,\n    messageContentOrder: messageContentOrderProp,\n    messagesContext,\n    MessageSimple,\n    onLongPress: onLongPressProp,\n    onLongPressMessage: onLongPressMessageProp,\n    onPress: onPressProp,\n    onPressMessage: onPressMessageProp,\n    onPressIn: onPressInProp,\n    onPressInMessage: onPressInMessageProp,\n    onThreadSelect,\n    openThread,\n    OverlayReactionList,\n    preventPress,\n    removeMessage,\n    deleteReaction,\n    retrySendMessage,\n    selectReaction,\n    setData,\n    setEditingState,\n    setOverlay,\n    setQuotedMessageState,\n    showAvatar,\n    showMessageStatus,\n    showUnreadUnderlay,\n    style,\n    supportedReactions,\n    t,\n    isTargetedMessage,\n    threadList = false,\n    updateMessage,\n  } = props;\n  const { client } = chatContext;\n  const {\n    theme: {\n      colors: { bg_gradient_start, targetedMessageBackground },\n      messageSimple: { targetedMessageContainer, targetedMessageUnderlay },\n    },\n  } = useTheme();\n\n  const actionsEnabled =\n    message.type === 'regular' && message.status === MessageStatusTypes.RECEIVED;\n\n  const isMyMessage = client && message && client.userID === message.user?.id;\n\n  const handleAction = async (name: string, value: string) => {\n    if (message.id) {\n      const data = await channel?.sendAction(message.id, { [name]: value });\n      if (data?.message) {\n        updateMessage(data.message);\n      } else {\n        removeMessage({\n          id: message.id,\n          parent_id: message.parent_id,\n        });\n      }\n    }\n  };\n\n  const onPressQuotedMessage = (quotedMessage: MessageType<StreamChatGenerics>) => {\n    if (!goToMessage) return;\n\n    goToMessage(quotedMessage.id);\n  };\n\n  const errorOrFailed = message.type === 'error' || message.status === MessageStatusTypes.FAILED;\n\n  const onPress = (error = errorOrFailed) => {\n    if (dismissKeyboardOnMessageTouch) {\n      Keyboard.dismiss();\n    }\n    const quotedMessage = message.quoted_message as MessageType<StreamChatGenerics>;\n    if (error) {\n      showMessageOverlay(false, true);\n    } else if (quotedMessage) {\n      onPressQuotedMessage(quotedMessage);\n    }\n  };\n\n  const alignment =\n    forceAlignMessages && (forceAlignMessages === 'left' || forceAlignMessages === 'right')\n      ? forceAlignMessages\n      : isMyMessage\n      ? 'right'\n      : 'left';\n\n  /**\n   * attachments contain files/images or other attachments\n   *\n   * if a URL attachment is present with a file/image then we\n   * show just the text and markdown should make the link\n   * clickable\n   */\n  const attachments =\n    !isMessageTypeDeleted && Array.isArray(message.attachments)\n      ? message.attachments.reduce(\n          (acc, cur) => {\n            if (cur.type === 'file') {\n              acc.files.push(cur);\n              acc.other = []; // remove other attachments if a file exists\n            } else if (cur.type === 'video' && !cur.og_scrape_url && isVideoPackageAvailable()) {\n              acc.videos.push({\n                image_url: cur.asset_url,\n                thumb_url: cur.thumb_url,\n                type: 'video',\n              });\n              acc.other = [];\n            } else if (cur.type === 'video' && !cur.og_scrape_url) {\n              acc.files.push(cur);\n              acc.other = []; // remove other attachments if a file exists\n            } else if (cur.type === 'audio') {\n              acc.files.push(cur);\n            } else if (cur.type === 'image' && !cur.title_link && !cur.og_scrape_url) {\n              /**\n               * this next if is not combined with the above one for cases where we have\n               * an image with no url links at all falling back to being an attachment\n               */\n              if (cur.image_url || cur.thumb_url) {\n                acc.images.push(cur);\n                acc.other = []; // remove other attachments if an image exists\n              }\n              // only add other attachments if there are no files/images\n            } else if (!acc.files.length && !acc.images.length && !acc.videos.length) {\n              acc.other.push(cur);\n            }\n\n            return acc;\n          },\n          {\n            files: [] as Attachment<StreamChatGenerics>[],\n            images: [] as Attachment<StreamChatGenerics>[],\n            other: [] as Attachment<StreamChatGenerics>[],\n            videos: [] as Attachment<StreamChatGenerics>[],\n          },\n        )\n      : {\n          files: [] as Attachment<StreamChatGenerics>[],\n          images: [] as Attachment<StreamChatGenerics>[],\n          other: [] as Attachment<StreamChatGenerics>[],\n          videos: [] as Attachment<StreamChatGenerics>[],\n        };\n  /**\n   * Check if any actions to prevent long press\n   */\n  const hasAttachmentActions =\n    !isMessageTypeDeleted &&\n    Array.isArray(message.attachments) &&\n    message.attachments.some((attachment) => attachment.actions && attachment.actions.length);\n\n  const messageContentOrder = messageContentOrderProp.filter((content) => {\n    if (content === 'quoted_reply') {\n      return !!message.quoted_message;\n    }\n\n    switch (content) {\n      case 'attachments':\n        return !!attachments.other.length;\n      case 'files':\n        return !!attachments.files.length;\n      case 'gallery':\n        return !!attachments.images.length || !!attachments.videos.length;\n      case 'text':\n      default:\n        return !!message.text;\n    }\n  });\n\n  const onlyEmojis =\n    !attachments.files.length &&\n    !attachments.images.length &&\n    !attachments.other.length &&\n    !!message.text &&\n    emojiRegex.test(message.text);\n\n  const onOpenThread = () => {\n    if (onThreadSelect) {\n      onThreadSelect(message);\n    }\n    if (openThread) {\n      openThread(message);\n    }\n  };\n\n  const hasReactions =\n    !isMessageTypeDeleted && !!message.latest_reactions && message.latest_reactions.length > 0;\n\n  const clientId = client.userID;\n\n  const reactions = hasReactions\n    ? supportedReactions.reduce((acc, cur) => {\n        const reactionType = cur.type;\n        const reactionsOfReactionType = message.latest_reactions?.filter(\n          (reaction) => reaction.type === reactionType,\n        );\n\n        if (reactionsOfReactionType?.length) {\n          const hasOwnReaction = reactionsOfReactionType.some(\n            (reaction) => reaction.user_id === clientId,\n          );\n          acc.push({ own: hasOwnReaction, type: reactionType });\n        }\n\n        return acc;\n      }, [] as Reactions)\n    : [];\n\n  const ownCapabilities = useOwnCapabilitiesContext();\n\n  const {\n    handleDeleteMessage,\n    handleEditMessage,\n    handleQuotedReplyMessage,\n    handleResendMessage,\n    handleToggleBanUser,\n    handleToggleMuteUser,\n    handleTogglePinMessage,\n    handleToggleReaction,\n  } = useMessageActionHandlers({\n    channel,\n    client,\n    deleteMessage: deleteMessageFromContext,\n    deleteReaction,\n    enforceUniqueReaction,\n    message,\n    retrySendMessage,\n    sendReaction,\n    setEditingState,\n    setQuotedMessageState,\n    supportedReactions,\n  });\n\n  const {\n    blockUser,\n    copyMessage,\n    deleteMessage,\n    editMessage,\n    flagMessage,\n    handleReaction,\n    muteUser,\n    pinMessage,\n    quotedReply,\n    retry,\n    threadReply,\n    unpinMessage,\n  } = useMessageActions({\n    channel,\n    client,\n    deleteMessage: deleteMessageFromContext,\n    deleteReaction,\n    enforceUniqueReaction,\n    handleBlock,\n    handleCopy,\n    handleDelete,\n    handleEdit,\n    handleFlag,\n    handleMute,\n    handlePinMessage,\n    handleQuotedReply,\n    handleReaction: handleReactionProp,\n    handleRetry,\n    handleThreadReply,\n    message,\n    onThreadSelect,\n    openThread,\n    removeMessage,\n    retrySendMessage,\n    selectReaction,\n    sendReaction,\n    setEditingState,\n    setOverlay,\n    setQuotedMessageState,\n    supportedReactions,\n    t,\n    updateMessage,\n  });\n\n  const { userLanguage } = useTranslationContext();\n\n  const showMessageOverlay = async (messageReactions = false, error = errorOrFailed) => {\n    await dismissKeyboard();\n\n    const isThreadMessage = threadList || !!message.parent_id;\n\n    const dismissOverlay = () => setOverlay('none');\n\n    const messageActions =\n      typeof messageActionsProp !== 'function'\n        ? messageActionsProp\n        : messageActionsProp({\n            blockUser,\n            copyMessage,\n            deleteMessage,\n            dismissOverlay,\n            editMessage,\n            error,\n            flagMessage,\n            isMyMessage,\n            isThreadMessage,\n            message,\n            messageReactions,\n            muteUser,\n            ownCapabilities,\n            pinMessage,\n            quotedReply,\n            retry,\n            threadReply,\n            unpinMessage,\n          });\n\n    setData({\n      alignment,\n      chatContext,\n      clientId: client.userID,\n      files: attachments.files,\n      groupStyles,\n      handleReaction: ownCapabilities.sendReaction ? handleReaction : undefined,\n      images: attachments.images,\n      message,\n      messageActions: messageActions?.filter(Boolean) as MessageActionListItemProps[] | undefined,\n      messageContext: { ...messageContext, disabled: true, preventPress: true },\n      messageReactionTitle: !error && messageReactions ? t('Message Reactions') : undefined,\n      messagesContext: { ...messagesContext, messageContentOrder },\n      onlyEmojis,\n      otherAttachments: attachments.other,\n      OverlayReactionList,\n      ownCapabilities,\n      supportedReactions,\n      threadList,\n      userLanguage,\n      videos: attachments.videos,\n    });\n\n    setOverlay('message');\n  };\n\n  const actionHandlers: MessageActionHandlers = {\n    deleteMessage: handleDeleteMessage,\n    editMessage: handleEditMessage,\n    pinMessage: handleTogglePinMessage,\n    quotedReply: handleQuotedReplyMessage,\n    resendMessage: handleResendMessage,\n    showMessageOverlay,\n    toggleBanUser: handleToggleBanUser,\n    toggleMuteUser: handleToggleMuteUser,\n    toggleReaction: handleToggleReaction,\n  };\n\n  const onLongPressMessage =\n    disabled || hasAttachmentActions\n      ? () => null\n      : onLongPressMessageProp\n      ? (payload?: TouchableHandlerPayload) =>\n          onLongPressMessageProp({\n            actionHandlers,\n            defaultHandler: payload?.defaultHandler || showMessageOverlay,\n            emitter: payload?.emitter || 'message',\n            event: payload?.event,\n            message,\n          })\n      : onLongPressProp\n      ? (payload?: TouchableHandlerPayload) =>\n          onLongPressProp({\n            actionHandlers,\n            defaultHandler: payload?.defaultHandler || showMessageOverlay,\n            emitter: payload?.emitter || 'message',\n            event: payload?.event,\n          })\n      : enableLongPress\n      ? () => {\n          triggerHaptic('impactMedium');\n          showMessageOverlay(false);\n        }\n      : () => null;\n\n  const messageContext = useCreateMessageContext({\n    actionsEnabled,\n    alignment,\n    channel,\n    disabled,\n    files: attachments.files,\n    goToMessage,\n    groupStyles,\n    handleAction,\n    handleDeleteMessage,\n    handleEditMessage,\n    handleQuotedReplyMessage,\n    handleResendMessage,\n    handleToggleBanUser,\n    handleToggleMuteUser,\n    handleToggleReaction,\n    hasReactions,\n    images: attachments.images,\n    isMyMessage,\n    lastGroupMessage: groupStyles?.[0] === 'single' || groupStyles?.[0] === 'bottom',\n    lastReceivedId,\n    members,\n    message,\n    messageContentOrder,\n    onLongPress: onLongPressMessage,\n    onlyEmojis,\n    onOpenThread,\n    onPress: (payload) => {\n      const onPressArgs = {\n        actionHandlers,\n        additionalInfo: payload.additionalInfo,\n        defaultHandler: payload.defaultHandler || onPress,\n        emitter: payload.emitter || 'message',\n        event: payload.event,\n        message,\n      };\n\n      const handleOnPress = () => {\n        if (onPressProp) return onPressProp(onPressArgs);\n        if (onPressMessageProp) return onPressMessageProp(onPressArgs);\n        if (payload.defaultHandler) return payload.defaultHandler();\n\n        return onPress();\n      };\n\n      handleOnPress();\n    },\n    onPressIn:\n      onPressInProp || onPressInMessageProp\n        ? (payload) => {\n            const onPressInArgs = {\n              actionHandlers,\n              defaultHandler: payload.defaultHandler,\n              emitter: payload.emitter || 'message',\n              event: payload.event,\n              message,\n            };\n            const handleOnpressIn = () => {\n              if (onPressInProp) return onPressInProp(onPressInArgs);\n              if (onPressInMessageProp) return onPressInMessageProp(onPressInArgs);\n            };\n            handleOnpressIn();\n          }\n        : null,\n    otherAttachments: attachments.other,\n    preventPress,\n    reactions,\n    showAvatar,\n    showMessageOverlay,\n    showMessageStatus: typeof showMessageStatus === 'boolean' ? showMessageStatus : isMyMessage,\n    threadList,\n    videos: attachments.videos,\n  });\n\n  if (!(isMessageTypeDeleted || messageContentOrder.length)) return null;\n\n  return (\n    <View\n      style={[\n        message.pinned && {\n          ...targetedMessageContainer,\n          backgroundColor: targetedMessageBackground,\n        },\n      ]}\n      testID='message-wrapper'\n    >\n      <View\n        style={[\n          style,\n          {\n            backgroundColor: showUnreadUnderlay ? bg_gradient_start : undefined,\n          },\n        ]}\n      >\n        <View\n          style={[\n            isTargetedMessage\n              ? { backgroundColor: targetedMessageBackground, ...targetedMessageUnderlay }\n              : {},\n          ]}\n        >\n          <MessageProvider value={messageContext}>\n            <MessageSimple />\n          </MessageProvider>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessagePropsWithContext<StreamChatGenerics>,\n  nextProps: MessagePropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    chatContext: { mutedUsers: prevMutedUsers },\n    goToMessage: prevGoToMessage,\n    groupStyles: prevGroupStyles,\n    isAttachmentEqual,\n    isTargetedMessage: prevIsTargetedMessage,\n    lastReceivedId: prevLastReceivedId,\n    members: prevMembers,\n    message: prevMessage,\n    showUnreadUnderlay: prevShowUnreadUnderlay,\n    t: prevT,\n  } = prevProps;\n  const {\n    chatContext: { mutedUsers: nextMutedUsers },\n    goToMessage: nextGoToMessage,\n    groupStyles: nextGroupStyles,\n    isTargetedMessage: nextIsTargetedMessage,\n    lastReceivedId: nextLastReceivedId,\n    members: nextMembers,\n    message: nextMessage,\n    showUnreadUnderlay: nextShowUnreadUnderlay,\n    t: nextT,\n  } = nextProps;\n\n  const membersEqual = Object.keys(prevMembers).length === Object.keys(nextMembers).length;\n  if (!membersEqual) return false;\n\n  const repliesEqual = prevMessage.reply_count === nextMessage.reply_count;\n  if (!repliesEqual) return false;\n\n  const lastReceivedIdChangedAndMatters =\n    prevLastReceivedId !== nextLastReceivedId &&\n    (prevLastReceivedId === prevMessage.id ||\n      prevLastReceivedId === nextMessage.id ||\n      nextLastReceivedId === prevMessage.id ||\n      nextLastReceivedId === nextMessage.id);\n\n  if (lastReceivedIdChangedAndMatters) return false;\n\n  const goToMessageChangedAndMatters =\n    nextMessage.quoted_message_id && prevGoToMessage !== nextGoToMessage;\n\n  if (goToMessageChangedAndMatters) return false;\n\n  const groupStylesEqual =\n    prevGroupStyles.length === nextGroupStyles.length && prevGroupStyles[0] === nextGroupStyles[0];\n  if (!groupStylesEqual) return false;\n\n  const isPrevMessageTypeDeleted = prevMessage.type === 'deleted';\n  const isNextMessageTypeDeleted = nextMessage.type === 'deleted';\n\n  const messageEqual =\n    isPrevMessageTypeDeleted === isNextMessageTypeDeleted &&\n    (isMessageWithStylesReadByAndDateSeparator(prevMessage) && prevMessage.readBy) ===\n      (isMessageWithStylesReadByAndDateSeparator(nextMessage) && nextMessage.readBy) &&\n    prevMessage.status === nextMessage.status &&\n    prevMessage.type === nextMessage.type &&\n    prevMessage.text === nextMessage.text &&\n    prevMessage.pinned === nextMessage.pinned &&\n    `${prevMessage?.updated_at}` === `${nextMessage?.updated_at}`;\n\n  if (!messageEqual) return false;\n\n  const isPrevQuotedMessageTypeDeleted = prevMessage.quoted_message?.type === 'deleted';\n  const isNextQuotedMessageTypeDeleted = nextMessage.quoted_message?.type === 'deleted';\n\n  const quotedMessageEqual =\n    prevMessage.quoted_message?.id === nextMessage.quoted_message?.id &&\n    isPrevQuotedMessageTypeDeleted === isNextQuotedMessageTypeDeleted;\n\n  if (!quotedMessageEqual) return false;\n\n  const messageUserBannedEqual = prevMessage.user?.banned === nextMessage.user?.banned;\n  if (!messageUserBannedEqual) return false;\n\n  const prevMessageAttachments = prevMessage.attachments;\n  const nextMessageAttachments = nextMessage.attachments;\n  const attachmentsEqual =\n    (Array.isArray(prevMessageAttachments) &&\n      Array.isArray(nextMessageAttachments) &&\n      prevMessageAttachments.length === nextMessageAttachments.length &&\n      prevMessageAttachments.every((attachment, index) => {\n        const attachmentKeysEqual =\n          attachment.type === 'image'\n            ? attachment.image_url === nextMessageAttachments[index].image_url &&\n              attachment.thumb_url === nextMessageAttachments[index].thumb_url\n            : attachment.type === nextMessageAttachments[index].type;\n\n        if (isAttachmentEqual)\n          return (\n            attachmentKeysEqual && !!isAttachmentEqual(attachment, nextMessageAttachments[index])\n          );\n\n        return attachmentKeysEqual;\n      })) ||\n    prevMessageAttachments === nextMessageAttachments;\n  if (!attachmentsEqual) return false;\n\n  const latestReactionsEqual =\n    Array.isArray(prevMessage.latest_reactions) && Array.isArray(nextMessage.latest_reactions)\n      ? prevMessage.latest_reactions.length === nextMessage.latest_reactions.length &&\n        prevMessage.latest_reactions.every(\n          ({ type }, index) => type === nextMessage.latest_reactions?.[index].type,\n        )\n      : prevMessage.latest_reactions === nextMessage.latest_reactions;\n  if (!latestReactionsEqual) return false;\n\n  const mutedUserSame =\n    prevMutedUsers.length === nextMutedUsers.length ||\n    prevMutedUsers.some((mutedUser) => mutedUser.target.id === prevMessage.user?.id) ===\n      nextMutedUsers.some((mutedUser) => mutedUser.target.id === nextMessage.user?.id);\n  if (!mutedUserSame) return false;\n\n  const showUnreadUnderlayEqual = prevShowUnreadUnderlay === nextShowUnreadUnderlay;\n  if (!showUnreadUnderlayEqual) return false;\n\n  const tEqual = prevT === nextT;\n  if (!tEqual) return false;\n\n  const targetedMessageEqual = prevIsTargetedMessage === nextIsTargetedMessage;\n  if (!targetedMessageEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessage = React.memo(MessageWithContext, areEqual) as typeof MessageWithContext;\n\nexport type MessageProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<Omit<MessagePropsWithContext<StreamChatGenerics>, 'groupStyles' | 'message'>> &\n  Pick<MessagePropsWithContext<StreamChatGenerics>, 'groupStyles' | 'message'>;\n\n/**\n * Message - A high level component which implements all the logic required for a message.\n * The actual rendering of the message is delegated via the \"Message\" property\n *\n * @example ./Message.md\n */\nexport const Message = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageProps<StreamChatGenerics>,\n) => {\n  const { channel, disabled, enforceUniqueReaction, members } =\n    useChannelContext<StreamChatGenerics>();\n  const chatContext = useChatContext<StreamChatGenerics>();\n  const { dismissKeyboard } = useKeyboardContext();\n  const { setData } = useMessageOverlayContext<StreamChatGenerics>();\n  const messagesContext = useMessagesContext<StreamChatGenerics>();\n  const { setOverlay } = useOverlayContext();\n  const { openThread } = useThreadContext<StreamChatGenerics>();\n  const { t } = useTranslationContext();\n\n  return (\n    <MemoizedMessage<StreamChatGenerics>\n      {...messagesContext}\n      {...{\n        channel,\n        chatContext,\n        disabled,\n        dismissKeyboard,\n        enforceUniqueReaction,\n        members,\n        messagesContext,\n        openThread,\n        setData,\n        setOverlay,\n        t,\n      }}\n      {...props}\n    />\n  );\n};\n"],"mappings":"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"}