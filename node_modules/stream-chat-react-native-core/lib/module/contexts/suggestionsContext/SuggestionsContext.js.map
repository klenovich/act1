{"version":3,"names":["_react","_interopRequireWildcard","require","_defaultBaseContextValue","_getDisplayName","_isTestEnvironment","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","isSuggestionCommand","suggestion","exports","isSuggestionEmoji","isSuggestionUser","SuggestionsContext","React","createContext","DEFAULT_BASE_CONTEXT_VALUE","SuggestionsProvider","_ref","children","value","_useState","useState","_useState2","_slicedToArray2","triggerType","setTriggerType","_useState3","_useState4","suggestions","setSuggestions","_useState5","_useState6","suggestionsViewActive","setSuggestionsViewActive","openSuggestions","component","updateSuggestions","newSuggestions","closeSuggestions","undefined","suggestionsContext","_extends2","createElement","Provider","__self","__source","fileName","lineNumber","columnNumber","useSuggestionsContext","contextValue","useContext","isTestEnvironment","Error","withSuggestionsContext","Component","WithSuggestionsContextComponent","props","displayName","getDisplayName"],"sources":["SuggestionsContext.tsx"],"sourcesContent":["import React, { PropsWithChildren, useContext, useState } from 'react';\n\nimport type { CommandResponse, UserResponse } from 'stream-chat';\n\nimport type { AutoCompleteSuggestionHeaderProps } from '../../components/AutoCompleteInput/AutoCompleteSuggestionHeader';\nimport type { AutoCompleteSuggestionItemProps } from '../../components/AutoCompleteInput/AutoCompleteSuggestionItem';\nimport type { AutoCompleteSuggestionListProps } from '../../components/AutoCompleteInput/AutoCompleteSuggestionList';\nimport type { Emoji } from '../../emoji-data/compiled';\nimport type { DefaultStreamChatGenerics, UnknownType } from '../../types/types';\nimport { DEFAULT_BASE_CONTEXT_VALUE } from '../utils/defaultBaseContextValue';\n\nimport { getDisplayName } from '../utils/getDisplayName';\nimport { isTestEnvironment } from '../utils/isTestEnvironment';\n\nexport type SuggestionComponentType = 'command' | 'emoji' | 'mention';\n\nexport const isSuggestionCommand = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  suggestion: Suggestion<StreamChatGenerics>,\n): suggestion is SuggestionCommand<StreamChatGenerics> => 'args' in suggestion;\n\nexport const isSuggestionEmoji = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  suggestion: Suggestion<StreamChatGenerics>,\n): suggestion is Emoji => 'unicode' in suggestion;\n\nexport const isSuggestionUser = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  suggestion: Suggestion<StreamChatGenerics>,\n): suggestion is SuggestionUser<StreamChatGenerics> => 'id' in suggestion;\n\nexport type Suggestion<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Emoji | SuggestionCommand<StreamChatGenerics> | SuggestionUser<StreamChatGenerics>;\n\nexport type SuggestionCommand<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = CommandResponse<StreamChatGenerics>;\nexport type SuggestionUser<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = UserResponse<StreamChatGenerics>;\n\nexport type Suggestions<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  data: Suggestion<StreamChatGenerics>[];\n  onSelect: (item: Suggestion<StreamChatGenerics>) => void;\n  queryText?: string;\n};\n\nexport type SuggestionsContextValue<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  AutoCompleteSuggestionHeader: React.ComponentType<AutoCompleteSuggestionHeaderProps>;\n  AutoCompleteSuggestionItem: React.ComponentType<\n    AutoCompleteSuggestionItemProps<StreamChatGenerics>\n  >;\n  AutoCompleteSuggestionList: React.ComponentType<\n    AutoCompleteSuggestionListProps<StreamChatGenerics>\n  >;\n  /** Override handler for closing suggestions (mentions, command autocomplete etc) */\n  closeSuggestions: () => void;\n  /**\n   * Override handler for opening suggestions (mentions, command autocomplete etc)\n   *\n   * @param component {Component|element} UI Component for suggestion item.\n   * @overrideType Function\n   */\n  openSuggestions: (component: SuggestionComponentType) => Promise<void>;\n  suggestions: Suggestions<StreamChatGenerics>;\n  triggerType: SuggestionComponentType;\n  /**\n   * Override handler for updating suggestions (mentions, command autocomplete etc)\n   *\n   * @param newSuggestions {Component|element} UI Component for suggestion item.\n   * @overrideType Function\n   */\n  updateSuggestions: (newSuggestions: Suggestions<StreamChatGenerics>) => void;\n  queryText?: string;\n  suggestionsViewActive?: boolean;\n};\n\nexport const SuggestionsContext = React.createContext(\n  DEFAULT_BASE_CONTEXT_VALUE as SuggestionsContextValue,\n);\n\n/**\n * This provider component exposes the properties stored within the SuggestionsContext.\n */\nexport const SuggestionsProvider = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  children,\n  value,\n}: PropsWithChildren<{ value?: Partial<SuggestionsContextValue<StreamChatGenerics>> }>) => {\n  const [triggerType, setTriggerType] = useState<SuggestionComponentType | null>(null);\n  const [suggestions, setSuggestions] = useState<Suggestions<StreamChatGenerics>>();\n  const [suggestionsViewActive, setSuggestionsViewActive] = useState(false);\n\n  const openSuggestions = (component: SuggestionComponentType) => {\n    setTriggerType(component);\n    setSuggestionsViewActive(true);\n  };\n\n  const updateSuggestions = (newSuggestions: Suggestions<StreamChatGenerics>) => {\n    setSuggestions(newSuggestions);\n    setSuggestionsViewActive(!!triggerType);\n  };\n\n  const closeSuggestions = () => {\n    setTriggerType(null);\n    setSuggestions(undefined);\n    setSuggestionsViewActive(false);\n  };\n\n  const suggestionsContext = {\n    ...value,\n    closeSuggestions,\n    openSuggestions,\n    suggestions,\n    suggestionsViewActive,\n    triggerType,\n    updateSuggestions,\n  };\n\n  return (\n    <SuggestionsContext.Provider value={suggestionsContext as unknown as SuggestionsContextValue}>\n      {children}\n    </SuggestionsContext.Provider>\n  );\n};\n\nexport const useSuggestionsContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>() => {\n  const contextValue = useContext(\n    SuggestionsContext,\n  ) as unknown as SuggestionsContextValue<StreamChatGenerics>;\n\n  if (contextValue === DEFAULT_BASE_CONTEXT_VALUE && !isTestEnvironment()) {\n    throw new Error(\n      `The useSuggestionsContext hook was called outside of the SuggestionsContext provider. Make sure you have configured Channel component correctly - https://getstream.io/chat/docs/sdk/reactnative/basics/hello_stream_chat/#channel`,\n    );\n  }\n\n  return contextValue;\n};\n\nexport const withSuggestionsContext = <\n  P extends UnknownType,\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  Component: React.ComponentType<P>,\n): React.FC<Omit<P, keyof SuggestionsContextValue<StreamChatGenerics>>> => {\n  const WithSuggestionsContextComponent = (\n    props: Omit<P, keyof SuggestionsContextValue<StreamChatGenerics>>,\n  ) => {\n    const suggestionsContext = useSuggestionsContext<StreamChatGenerics>();\n\n    return <Component {...(props as P)} {...suggestionsContext} />;\n  };\n  WithSuggestionsContextComponent.displayName = `WithSuggestionsContext${getDisplayName(\n    Component,\n  )}`;\n  return WithSuggestionsContextComponent;\n};\n"],"mappings":"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"}