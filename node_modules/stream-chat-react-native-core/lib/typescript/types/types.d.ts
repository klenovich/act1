import type { ExtendableGenerics, LiteralStringForUnion } from 'stream-chat';
export declare type Asset = {
    duration: number | null;
    filename: string;
    height: number;
    source: 'camera' | 'picker';
    type: string;
    uri: string;
    width: number;
    fileSize?: number;
    id?: string;
    size?: number | string;
};
export declare type FileAssetType = {
    name: string;
    mimeType?: string;
    size?: number | string;
    uri?: string;
};
export declare type File = FileAssetType & {
    duration?: string | null;
    id?: string;
};
export declare type DefaultAttachmentType = UnknownType & {
    file_size?: number | string;
    mime_type?: string;
    originalFile?: File;
};
interface DefaultUserType extends UnknownType {
    image?: string;
}
interface DefaultChannelType extends UnknownType {
    [key: string]: unknown;
    image?: string;
}
export interface DefaultStreamChatGenerics extends ExtendableGenerics {
    attachmentType: DefaultAttachmentType;
    channelType: DefaultChannelType;
    commandType: LiteralStringForUnion;
    eventType: UnknownType;
    messageType: UnknownType;
    reactionType: UnknownType;
    userType: DefaultUserType;
}
export declare type UnknownType = Record<string, unknown>;
export declare type ValueOf<T> = T[keyof T];
export {};
