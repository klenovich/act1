import type { Channel, StreamChat } from 'stream-chat';
import type { Schema } from './schema';
export declare type Table = keyof Schema;
export declare type TableRow<T extends Table> = Schema[T];
export declare type TableRowJoinedUser<T extends Table> = Schema[T] & {
    user: TableRow<'users'>;
};
export declare type TableColumnNames<T extends Table> = keyof Schema[T];
export declare type TableColumnValue = string | boolean | number | undefined;
export declare type PreparedQueries = [string] | [string, Array<any>];
export declare type PendingTaskTypes = {
    deleteMessage: 'delete-message';
    deleteReaction: 'delete-reaction';
    sendReaction: 'send-reaction';
};
export declare type PendingTask = {
    channelId: string;
    channelType: string;
    messageId: string;
    id?: number;
} & ({
    payload: Parameters<Channel['sendReaction']>;
    type: PendingTaskTypes['sendReaction'];
} | {
    payload: Parameters<StreamChat['deleteMessage']>;
    type: PendingTaskTypes['deleteMessage'];
} | {
    payload: Parameters<Channel['deleteReaction']>;
    type: PendingTaskTypes['deleteReaction'];
});
