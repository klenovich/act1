{"version":3,"names":["_appendOrderByClause3","require","_appendWhereCluase","createSelectQuery","table","fields","arguments","length","undefined","whereCondition","orderBy","selectQuery","join","_appendWhereClause","appendWhereClause","_appendWhereClause2","_slicedToArray2","selectQueryWithWhere","whereParams","_appendOrderByClause","appendOrderByClause","_appendOrderByClause2","selectQueryWithOrderBy","exports"],"sources":["createSelectQuery.ts"],"sourcesContent":["import { appendOrderByClause } from './appendOrderByClause';\nimport { appendWhereClause } from './appendWhereCluase';\n\nimport type { Schema } from '../schema';\nimport type { PreparedQueries, TableColumnNames, TableColumnValue } from '../types';\n\n/**\n * Creates a simple select query for sqlite.\n *\n * @param {string} table Table name\n * @param {Array} fields Array of columns which need to be selected e.g., ['*'] or ['id', 'name']\n * @param {Object} whereCondition Where condition for select query.\n *  e.g., { id: 'vishal', cid: ['messaging:id1', 'messaging:id2'] }.\n *  All the conditions will be joined with AND in final query.\n * @returns {string} Final select query\n */\nexport const createSelectQuery = <T extends keyof Schema>(\n  table: T,\n  fields: Array<'*'> | Array<TableColumnNames<T>> = ['*'],\n  whereCondition?: Partial<{ [k in TableColumnNames<T>]: TableColumnValue | TableColumnValue[] }>,\n  orderBy?: Partial<{ [k in TableColumnNames<T>]: 1 | -1 }>,\n): PreparedQueries => {\n  const selectQuery = `SELECT ${fields.join(', ')} FROM ${table}`;\n  const [selectQueryWithWhere, whereParams] = appendWhereClause(selectQuery, whereCondition);\n  const [selectQueryWithOrderBy] = appendOrderByClause(selectQueryWithWhere, orderBy);\n\n  return [`${selectQueryWithOrderBy}`, whereParams || []];\n};\n"],"mappings":";;;;;;AAAA,IAAAA,qBAAA,GAAAC,OAAA;AACA,IAAAC,kBAAA,GAAAD,OAAA;AAeO,IAAME,iBAAiB,GAAG,SAApBA,iBAAiBA,CAC5BC,KAAQ,EAIY;EAAA,IAHpBC,MAA+C,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,GAAG,CAAC;EAAA,IACvDG,cAA+F,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAA,IAC/FE,OAAyD,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEzD,IAAMG,WAAW,eAAaN,MAAM,CAACO,IAAI,CAAC,IAAI,CAAC,cAASR,KAAO;EAC/D,IAAAS,kBAAA,GAA4C,IAAAC,oCAAiB,EAACH,WAAW,EAAEF,cAAc,CAAC;IAAAM,mBAAA,OAAAC,eAAA,aAAAH,kBAAA;IAAnFI,oBAAoB,GAAAF,mBAAA;IAAEG,WAAW,GAAAH,mBAAA;EACxC,IAAAI,oBAAA,GAAiC,IAAAC,yCAAmB,EAACH,oBAAoB,EAAEP,OAAO,CAAC;IAAAW,qBAAA,OAAAL,eAAA,aAAAG,oBAAA;IAA5EG,sBAAsB,GAAAD,qBAAA;EAE7B,OAAO,MAAIC,sBAAsB,EAAIJ,WAAW,IAAI,EAAE,CAAC;AACzD,CAAC;AAACK,OAAA,CAAApB,iBAAA,GAAAA,iBAAA"}