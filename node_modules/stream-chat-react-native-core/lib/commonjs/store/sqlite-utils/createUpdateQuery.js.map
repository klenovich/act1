{"version":3,"names":["_appendWhereCluase","require","createUpdateQuery","table","set","whereCondition","fields","Object","keys","map","key","updateQuery","join","_appendWhereClause","appendWhereClause","_appendWhereClause2","_slicedToArray2","updateQueryWithWhere","whereParams","concat","_toConsumableArray2","values","exports"],"sources":["createUpdateQuery.ts"],"sourcesContent":["import { appendWhereClause } from './appendWhereCluase';\n\nimport type { Schema } from '../schema';\nimport type { PreparedQueries, TableColumnNames, TableColumnValue, TableRow } from '../types';\n\n/**\n * Creates a simple update query for sqlite.\n *\n * @param {string} table Table name\n * @param {Object} set Set conditions for update query.\n * @param {Object} whereCondition Where condition for select query.\n *  e.g., { id: 'vishal', cid: ['messaging:id1', 'messaging:id2'] }.\n *  All the conditions will be joined with AND in final query.\n * @returns {string} Final update query for sqlite\n */\nexport const createUpdateQuery = <T extends keyof Schema>(\n  table: T,\n  set: Partial<TableRow<T>>,\n  whereCondition: Partial<{ [k in TableColumnNames<T>]: TableColumnValue | TableColumnValue[] }>,\n): PreparedQueries => {\n  const fields = Object.keys(set).map((key) => `${key} = ?`);\n\n  const updateQuery = `UPDATE OR IGNORE ${table} SET ${fields.join(',')}`;\n\n  const [updateQueryWithWhere, whereParams] = appendWhereClause(updateQuery, whereCondition);\n\n  return [`${updateQueryWithWhere}`, [...Object.values(set), ...(whereParams || [])]];\n};\n"],"mappings":";;;;;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AAeO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAC5BC,KAAQ,EACRC,GAAyB,EACzBC,cAA8F,EAC1E;EACpB,IAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC,CAACK,GAAG,CAAC,UAACC,GAAG;IAAA,OAAQA,GAAG;EAAA,CAAM,CAAC;EAE1D,IAAMC,WAAW,yBAAuBR,KAAK,aAAQG,MAAM,CAACM,IAAI,CAAC,GAAG,CAAG;EAEvE,IAAAC,kBAAA,GAA4C,IAAAC,oCAAiB,EAACH,WAAW,EAAEN,cAAc,CAAC;IAAAU,mBAAA,OAAAC,eAAA,aAAAH,kBAAA;IAAnFI,oBAAoB,GAAAF,mBAAA;IAAEG,WAAW,GAAAH,mBAAA;EAExC,OAAO,MAAIE,oBAAoB,KAAAE,MAAA,KAAAC,mBAAA,aAAQb,MAAM,CAACc,MAAM,CAACjB,GAAG,CAAC,OAAAgB,mBAAA,aAAMF,WAAW,IAAI,EAAE,GAAG;AACrF,CAAC;AAACI,OAAA,CAAApB,iBAAA,GAAAA,iBAAA"}