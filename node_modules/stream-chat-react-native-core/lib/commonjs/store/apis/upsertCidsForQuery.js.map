{"version":3,"names":["_convertFilterSortToQuery","require","_QuickSqliteClient","_createUpsertQuery","upsertCidsForQuery","_ref","cids","filters","_ref$flush","flush","sort","query","createUpsertQuery","JSON","stringify","id","convertFilterSortToQuery","QuickSqliteClient","executeSql","apply","exports"],"sources":["upsertCidsForQuery.ts"],"sourcesContent":["import type { ChannelFilters, ChannelSort } from 'stream-chat';\n\nimport { convertFilterSortToQuery } from './utils/convertFilterSortToQuery';\n\nimport { QuickSqliteClient } from '../QuickSqliteClient';\nimport { createUpsertQuery } from '../sqlite-utils/createUpsertQuery';\n\nexport const upsertCidsForQuery = ({\n  cids,\n  filters,\n  flush = true,\n  sort,\n}: {\n  cids: string[];\n  filters?: ChannelFilters;\n  flush?: boolean;\n  sort?: ChannelSort;\n}) => {\n  // Update the database only if the query is provided.\n  const query = createUpsertQuery('channelQueries', {\n    cids: JSON.stringify(cids),\n    id: convertFilterSortToQuery({ filters, sort }),\n  });\n\n  if (flush) {\n    QuickSqliteClient.executeSql.apply(null, query);\n  }\n\n  return [query];\n};\n"],"mappings":";;;;AAEA,IAAAA,yBAAA,GAAAC,OAAA;AAEA,IAAAC,kBAAA,GAAAD,OAAA;AACA,IAAAE,kBAAA,GAAAF,OAAA;AAEO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAUzB;EAAA,IATJC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACJC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAAC,UAAA,GAAAH,IAAA,CACPI,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,IAAI,GAAAA,UAAA;IACZE,IAAI,GAAAL,IAAA,CAAJK,IAAI;EAQJ,IAAMC,KAAK,GAAG,IAAAC,oCAAiB,EAAC,gBAAgB,EAAE;IAChDN,IAAI,EAAEO,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC;IAC1BS,EAAE,EAAE,IAAAC,kDAAwB,EAAC;MAAET,OAAO,EAAPA,OAAO;MAAEG,IAAI,EAAJA;IAAK,CAAC;EAChD,CAAC,CAAC;EAEF,IAAID,KAAK,EAAE;IACTQ,oCAAiB,CAACC,UAAU,CAACC,KAAK,CAAC,IAAI,EAAER,KAAK,CAAC;EACjD;EAEA,OAAO,CAACA,KAAK,CAAC;AAChB,CAAC;AAACS,OAAA,CAAAhB,kBAAA,GAAAA,kBAAA"}