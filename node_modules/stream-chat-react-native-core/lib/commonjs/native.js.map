{"version":3,"names":["_reactNative","require","fail","Error","compressImage","exports","deleteFile","getLocalAssetUri","oniOS14GalleryLibrarySelectionChange","getPhotos","FlatList","DefaultFlatList","NetInfo","addEventListener","fetch","pickDocument","saveFile","setClipboardString","shareImage","takePhoto","triggerHaptic","SDK","Sound","Video","registerNativeHandlers","handlers","undefined","isVideoPackageAvailable","isAudioPackageAvailable","Player","initializeSound"],"sources":["native.ts"],"sourcesContent":["import type React from 'react';\nimport { FlatList as DefaultFlatList, StyleProp, ViewStyle } from 'react-native';\n\nimport type { NetInfoSubscription } from '@react-native-community/netinfo';\n\nimport type { Asset, File } from './types/types';\n\nconst fail = () => {\n  throw Error(\n    'Native handler was not registered, you should import stream-chat-expo or stream-chat-react-native',\n  );\n};\n\ntype CompressImage = ({\n  compressImageQuality,\n  height,\n  uri,\n  width,\n}: {\n  compressImageQuality: number;\n  height: number;\n  uri: string;\n  width: number;\n}) => Promise<string> | never;\nexport let compressImage: CompressImage = fail;\n\ntype DeleteFile = ({ uri }: { uri: string }) => Promise<boolean> | never;\nexport let deleteFile: DeleteFile = fail;\n\ntype GetLocalAssetUri = (uriOrAssetId: string) => Promise<string | undefined> | never;\nexport let getLocalAssetUri: GetLocalAssetUri = fail;\n\ntype OniOS14LibrarySelectionChange = (callback: () => void) => { unsubscribe: () => void };\nexport let oniOS14GalleryLibrarySelectionChange: OniOS14LibrarySelectionChange = fail;\n\ntype GetPhotos = ({ after, first }: { first: number; after?: string }) =>\n  | Promise<{\n      assets: Array<Omit<Asset, 'source'> & { source: 'picker' }>;\n      endCursor: string;\n      hasNextPage: boolean;\n    }>\n  | never;\nexport let getPhotos: GetPhotos = fail;\n\ntype NetInfo = {\n  addEventListener: (listener: (isConnected: boolean) => void) => NetInfoSubscription | never;\n  fetch: (requestedInterface?: string | undefined) => Promise<boolean> | never;\n};\n\nexport let FlatList = DefaultFlatList;\n\nexport let NetInfo: NetInfo = {\n  addEventListener: fail,\n  fetch: fail,\n};\n\ntype PickDocument = ({ maxNumberOfFiles }: { maxNumberOfFiles?: number }) =>\n  | Promise<{\n      cancelled: boolean;\n      assets?: File[];\n    }>\n  | never;\nexport let pickDocument: PickDocument = fail;\n\ntype SaveFileOptions = {\n  fileName: string;\n  fromUrl: string;\n};\ntype SaveFile = (options: SaveFileOptions) => Promise<string> | never;\nexport let saveFile: SaveFile = fail;\n\ntype SetClipboardString = (text: string) => Promise<void> | never;\nexport let setClipboardString: SetClipboardString = fail;\n\ntype ShareOptions = {\n  type?: string;\n  url?: string;\n};\ntype ShareImage = (options: ShareOptions) => Promise<boolean> | never;\nexport let shareImage: ShareImage = fail;\n\ntype Photo =\n  | (Omit<Asset, 'source'> & {\n      cancelled: false;\n      source: 'camera';\n    })\n  | { cancelled: true };\ntype TakePhoto = (options: { compressImageQuality?: number }) => Promise<Photo> | never;\nexport let takePhoto: TakePhoto = fail;\n\ntype HapticFeedbackMethod =\n  | 'impactHeavy'\n  | 'impactLight'\n  | 'impactMedium'\n  | 'notificationError'\n  | 'notificationSuccess'\n  | 'notificationWarning'\n  | 'selection';\ntype TriggerHaptic = (method: HapticFeedbackMethod) => void | never;\nexport let triggerHaptic: TriggerHaptic = fail;\n\nexport type PlaybackStatus = {\n  didJustFinish: boolean;\n  durationMillis: number;\n  error: string;\n  isBuffering: boolean;\n  isLoaded: boolean;\n  isLooping: boolean;\n  isPlaying: boolean;\n  positionMillis: number;\n};\n\nexport type AVPlaybackStatusToSet = {\n  isLooping: boolean;\n  isMuted: boolean;\n  positionMillis: number;\n  progressUpdateIntervalMillis: number;\n  rate: number;\n  shouldCorrectPitch: boolean;\n  shouldPlay: boolean;\n  volume: number;\n};\n\nexport let SDK: string;\n\nexport type SoundOptions = {\n  basePathOrCallback?: string;\n  callback?: () => void;\n  filenameOrFile?: string;\n  initialStatus?: Partial<AVPlaybackStatusToSet>;\n  onPlaybackStatusUpdate?: (playbackStatus: PlaybackStatus) => void;\n  source?: { uri: string };\n};\n\nexport type SoundReturnType = {\n  paused: boolean;\n  testID: string;\n  getDuration?: () => number;\n  isPlaying?: () => boolean;\n  onBuffer?: (props: { isBuffering: boolean }) => void;\n  onEnd?: () => void;\n  onLoad?: (payload: VideoPayloadData) => void;\n  onLoadStart?: () => void;\n  onPlaybackStatusUpdate?: (playbackStatus: PlaybackStatus) => void;\n  onProgress?: (data: VideoProgressData) => void;\n  onReadyForDisplay?: () => void;\n  pauseAsync?: () => void;\n  play?: () => void;\n  playAsync?: () => void;\n  replayAsync?: () => void;\n  resizeMode?: string;\n  seek?: (progress: number) => void;\n  setPositionAsync?: (millis: number) => void;\n  soundRef?: React.RefObject<SoundReturnType>;\n  stopAsync?: () => void;\n  style?: StyleProp<ViewStyle>;\n  unloadAsync?: () => void;\n  uri?: string;\n};\n\nexport type SoundType = {\n  initializeSound: (\n    source?: { uri: string },\n    initialStatus?: Partial<AVPlaybackStatusToSet>,\n    onPlaybackStatusUpdate?: (playbackStatus: PlaybackStatus) => void,\n  ) => Promise<SoundReturnType | null>;\n  Player: React.ComponentType<SoundReturnType> | null;\n};\n\nexport let Sound: SoundType;\n\nexport type VideoProgressData = {\n  currentTime: number;\n  seekableDuration: number;\n  playableDuration?: number;\n};\n\nexport type VideoPayloadData = {\n  duration: number;\n  audioTracks?: { index: number; language: string; title: string; type: string }[];\n  currentPosition?: number;\n  naturalSize?: { height: number; orientation: 'portrait' | 'landscape'; width: number };\n  textTracks?: { index: number; language: string; title: string; type: string }[];\n  videoTracks?: {\n    bitrate: number;\n    codecs: string;\n    height: number;\n    trackId: number;\n    width: number;\n  }[];\n};\n\nexport type VideoType = {\n  paused: boolean;\n  testID: string;\n  uri: string;\n  videoRef: React.RefObject<VideoType>;\n  onBuffer?: (props: { isBuffering: boolean }) => void;\n  onEnd?: () => void;\n  onLoad?: (payload: VideoPayloadData) => void;\n  onLoadStart?: () => void;\n  onPlaybackStatusUpdate?: (playbackStatus: PlaybackStatus) => void;\n  onProgress?: (data: VideoProgressData) => void;\n  onReadyForDisplay?: () => void;\n  repeat?: boolean;\n  replayAsync?: () => void;\n  resizeMode?: string;\n  seek?: (progress: number) => void;\n  setPositionAsync?: (position: number) => void;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport let Video: React.ComponentType<VideoType>;\n\ntype Handlers = {\n  compressImage?: CompressImage;\n  deleteFile?: DeleteFile;\n  FlatList?: typeof DefaultFlatList;\n  getLocalAssetUri?: GetLocalAssetUri;\n  getPhotos?: GetPhotos;\n  NetInfo?: NetInfo;\n  oniOS14GalleryLibrarySelectionChange?: OniOS14LibrarySelectionChange;\n  pickDocument?: PickDocument;\n  saveFile?: SaveFile;\n  SDK?: string;\n  setClipboardString?: SetClipboardString;\n  shareImage?: ShareImage;\n  Sound?: SoundType;\n  takePhoto?: TakePhoto;\n  triggerHaptic?: TriggerHaptic;\n  Video?: React.ComponentType<VideoType>;\n};\n\nexport const registerNativeHandlers = (handlers: Handlers) => {\n  if (handlers.compressImage) {\n    compressImage = handlers.compressImage;\n  }\n\n  if (handlers.deleteFile) {\n    deleteFile = handlers.deleteFile;\n  }\n\n  if (handlers.FlatList) {\n    FlatList = handlers.FlatList;\n  }\n  if (handlers.NetInfo) {\n    NetInfo = handlers.NetInfo;\n  }\n\n  if (handlers.getLocalAssetUri) {\n    getLocalAssetUri = handlers.getLocalAssetUri;\n  }\n\n  if (handlers.getPhotos) {\n    getPhotos = handlers.getPhotos;\n  }\n\n  if (handlers.oniOS14GalleryLibrarySelectionChange) {\n    oniOS14GalleryLibrarySelectionChange = handlers.oniOS14GalleryLibrarySelectionChange;\n  }\n\n  if (handlers.pickDocument !== undefined) {\n    pickDocument = handlers.pickDocument;\n  }\n\n  if (handlers.saveFile) {\n    saveFile = handlers.saveFile;\n  }\n\n  if (handlers.SDK) {\n    SDK = handlers.SDK;\n  }\n\n  if (handlers.shareImage !== undefined) {\n    shareImage = handlers.shareImage;\n  }\n\n  if (handlers.Sound) {\n    Sound = handlers.Sound;\n  }\n\n  if (handlers.takePhoto) {\n    takePhoto = handlers.takePhoto;\n  }\n\n  if (handlers.triggerHaptic) {\n    triggerHaptic = handlers.triggerHaptic;\n  }\n\n  if (handlers.Video) {\n    Video = handlers.Video;\n  }\n\n  if (handlers.setClipboardString !== undefined) {\n    setClipboardString = handlers.setClipboardString;\n  }\n};\n\nexport const isVideoPackageAvailable = () => !!Video;\nexport const isAudioPackageAvailable = () => !!Sound.Player || !!Sound.initializeSound;\n"],"mappings":"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"}