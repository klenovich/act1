{"version":3,"names":["_streamChat","require","apiKey","token","setUser","client","user","Promise","resolve","connectionId","mutes","_user","_extends2","userID","id","userToken","mockClient","options","arguments","length","undefined","_options$disableAppSe","disableAppSettings","jest","spyOn","mockImplementation","tokenManager","getToken","fn","tokenReady","bind","getAppSettings","getTestClient","StreamChat","exports","getTestClientWithUser","_ref","_asyncToGenerator2","_regenerator","mark","_callee","_options$disableAppSe2","_args","wrap","_callee$","_context","prev","next","wsPromise","abrupt","stop","_x","apply","getRandomInt","min","max","Math","ceil","floor","random"],"sources":["mock.js"],"sourcesContent":["/* eslint no-underscore-dangle: 0 */\n/* eslint no-param-reassign: 0 */\n\nimport { StreamChat } from 'stream-chat';\n\nconst apiKey = 'API_KEY';\nconst token = 'dummy_token';\n\nconst setUser = (client, user) =>\n  new Promise((resolve) => {\n    client.connectionId = 'dumm_connection_id';\n    client.user = user;\n    client.user.mutes = [];\n    client._user = { ...user };\n    client.userID = user.id;\n    client.userToken = token;\n    resolve();\n  });\n\nfunction mockClient(client, options = {}) {\n  const { disableAppSettings = true } = options;\n\n  jest.spyOn(client, '_setToken').mockImplementation();\n  jest.spyOn(client, '_setupConnection').mockImplementation();\n  client.tokenManager = {\n    getToken: jest.fn(() => token),\n    tokenReady: jest.fn(() => true),\n  };\n  client.setUser = setUser.bind(null, client);\n\n  if (disableAppSettings) {\n    client.getAppSettings = jest.fn(() => ({}));\n  }\n\n  return client;\n}\n\nexport const getTestClient = (options = {}) => mockClient(new StreamChat(apiKey), options);\n\nexport const getTestClientWithUser = async (user, options = {}) => {\n  const { disableAppSettings = true } = options;\n  const client = mockClient(new StreamChat(apiKey));\n  await setUser(client, user);\n  client.wsPromise = Promise.resolve();\n\n  if (disableAppSettings) {\n    client.getAppSettings = jest.fn(() => ({}));\n  }\n\n  return client;\n};\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; // The maximum is exclusive and the minimum is inclusive\n};\n"],"mappings":"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"}