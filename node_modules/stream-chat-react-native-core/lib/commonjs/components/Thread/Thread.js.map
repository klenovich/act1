{"version":3,"names":["_react","_interopRequireWildcard","require","_ThreadFooterComponent","_ChannelContext","_ChatContext","_MessagesContext","_ThreadContext","_MessageInput","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ThreadWithContext","props","additionalMessageInputProps","additionalMessageListProps","_props$autoFocus","autoFocus","closeThread","_props$closeThreadOnD","closeThreadOnDismount","disabled","loadMoreThread","_props$MessageInput","MessageInput","DefaultMessageInput","MessageList","onThreadDismount","thread","useEffect","loadMoreThreadAsync","_ref","_asyncToGenerator2","_regenerator","mark","_callee","wrap","_callee$","_context","prev","next","stop","apply","arguments","id","reply_count","createElement","Fragment","__self","__source","fileName","lineNumber","columnNumber","_extends2","FooterComponent","ThreadFooterComponent","threadList","additionalTextInputProps","editable","Thread","_useChatContext","useChatContext","client","_useChannelContext","useChannelContext","_useMessagesContext","useMessagesContext","_useThreadContext","useThreadContext","reloadThread","Error","exports"],"sources":["Thread.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport { ThreadFooterComponent } from './components/ThreadFooterComponent';\n\nimport { useChannelContext } from '../../contexts/channelContext/ChannelContext';\nimport { ChatContextValue, useChatContext } from '../../contexts/chatContext/ChatContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport { ThreadContextValue, useThreadContext } from '../../contexts/threadContext/ThreadContext';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport {\n  MessageInput as DefaultMessageInput,\n  MessageInputProps,\n} from '../MessageInput/MessageInput';\nimport type { MessageListProps } from '../MessageList/MessageList';\n\ntype ThreadPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<ChatContextValue<StreamChatGenerics>, 'client'> &\n  Pick<MessagesContextValue<StreamChatGenerics>, 'MessageList'> &\n  Pick<\n    ThreadContextValue<StreamChatGenerics>,\n    'closeThread' | 'loadMoreThread' | 'reloadThread' | 'thread'\n  > & {\n    /**\n     * Additional props for underlying MessageInput component.\n     * Available props - https://getstream.io/chat/docs/sdk/reactnative/ui-components/message-input/#props\n     * */\n    additionalMessageInputProps?: Partial<MessageInputProps<StreamChatGenerics>>;\n    /**\n     * Additional props for underlying MessageList component.\n     * Available props - https://getstream.io/chat/docs/sdk/reactnative/ui-components/message-list/#props\n     * */\n    additionalMessageListProps?: Partial<MessageListProps<StreamChatGenerics>>;\n    /** Make input focus on mounting thread */\n    autoFocus?: boolean;\n    /** Closes thread on dismount, defaults to true */\n    closeThreadOnDismount?: boolean;\n    /** Disables the thread UI. So MessageInput and MessageList will be disabled. */\n    disabled?: boolean;\n    /**\n     * **Customized MessageInput component to used within Thread instead of default MessageInput\n     * **Available from [MessageInput](https://getstream.io/chat/docs/sdk/reactnative/ui-components/message-input)**\n     */\n    MessageInput?: React.ComponentType<MessageInputProps<StreamChatGenerics>>;\n    /**\n     * Call custom function on closing thread if handling thread state elsewhere\n     */\n    onThreadDismount?: () => void;\n  };\n\nconst ThreadWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ThreadPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    additionalMessageInputProps,\n    additionalMessageListProps,\n    autoFocus = true,\n    closeThread,\n    closeThreadOnDismount = true,\n    disabled,\n    loadMoreThread,\n    MessageInput = DefaultMessageInput,\n    MessageList,\n    onThreadDismount,\n    thread,\n  } = props;\n\n  useEffect(() => {\n    const loadMoreThreadAsync = async () => {\n      await loadMoreThread();\n    };\n\n    if (thread?.id && thread.reply_count) {\n      loadMoreThreadAsync();\n    }\n  }, []);\n\n  useEffect(\n    () => () => {\n      if (closeThreadOnDismount) {\n        closeThread();\n      }\n      if (onThreadDismount) {\n        onThreadDismount();\n      }\n    },\n    [],\n  );\n\n  if (!thread) return null;\n\n  return (\n    <React.Fragment key={`thread-${thread.id}`}>\n      <MessageList\n        FooterComponent={ThreadFooterComponent}\n        threadList\n        {...additionalMessageListProps}\n      />\n      <MessageInput<StreamChatGenerics>\n        additionalTextInputProps={{ autoFocus, editable: !disabled }}\n        threadList\n        {...additionalMessageInputProps}\n      />\n    </React.Fragment>\n  );\n};\n\nexport type ThreadProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<ThreadPropsWithContext<StreamChatGenerics>>;\n\n/**\n * Thread - The Thread renders a parent message with a list of replies. Use the standard message list of the main channel's messages.\n * The thread is only used for the list of replies to a message.\n *\n * Thread is a consumer of [channel context](https://getstream.io/chat/docs/sdk/reactnative/contexts/channel-context/)\n * Underlying MessageList, MessageInput and Message components can be customized using props:\n * - additionalMessageListProps\n * - additionalMessageInputProps\n */\nexport const Thread = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ThreadProps<StreamChatGenerics>,\n) => {\n  const { client } = useChatContext<StreamChatGenerics>();\n  const { threadList } = useChannelContext<StreamChatGenerics>();\n  const { MessageList } = useMessagesContext<StreamChatGenerics>();\n  const { closeThread, loadMoreThread, reloadThread, thread } =\n    useThreadContext<StreamChatGenerics>();\n\n  if (thread?.id && !threadList) {\n    throw new Error(\n      'Please add a threadList prop to your Channel component when rendering a thread list. Check our Channel documentation for more info: https://getstream.io/chat/docs/sdk/reactnative/core-components/channel/#threadlist',\n    );\n  }\n\n  return (\n    <ThreadWithContext<StreamChatGenerics>\n      {...{\n        client,\n        closeThread,\n        loadMoreThread,\n        MessageList,\n        reloadThread,\n        thread,\n      }}\n      {...props}\n    />\n  );\n};\n"],"mappings":"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"}