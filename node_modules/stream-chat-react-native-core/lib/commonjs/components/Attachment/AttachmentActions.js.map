{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_MessageContext","_ThemeContext","_excluded","_excluded2","_this","_jsxFileName","styles","StyleSheet","create","actionButton","borderRadius","borderWidth","paddingHorizontal","paddingVertical","container","flexDirection","justifyContent","padding","AttachmentActionsWithContext","props","actions","handleAction","_props$styles","stylesProp","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","accent_blue","black","border","transparent","white","_useTheme$theme$messa","messageSimple","_useTheme$theme$messa2","button","defaultBackgroundColor","defaultBorderColor","primaryBackgroundColor","primaryBorderColor","buttonStyle","_objectWithoutProperties2","_useTheme$theme$messa3","buttonText","defaultColor","primaryColor","buttonTextStyle","createElement","View","style","testID","__self","__source","fileName","lineNumber","columnNumber","map","action","index","primary","TouchableOpacity","key","value","onPress","name","backgroundColor","borderColor","Text","color","text","areEqual","prevProps","nextProps","prevActions","nextActions","actionsEqual","length","MemoizedAttachmentActions","React","memo","AttachmentActions","_useMessageContext","useMessageContext","_extends2","exports","displayName"],"sources":["AttachmentActions.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextStyle,\n  TouchableOpacity,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport type { Attachment } from 'stream-chat';\n\nimport {\n  MessageContextValue,\n  useMessageContext,\n} from '../../contexts/messageContext/MessageContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\n\nconst styles = StyleSheet.create({\n  actionButton: {\n    borderRadius: 20,\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 5,\n  },\n});\n\nexport type AttachmentActionsPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<Attachment<StreamChatGenerics>, 'actions'> &\n  Pick<MessageContextValue<StreamChatGenerics>, 'handleAction'> & {\n    styles?: Partial<{\n      actionButton: StyleProp<ViewStyle>;\n      buttonText: StyleProp<TextStyle>;\n      container: StyleProp<ViewStyle>;\n    }>;\n  };\n\nconst AttachmentActionsWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: AttachmentActionsPropsWithContext<StreamChatGenerics>,\n) => {\n  const { actions, handleAction, styles: stylesProp = {} } = props;\n\n  const {\n    theme: {\n      colors: { accent_blue, black, border, transparent, white },\n      messageSimple: {\n        actions: {\n          button: {\n            defaultBackgroundColor,\n            defaultBorderColor,\n            primaryBackgroundColor,\n            primaryBorderColor,\n            ...buttonStyle\n          },\n          buttonText: { defaultColor, primaryColor, ...buttonTextStyle },\n          container,\n        },\n      },\n    },\n  } = useTheme();\n\n  return (\n    <View style={[styles.container, container, stylesProp.container]} testID='attachment-actions'>\n      {actions?.map((action, index) => {\n        const primary = action.style === 'primary';\n\n        return (\n          <TouchableOpacity\n            key={`${index}-${action.value}`}\n            onPress={() => {\n              if (action.name && action.value && handleAction) {\n                handleAction(action.name, action.value);\n              }\n            }}\n            style={[\n              styles.actionButton,\n              {\n                backgroundColor: primary\n                  ? primaryBackgroundColor || accent_blue\n                  : defaultBackgroundColor || white,\n                borderColor: primary\n                  ? primaryBorderColor || border\n                  : defaultBorderColor || transparent,\n              },\n              buttonStyle,\n              stylesProp.actionButton,\n            ]}\n            testID={`attachment-actions-button-${action.name}`}\n          >\n            <Text\n              style={[\n                {\n                  color: primary ? primaryColor || white : defaultColor || black,\n                },\n                buttonTextStyle,\n                stylesProp.buttonText,\n              ]}\n            >\n              {action.text}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: AttachmentActionsPropsWithContext<StreamChatGenerics>,\n  nextProps: AttachmentActionsPropsWithContext<StreamChatGenerics>,\n) => {\n  const { actions: prevActions } = prevProps;\n  const { actions: nextActions } = nextProps;\n\n  const actionsEqual = prevActions?.length === nextActions?.length;\n\n  return actionsEqual;\n};\n\nconst MemoizedAttachmentActions = React.memo(\n  AttachmentActionsWithContext,\n  areEqual,\n) as typeof AttachmentActionsWithContext;\n\nexport type AttachmentActionsProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Attachment<StreamChatGenerics> &\n  Partial<Pick<MessageContextValue<StreamChatGenerics>, 'handleAction'>>;\n\n/**\n * AttachmentActions - The actions you can take on an attachment.\n * Actions in combination with attachments can be used to build [commands](https://getstream.io/chat/docs/#channel_commands).\n */\nexport const AttachmentActions = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: AttachmentActionsProps<StreamChatGenerics>,\n) => {\n  const { handleAction } = useMessageContext<StreamChatGenerics>();\n  return <MemoizedAttachmentActions {...{ handleAction }} {...props} />;\n};\n\nAttachmentActions.displayName = 'AttachmentActions{messageSimple{actions}}';\n"],"mappings":"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"}