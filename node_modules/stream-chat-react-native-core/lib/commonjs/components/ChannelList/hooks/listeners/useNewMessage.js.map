{"version":3,"names":["_react","require","_ChatContext","_utils","useNewMessage","_ref","lockChannelOrder","onNewMessage","setChannels","_useChatContext","useChatContext","client","useEffect","handleEvent","event","channels","cid","channel_type","channel_id","targetChannelIndex","findIndex","c","moveChannelUp","channel","initialized","concat","_toConsumableArray2","listener","on","unsubscribe","exports"],"sources":["useNewMessage.ts"],"sourcesContent":["import { useEffect } from 'react';\n\nimport type { Channel, Event } from 'stream-chat';\n\nimport { useChatContext } from '../../../../contexts/chatContext/ChatContext';\n\nimport type { DefaultStreamChatGenerics } from '../../../../types/types';\nimport { moveChannelUp } from '../../utils';\n\ntype Parameters<StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics> =\n  {\n    lockChannelOrder: boolean;\n    setChannels: React.Dispatch<React.SetStateAction<Channel<StreamChatGenerics>[] | null>>;\n    onNewMessage?: (\n      lockChannelOrder: boolean,\n      setChannels: React.Dispatch<React.SetStateAction<Channel<StreamChatGenerics>[] | null>>,\n      event: Event<StreamChatGenerics>,\n    ) => void;\n  };\n\nexport const useNewMessage = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  lockChannelOrder,\n  onNewMessage,\n  setChannels,\n}: Parameters<StreamChatGenerics>) => {\n  const { client } = useChatContext<StreamChatGenerics>();\n\n  useEffect(() => {\n    const handleEvent = (event: Event<StreamChatGenerics>) => {\n      if (typeof onNewMessage === 'function') {\n        onNewMessage(lockChannelOrder, setChannels, event);\n      } else {\n        setChannels((channels) => {\n          if (!channels) return channels;\n\n          if (!lockChannelOrder && event.cid && event.channel_type && event.channel_id) {\n            const targetChannelIndex = channels.findIndex((c) => c.cid === event.cid);\n\n            if (targetChannelIndex >= 0) {\n              return moveChannelUp<StreamChatGenerics>({\n                channels,\n                cid: event.cid,\n              });\n            }\n\n            // If channel doesn't exist in existing list, check in activeChannels as well.\n            // It may happen that channel was hidden using channel.hide(). In that case\n            // We remove it from `channels` state, but its still being watched and exists in client.activeChannels.\n            const channel = client.channel(event.channel_type, event.channel_id);\n\n            if (channel.initialized) {\n              return [channel, ...channels];\n            }\n          }\n\n          return [...channels];\n        });\n      }\n    };\n\n    const listener = client?.on('message.new', handleEvent);\n    return () => listener?.unsubscribe();\n  }, []);\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAIA,IAAAC,YAAA,GAAAD,OAAA;AAGA,IAAAE,MAAA,GAAAF,OAAA;AAaO,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAMY;EAAA,IAHpCC,gBAAgB,GAAAD,IAAA,CAAhBC,gBAAgB;IAChBC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IACZC,WAAW,GAAAH,IAAA,CAAXG,WAAW;EAEX,IAAAC,eAAA,GAAmB,IAAAC,2BAAc,EAAqB,CAAC;IAA/CC,MAAM,GAAAF,eAAA,CAANE,MAAM;EAEd,IAAAC,gBAAS,EAAC,YAAM;IACd,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAgC,EAAK;MACxD,IAAI,OAAOP,YAAY,KAAK,UAAU,EAAE;QACtCA,YAAY,CAACD,gBAAgB,EAAEE,WAAW,EAAEM,KAAK,CAAC;MACpD,CAAC,MAAM;QACLN,WAAW,CAAC,UAACO,QAAQ,EAAK;UACxB,IAAI,CAACA,QAAQ,EAAE,OAAOA,QAAQ;UAE9B,IAAI,CAACT,gBAAgB,IAAIQ,KAAK,CAACE,GAAG,IAAIF,KAAK,CAACG,YAAY,IAAIH,KAAK,CAACI,UAAU,EAAE;YAC5E,IAAMC,kBAAkB,GAAGJ,QAAQ,CAACK,SAAS,CAAC,UAACC,CAAC;cAAA,OAAKA,CAAC,CAACL,GAAG,KAAKF,KAAK,CAACE,GAAG;YAAA,EAAC;YAEzE,IAAIG,kBAAkB,IAAI,CAAC,EAAE;cAC3B,OAAO,IAAAG,oBAAa,EAAqB;gBACvCP,QAAQ,EAARA,QAAQ;gBACRC,GAAG,EAAEF,KAAK,CAACE;cACb,CAAC,CAAC;YACJ;YAKA,IAAMO,OAAO,GAAGZ,MAAM,CAACY,OAAO,CAACT,KAAK,CAACG,YAAY,EAAEH,KAAK,CAACI,UAAU,CAAC;YAEpE,IAAIK,OAAO,CAACC,WAAW,EAAE;cACvB,QAAQD,OAAO,EAAAE,MAAA,KAAAC,mBAAA,aAAKX,QAAQ;YAC9B;UACF;UAEA,WAAAW,mBAAA,aAAWX,QAAQ;QACrB,CAAC,CAAC;MACJ;IACF,CAAC;IAED,IAAMY,QAAQ,GAAGhB,MAAM,oBAANA,MAAM,CAAEiB,EAAE,CAAC,aAAa,EAAEf,WAAW,CAAC;IACvD,OAAO;MAAA,OAAMc,QAAQ,oBAARA,QAAQ,CAAEE,WAAW,CAAC,CAAC;IAAA;EACtC,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAACC,OAAA,CAAA1B,aAAA,GAAAA,aAAA"}