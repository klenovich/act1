{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_ChannelsContext","_ChatContext","_DebugContext","_ThemeContext","_ChannelPreview","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","styles","StyleSheet","create","flatList","flex","flatListContentContainer","flexGrow","statusIndicator","left","position","right","top","StatusIndicator","_useChatContext","useChatContext","isOnline","_useChannelsContext","useChannelsContext","error","HeaderErrorIndicator","HeaderNetworkDownIndicator","loadingChannels","refreshList","createElement","View","style","__self","__source","fileName","lineNumber","columnNumber","onPress","renderItem","_ref","item","ChannelPreview","channel","keyExtractor","cid","ChannelListMessengerWithContext","props","onEndReachedCalledDuringCurrentScrollRef","useRef","additionalFlatListProps","channels","EmptyStateIndicator","FooterLoadingIndicator","forceUpdate","hasNextPage","ListHeaderComponent","LoadingErrorIndicator","LoadingIndicator","loadingNextPage","loadMoreThreshold","loadNextPage","refreshing","reloadList","setFlatListRef","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$chann","channelListMessenger","flatListContent","white_snow","colors","_useState","useState","_useState2","_slicedToArray2","loading","setLoading","debugRef","useDebugContext","useEffect","isDebugModeEnabled","__DEV__","current","setEventType","setSendEventParams","action","data","map","members","state","listType","retry","onEndReached","Fragment","FlatList","_extends2","contentContainerStyle","backgroundColor","extraData","ListEmptyComponent","ListFooterComponent","undefined","onEndReachedThreshold","onMomentumScrollBegin","ref","refreshControl","RefreshControl","onRefresh","testID","ChannelListMessenger","_useChannelsContext2","exports","displayName"],"sources":["ChannelListMessenger.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n// RNGR's FlatList ist currently breaking the pull-to-refresh behaviour on Android\n// See https://github.com/software-mansion/react-native-gesture-handler/issues/598\nimport { FlatList, RefreshControl, StyleSheet, View } from 'react-native';\n\nimport type { Channel } from 'stream-chat';\n\nimport {\n  ChannelsContextValue,\n  useChannelsContext,\n} from '../../contexts/channelsContext/ChannelsContext';\nimport { useChatContext } from '../../contexts/chatContext/ChatContext';\nimport { useDebugContext } from '../../contexts/debugContext/DebugContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { ChannelPreview } from '../ChannelPreview/ChannelPreview';\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1 },\n  flatListContentContainer: { flexGrow: 1 },\n  statusIndicator: { left: 0, position: 'absolute', right: 0, top: 0 },\n});\n\nexport type ChannelListMessengerPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Omit<\n  ChannelsContextValue<StreamChatGenerics>,\n  | 'HeaderErrorIndicator'\n  | 'HeaderNetworkDownIndicator'\n  | 'maxUnreadCount'\n  | 'numberOfSkeletons'\n  | 'onSelect'\n  | 'Preview'\n  | 'PreviewTitle'\n  | 'PreviewStatus'\n  | 'PreviewAvatar'\n  | 'previewMessage'\n  | 'Skeleton'\n>;\n\nconst StatusIndicator = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>() => {\n  const { isOnline } = useChatContext<StreamChatGenerics>();\n  const { error, HeaderErrorIndicator, HeaderNetworkDownIndicator, loadingChannels, refreshList } =\n    useChannelsContext<StreamChatGenerics>();\n\n  if (loadingChannels) return null;\n\n  if (!isOnline) {\n    return (\n      <View style={styles.statusIndicator}>\n        <HeaderNetworkDownIndicator />\n      </View>\n    );\n  } else if (error) {\n    return (\n      <View style={styles.statusIndicator}>\n        <HeaderErrorIndicator onPress={refreshList} />\n      </View>\n    );\n  }\n  return null;\n};\n\nconst renderItem = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  item,\n}: {\n  item: Channel<StreamChatGenerics>;\n}) => <ChannelPreview<StreamChatGenerics> channel={item} />;\n\nconst keyExtractor = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  item: Channel<StreamChatGenerics>,\n) => item.cid;\n\nconst ChannelListMessengerWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ChannelListMessengerPropsWithContext<StreamChatGenerics>,\n) => {\n  const onEndReachedCalledDuringCurrentScrollRef = useRef<boolean>(false);\n  const {\n    additionalFlatListProps,\n    channels,\n    EmptyStateIndicator,\n    error,\n    FooterLoadingIndicator,\n    forceUpdate,\n    hasNextPage,\n    ListHeaderComponent,\n    loadingChannels,\n    LoadingErrorIndicator,\n    LoadingIndicator,\n    loadingNextPage,\n    loadMoreThreshold,\n    loadNextPage,\n    refreshing,\n    refreshList,\n    reloadList,\n    setFlatListRef,\n  } = props;\n\n  const {\n    theme: {\n      channelListMessenger: { flatList, flatListContent },\n      colors: { white_snow },\n    },\n  } = useTheme();\n\n  /**\n   * In order to prevent the EmptyStateIndicator component from showing up briefly on mount,\n   * we set the loading state one cycle behind to ensure the channels are set before the\n   * change to loadingChannels is registered.\n   */\n  const [loading, setLoading] = useState(true);\n  const debugRef = useDebugContext();\n\n  useEffect(() => {\n    if (!!loadingChannels !== loading) {\n      setLoading(!!loadingChannels);\n    }\n  }, [loading, loadingChannels]);\n\n  const isDebugModeEnabled = __DEV__ && debugRef && debugRef.current;\n\n  if (isDebugModeEnabled) {\n    if (debugRef.current.setEventType) debugRef.current.setEventType('send');\n    if (debugRef.current.setSendEventParams)\n      debugRef.current.setSendEventParams({\n        action: 'Channels',\n        data: channels?.map((channel) => ({\n          data: channel.data,\n          members: channel.state.members,\n        })),\n      });\n  }\n\n  if (error && !refreshing && !loadingChannels && channels === null) {\n    return (\n      <LoadingErrorIndicator\n        error={error}\n        listType='channel'\n        loadNextPage={loadNextPage}\n        retry={reloadList}\n      />\n    );\n  }\n\n  const onEndReached = () => {\n    if (!onEndReachedCalledDuringCurrentScrollRef.current && hasNextPage) {\n      loadNextPage();\n      onEndReachedCalledDuringCurrentScrollRef.current = true;\n    }\n  };\n\n  if (loadingChannels) {\n    return <LoadingIndicator listType='channel' />;\n  }\n\n  return (\n    <>\n      <FlatList\n        contentContainerStyle={[\n          styles.flatListContentContainer,\n          { backgroundColor: white_snow },\n          flatListContent,\n        ]}\n        data={channels}\n        extraData={forceUpdate}\n        keyExtractor={keyExtractor}\n        ListEmptyComponent={\n          loading ? (\n            <LoadingIndicator listType='channel' />\n          ) : (\n            <EmptyStateIndicator listType='channel' />\n          )\n        }\n        ListFooterComponent={loadingNextPage ? <FooterLoadingIndicator /> : undefined}\n        ListHeaderComponent={ListHeaderComponent}\n        onEndReached={onEndReached}\n        onEndReachedThreshold={loadMoreThreshold}\n        onMomentumScrollBegin={() => (onEndReachedCalledDuringCurrentScrollRef.current = false)}\n        ref={setFlatListRef}\n        refreshControl={<RefreshControl onRefresh={refreshList} refreshing={refreshing} />}\n        renderItem={renderItem}\n        style={[styles.flatList, { backgroundColor: white_snow }, flatList]}\n        testID='channel-list-messenger'\n        {...additionalFlatListProps}\n      />\n      <StatusIndicator<StreamChatGenerics> />\n    </>\n  );\n};\n\nexport type ChannelListMessengerProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<ChannelListMessengerPropsWithContext<StreamChatGenerics>>;\n\n/**\n * This UI component displays the preview list of channels and handles Channel navigation. It\n * receives all props from the ChannelList component.\n *\n * @example ./ChannelListMessenger.md\n */\nexport const ChannelListMessenger = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ChannelListMessengerProps<StreamChatGenerics>,\n) => {\n  const {\n    additionalFlatListProps,\n    channels,\n    EmptyStateIndicator,\n    error,\n    FooterLoadingIndicator,\n    forceUpdate,\n    hasNextPage,\n    ListHeaderComponent,\n    loadingChannels,\n    LoadingErrorIndicator,\n    LoadingIndicator,\n    loadingNextPage,\n    loadMoreThreshold,\n    loadNextPage,\n    refreshing,\n    refreshList,\n    reloadList,\n    setFlatListRef,\n  } = useChannelsContext<StreamChatGenerics>();\n\n  return (\n    <ChannelListMessengerWithContext\n      {...{\n        additionalFlatListProps,\n        channels,\n        EmptyStateIndicator,\n        error,\n        FooterLoadingIndicator,\n        forceUpdate,\n        hasNextPage,\n        ListHeaderComponent,\n        loadingChannels,\n        LoadingErrorIndicator,\n        LoadingIndicator,\n        loadingNextPage,\n        loadMoreThreshold,\n        loadNextPage,\n        refreshing,\n        refreshList,\n        reloadList,\n        setFlatListRef,\n      }}\n      {...props}\n    />\n  );\n};\n\nChannelListMessenger.displayName = 'ChannelListMessenger{channelListMessenger}';\n"],"mappings":";;;;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AAGA,IAAAC,YAAA,GAAAD,OAAA;AAIA,IAAAE,gBAAA,GAAAF,OAAA;AAIA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,aAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AAGA,IAAAM,eAAA,GAAAN,OAAA;AAAkE,IAAAO,KAAA;EAAAC,YAAA;AAAA,SAAAC,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAX,wBAAAe,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,aAAAE,OAAA,CAAAF,GAAA,yBAAAA,GAAA,uCAAAA,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,cAAAN,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAElE,IAAMW,MAAM,GAAGC,uBAAU,CAACC,MAAM,CAAC;EAC/BC,QAAQ,EAAE;IAAEC,IAAI,EAAE;EAAE,CAAC;EACrBC,wBAAwB,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC;EACzCC,eAAe,EAAE;IAAEC,IAAI,EAAE,CAAC;IAAEC,QAAQ,EAAE,UAAU;IAAEC,KAAK,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAE;AACrE,CAAC,CAAC;AAmBF,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAEd;EACL,IAAAC,eAAA,GAAqB,IAAAC,2BAAc,EAAqB,CAAC;IAAjDC,QAAQ,GAAAF,eAAA,CAARE,QAAQ;EAChB,IAAAC,mBAAA,GACE,IAAAC,mCAAkB,EAAqB,CAAC;IADlCC,KAAK,GAAAF,mBAAA,CAALE,KAAK;IAAEC,oBAAoB,GAAAH,mBAAA,CAApBG,oBAAoB;IAAEC,0BAA0B,GAAAJ,mBAAA,CAA1BI,0BAA0B;IAAEC,eAAe,GAAAL,mBAAA,CAAfK,eAAe;IAAEC,WAAW,GAAAN,mBAAA,CAAXM,WAAW;EAG7F,IAAID,eAAe,EAAE,OAAO,IAAI;EAEhC,IAAI,CAACN,QAAQ,EAAE;IACb,OACEhD,MAAA,YAAAwD,aAAA,CAACrD,YAAA,CAAAsD,IAAI;MAACC,KAAK,EAAEzB,MAAM,CAACO,eAAgB;MAAAmB,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAnD,YAAA;QAAAoD,UAAA;QAAAC,YAAA;MAAA;IAAA,GAClC/D,MAAA,YAAAwD,aAAA,CAACH,0BAA0B;MAAAM,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAnD,YAAA;QAAAoD,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACzB,CAAC;EAEX,CAAC,MAAM,IAAIZ,KAAK,EAAE;IAChB,OACEnD,MAAA,YAAAwD,aAAA,CAACrD,YAAA,CAAAsD,IAAI;MAACC,KAAK,EAAEzB,MAAM,CAACO,eAAgB;MAAAmB,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAnD,YAAA;QAAAoD,UAAA;QAAAC,YAAA;MAAA;IAAA,GAClC/D,MAAA,YAAAwD,aAAA,CAACJ,oBAAoB;MAACY,OAAO,EAAET,WAAY;MAAAI,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAnD,YAAA;QAAAoD,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACzC,CAAC;EAEX;EACA,OAAO,IAAI;AACb,CAAC;AAED,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA;EAAA,IAGdC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAAA,OAGAnE,MAAA,YAAAwD,aAAA,CAAChD,eAAA,CAAA4D,cAAc;IAAqBC,OAAO,EAAEF,IAAK;IAAAR,MAAA,EAAAlD,KAAA;IAAAmD,QAAA;MAAAC,QAAA,EAAAnD,YAAA;MAAAoD,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC;AAAA;AAE3D,IAAMO,YAAY,GAAG,SAAfA,YAAYA,CAGhBH,IAAiC;EAAA,OAC9BA,IAAI,CAACI,GAAG;AAAA;AAEb,IAAMC,+BAA+B,GAAG,SAAlCA,+BAA+BA,CAGnCC,KAA+D,EAC5D;EACH,IAAMC,wCAAwC,GAAG,IAAAC,aAAM,EAAU,KAAK,CAAC;EACvE,IACEC,uBAAuB,GAkBrBH,KAAK,CAlBPG,uBAAuB;IACvBC,QAAQ,GAiBNJ,KAAK,CAjBPI,QAAQ;IACRC,mBAAmB,GAgBjBL,KAAK,CAhBPK,mBAAmB;IACnB3B,KAAK,GAeHsB,KAAK,CAfPtB,KAAK;IACL4B,sBAAsB,GAcpBN,KAAK,CAdPM,sBAAsB;IACtBC,WAAW,GAaTP,KAAK,CAbPO,WAAW;IACXC,WAAW,GAYTR,KAAK,CAZPQ,WAAW;IACXC,mBAAmB,GAWjBT,KAAK,CAXPS,mBAAmB;IACnB5B,eAAe,GAUbmB,KAAK,CAVPnB,eAAe;IACf6B,qBAAqB,GASnBV,KAAK,CATPU,qBAAqB;IACrBC,gBAAgB,GAQdX,KAAK,CARPW,gBAAgB;IAChBC,eAAe,GAObZ,KAAK,CAPPY,eAAe;IACfC,iBAAiB,GAMfb,KAAK,CANPa,iBAAiB;IACjBC,YAAY,GAKVd,KAAK,CALPc,YAAY;IACZC,UAAU,GAIRf,KAAK,CAJPe,UAAU;IACVjC,WAAW,GAGTkB,KAAK,CAHPlB,WAAW;IACXkC,UAAU,GAERhB,KAAK,CAFPgB,UAAU;IACVC,cAAc,GACZjB,KAAK,CADPiB,cAAc;EAGhB,IAAAC,SAAA,GAKI,IAAAC,sBAAQ,EAAC,CAAC;IAAAC,eAAA,GAAAF,SAAA,CAJZG,KAAK;IAAAC,qBAAA,GAAAF,eAAA,CACHG,oBAAoB;IAAI5D,QAAQ,GAAA2D,qBAAA,CAAR3D,QAAQ;IAAE6D,eAAe,GAAAF,qBAAA,CAAfE,eAAe;IACvCC,UAAU,GAAAL,eAAA,CAApBM,MAAM,CAAID,UAAU;EASxB,IAAAE,SAAA,GAA8B,IAAAC,eAAQ,EAAC,IAAI,CAAC;IAAAC,UAAA,OAAAC,eAAA,aAAAH,SAAA;IAArCI,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAMI,QAAQ,GAAG,IAAAC,6BAAe,EAAC,CAAC;EAElC,IAAAC,gBAAS,EAAC,YAAM;IACd,IAAI,CAAC,CAACtD,eAAe,KAAKkD,OAAO,EAAE;MACjCC,UAAU,CAAC,CAAC,CAACnD,eAAe,CAAC;IAC/B;EACF,CAAC,EAAE,CAACkD,OAAO,EAAElD,eAAe,CAAC,CAAC;EAE9B,IAAMuD,kBAAkB,GAAGC,OAAO,IAAIJ,QAAQ,IAAIA,QAAQ,CAACK,OAAO;EAElE,IAAIF,kBAAkB,EAAE;IACtB,IAAIH,QAAQ,CAACK,OAAO,CAACC,YAAY,EAAEN,QAAQ,CAACK,OAAO,CAACC,YAAY,CAAC,MAAM,CAAC;IACxE,IAAIN,QAAQ,CAACK,OAAO,CAACE,kBAAkB,EACrCP,QAAQ,CAACK,OAAO,CAACE,kBAAkB,CAAC;MAClCC,MAAM,EAAE,UAAU;MAClBC,IAAI,EAAEtC,QAAQ,oBAARA,QAAQ,CAAEuC,GAAG,CAAC,UAAC/C,OAAO;QAAA,OAAM;UAChC8C,IAAI,EAAE9C,OAAO,CAAC8C,IAAI;UAClBE,OAAO,EAAEhD,OAAO,CAACiD,KAAK,CAACD;QACzB,CAAC;MAAA,CAAC;IACJ,CAAC,CAAC;EACN;EAEA,IAAIlE,KAAK,IAAI,CAACqC,UAAU,IAAI,CAAClC,eAAe,IAAIuB,QAAQ,KAAK,IAAI,EAAE;IACjE,OACE7E,MAAA,YAAAwD,aAAA,CAAC2B,qBAAqB;MACpBhC,KAAK,EAAEA,KAAM;MACboE,QAAQ,EAAC,SAAS;MAClBhC,YAAY,EAAEA,YAAa;MAC3BiC,KAAK,EAAE/B,UAAW;MAAA9B,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAnD,YAAA;QAAAoD,UAAA;QAAAC,YAAA;MAAA;IAAA,CACnB,CAAC;EAEN;EAEA,IAAM0D,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAI,CAAC/C,wCAAwC,CAACqC,OAAO,IAAI9B,WAAW,EAAE;MACpEM,YAAY,CAAC,CAAC;MACdb,wCAAwC,CAACqC,OAAO,GAAG,IAAI;IACzD;EACF,CAAC;EAED,IAAIzD,eAAe,EAAE;IACnB,OAAOtD,MAAA,YAAAwD,aAAA,CAAC4B,gBAAgB;MAACmC,QAAQ,EAAC,SAAS;MAAA5D,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAnD,YAAA;QAAAoD,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC;EAChD;EAEA,OACE/D,MAAA,YAAAwD,aAAA,CAAAxD,MAAA,YAAA0H,QAAA,QACE1H,MAAA,YAAAwD,aAAA,CAACrD,YAAA,CAAAwH,QAAQ,MAAAC,SAAA;IACPC,qBAAqB,EAAE,CACrB5F,MAAM,CAACK,wBAAwB,EAC/B;MAAEwF,eAAe,EAAE5B;IAAW,CAAC,EAC/BD,eAAe,CACf;IACFkB,IAAI,EAAEtC,QAAS;IACfkD,SAAS,EAAE/C,WAAY;IACvBV,YAAY,EAAEA,YAAa;IAC3B0D,kBAAkB,EAChBxB,OAAO,GACLxG,MAAA,YAAAwD,aAAA,CAAC4B,gBAAgB;MAACmC,QAAQ,EAAC,SAAS;MAAA5D,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAnD,YAAA;QAAAoD,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,GAEvC/D,MAAA,YAAAwD,aAAA,CAACsB,mBAAmB;MAACyC,QAAQ,EAAC,SAAS;MAAA5D,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAnD,YAAA;QAAAoD,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAE5C;IACDkE,mBAAmB,EAAE5C,eAAe,GAAGrF,MAAA,YAAAwD,aAAA,CAACuB,sBAAsB;MAAApB,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAnD,YAAA;QAAAoD,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,GAAGmE,SAAU;IAC9EhD,mBAAmB,EAAEA,mBAAoB;IACzCuC,YAAY,EAAEA,YAAa;IAC3BU,qBAAqB,EAAE7C,iBAAkB;IACzC8C,qBAAqB,EAAE,SAAAA,sBAAA;MAAA,OAAO1D,wCAAwC,CAACqC,OAAO,GAAG,KAAK;IAAA,CAAE;IACxFsB,GAAG,EAAE3C,cAAe;IACpB4C,cAAc,EAAEtI,MAAA,YAAAwD,aAAA,CAACrD,YAAA,CAAAoI,cAAc;MAACC,SAAS,EAAEjF,WAAY;MAACiC,UAAU,EAAEA,UAAW;MAAA7B,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAnD,YAAA;QAAAoD,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE;IACnFE,UAAU,EAAEA,UAAW;IACvBP,KAAK,EAAE,CAACzB,MAAM,CAACG,QAAQ,EAAE;MAAE0F,eAAe,EAAE5B;IAAW,CAAC,EAAE9D,QAAQ,CAAE;IACpEqG,MAAM,EAAC;EAAwB,GAC3B7D,uBAAuB;IAAAjB,MAAA,EAAAlD,KAAA;IAAAmD,QAAA;MAAAC,QAAA,EAAAnD,YAAA;MAAAoD,UAAA;MAAAC,YAAA;IAAA;EAAA,EAC5B,CAAC,EACF/D,MAAA,YAAAwD,aAAA,CAACX,eAAe;IAAAc,MAAA,EAAAlD,KAAA;IAAAmD,QAAA;MAAAC,QAAA,EAAAnD,YAAA;MAAAoD,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAsB,CACtC,CAAC;AAEP,CAAC;AAYM,IAAM2E,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAG/BjE,KAAoD,EACjD;EACH,IAAAkE,oBAAA,GAmBI,IAAAzF,mCAAkB,EAAqB,CAAC;IAlB1C0B,uBAAuB,GAAA+D,oBAAA,CAAvB/D,uBAAuB;IACvBC,QAAQ,GAAA8D,oBAAA,CAAR9D,QAAQ;IACRC,mBAAmB,GAAA6D,oBAAA,CAAnB7D,mBAAmB;IACnB3B,KAAK,GAAAwF,oBAAA,CAALxF,KAAK;IACL4B,sBAAsB,GAAA4D,oBAAA,CAAtB5D,sBAAsB;IACtBC,WAAW,GAAA2D,oBAAA,CAAX3D,WAAW;IACXC,WAAW,GAAA0D,oBAAA,CAAX1D,WAAW;IACXC,mBAAmB,GAAAyD,oBAAA,CAAnBzD,mBAAmB;IACnB5B,eAAe,GAAAqF,oBAAA,CAAfrF,eAAe;IACf6B,qBAAqB,GAAAwD,oBAAA,CAArBxD,qBAAqB;IACrBC,gBAAgB,GAAAuD,oBAAA,CAAhBvD,gBAAgB;IAChBC,eAAe,GAAAsD,oBAAA,CAAftD,eAAe;IACfC,iBAAiB,GAAAqD,oBAAA,CAAjBrD,iBAAiB;IACjBC,YAAY,GAAAoD,oBAAA,CAAZpD,YAAY;IACZC,UAAU,GAAAmD,oBAAA,CAAVnD,UAAU;IACVjC,WAAW,GAAAoF,oBAAA,CAAXpF,WAAW;IACXkC,UAAU,GAAAkD,oBAAA,CAAVlD,UAAU;IACVC,cAAc,GAAAiD,oBAAA,CAAdjD,cAAc;EAGhB,OACE1F,MAAA,YAAAwD,aAAA,CAACgB,+BAA+B,MAAAoD,SAAA;IAE5BhD,uBAAuB,EAAvBA,uBAAuB;IACvBC,QAAQ,EAARA,QAAQ;IACRC,mBAAmB,EAAnBA,mBAAmB;IACnB3B,KAAK,EAALA,KAAK;IACL4B,sBAAsB,EAAtBA,sBAAsB;IACtBC,WAAW,EAAXA,WAAW;IACXC,WAAW,EAAXA,WAAW;IACXC,mBAAmB,EAAnBA,mBAAmB;IACnB5B,eAAe,EAAfA,eAAe;IACf6B,qBAAqB,EAArBA,qBAAqB;IACrBC,gBAAgB,EAAhBA,gBAAgB;IAChBC,eAAe,EAAfA,eAAe;IACfC,iBAAiB,EAAjBA,iBAAiB;IACjBC,YAAY,EAAZA,YAAY;IACZC,UAAU,EAAVA,UAAU;IACVjC,WAAW,EAAXA,WAAW;IACXkC,UAAU,EAAVA,UAAU;IACVC,cAAc,EAAdA;EAAc,GAEZjB,KAAK;IAAAd,MAAA,EAAAlD,KAAA;IAAAmD,QAAA;MAAAC,QAAA,EAAAnD,YAAA;MAAAoD,UAAA;MAAAC,YAAA;IAAA;EAAA,EACV,CAAC;AAEN,CAAC;AAAC6E,OAAA,CAAAF,oBAAA,GAAAA,oBAAA;AAEFA,oBAAoB,CAACG,WAAW,GAAG,4CAA4C"}