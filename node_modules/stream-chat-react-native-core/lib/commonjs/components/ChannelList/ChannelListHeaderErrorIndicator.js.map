{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ThemeContext","_TranslationContext","_this","_jsxFileName","styles","StyleSheet","create","container","alignItems","justifyContent","padding","width","errorText","fontSize","ChannelListHeaderErrorIndicator","_ref","_ref$onPress","onPress","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$chann","channelListHeaderErrorIndicator","_useTheme$theme$color","colors","grey_dark","white","_useTranslationContex","useTranslationContext","t","createElement","TouchableOpacity","style","backgroundColor","__self","__source","fileName","lineNumber","columnNumber","Text","color","testID","exports","displayName"],"sources":["ChannelListHeaderErrorIndicator.tsx"],"sourcesContent":["import React from 'react';\nimport { GestureResponderEvent, StyleSheet, Text, TouchableOpacity } from 'react-native';\n\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { useTranslationContext } from '../../contexts/translationContext/TranslationContext';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 3,\n    width: '100%',\n  },\n  errorText: {\n    fontSize: 12,\n    padding: 3,\n  },\n});\n\nexport type HeaderErrorProps = {\n  onPress?: (event: GestureResponderEvent) => void;\n};\n\nexport const ChannelListHeaderErrorIndicator: React.FC<HeaderErrorProps> = ({\n  onPress = () => null,\n}) => {\n  const {\n    theme: {\n      channelListHeaderErrorIndicator: { container, errorText },\n      colors: { grey_dark, white },\n    },\n  } = useTheme();\n  const { t } = useTranslationContext();\n\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[styles.container, { backgroundColor: `${grey_dark}E6` }, container]}\n    >\n      <Text style={[styles.errorText, { color: white }, errorText]} testID='channel-loading-error'>\n        {t('Error while loading, please reload/refresh')}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nChannelListHeaderErrorIndicator.displayName =\n  'ChannelListHeaderErrorIndicator{channelListHeaderErrorIndicator}';\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAEA,IAAAE,aAAA,GAAAF,OAAA;AACA,IAAAG,mBAAA,GAAAH,OAAA;AAA6F,IAAAI,KAAA;EAAAC,YAAA;AAE7F,IAAMC,MAAM,GAAGC,uBAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE,CAAC;IACVC,KAAK,EAAE;EACT,CAAC;EACDC,SAAS,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZH,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAMK,IAAMI,+BAA2D,GAAG,SAA9DA,+BAA2DA,CAAAC,IAAA,EAElE;EAAA,IAAAC,YAAA,GAAAD,IAAA,CADJE,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG;MAAA,OAAM,IAAI;IAAA,IAAAA,YAAA;EAEpB,IAAAE,SAAA,GAKI,IAAAC,sBAAQ,EAAC,CAAC;IAAAC,eAAA,GAAAF,SAAA,CAJZG,KAAK;IAAAC,qBAAA,GAAAF,eAAA,CACHG,+BAA+B;IAAIhB,SAAS,GAAAe,qBAAA,CAATf,SAAS;IAAEK,SAAS,GAAAU,qBAAA,CAATV,SAAS;IAAAY,qBAAA,GAAAJ,eAAA,CACvDK,MAAM;IAAIC,SAAS,GAAAF,qBAAA,CAATE,SAAS;IAAEC,KAAK,GAAAH,qBAAA,CAALG,KAAK;EAG9B,IAAAC,qBAAA,GAAc,IAAAC,yCAAqB,EAAC,CAAC;IAA7BC,CAAC,GAAAF,qBAAA,CAADE,CAAC;EAET,OACElC,MAAA,YAAAmC,aAAA,CAAChC,YAAA,CAAAiC,gBAAgB;IACff,OAAO,EAAEA,OAAQ;IACjBgB,KAAK,EAAE,CAAC7B,MAAM,CAACG,SAAS,EAAE;MAAE2B,eAAe,EAAKR,SAAS;IAAK,CAAC,EAAEnB,SAAS,CAAE;IAAA4B,MAAA,EAAAjC,KAAA;IAAAkC,QAAA;MAAAC,QAAA,EAAAlC,YAAA;MAAAmC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE5E3C,MAAA,YAAAmC,aAAA,CAAChC,YAAA,CAAAyC,IAAI;IAACP,KAAK,EAAE,CAAC7B,MAAM,CAACQ,SAAS,EAAE;MAAE6B,KAAK,EAAEd;IAAM,CAAC,EAAEf,SAAS,CAAE;IAAC8B,MAAM,EAAC,uBAAuB;IAAAP,MAAA,EAAAjC,KAAA;IAAAkC,QAAA;MAAAC,QAAA,EAAAlC,YAAA;MAAAmC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzFT,CAAC,CAAC,4CAA4C,CAC3C,CACU,CAAC;AAEvB,CAAC;AAACa,OAAA,CAAA7B,+BAAA,GAAAA,+BAAA;AAEFA,+BAA+B,CAAC8B,WAAW,GACzC,kEAAkE"}