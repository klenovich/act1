{"version":3,"names":["_react","require","useMutedUsers","client","_useState","useState","mutedUsers","_useState2","_slicedToArray2","setMutedUsers","useEffect","handleEvent","event","mutes","_event$me","me","listener","on","unsubscribe","exports"],"sources":["useMutedUsers.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport type { Event, Mute, StreamChat } from 'stream-chat';\n\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\nexport const useMutedUsers = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  client: StreamChat<StreamChatGenerics>,\n) => {\n  const [mutedUsers, setMutedUsers] = useState<Mute<StreamChatGenerics>[]>(\n    client?.mutedUsers || [],\n  );\n\n  useEffect(() => {\n    const handleEvent = (event: Event<StreamChatGenerics>) => {\n      setMutedUsers((mutes) => event.me?.mutes || mutes || []);\n    };\n\n    const listener = client?.on('notification.mutes_updated', handleEvent);\n    return () => listener?.unsubscribe();\n  }, [setMutedUsers]);\n\n  return mutedUsers;\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAMO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAGxBC,MAAsC,EACnC;EACH,IAAAC,SAAA,GAAoC,IAAAC,eAAQ,EAC1C,CAAAF,MAAM,oBAANA,MAAM,CAAEG,UAAU,KAAI,EACxB,CAAC;IAAAC,UAAA,OAAAC,eAAA,aAAAJ,SAAA;IAFME,UAAU,GAAAC,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAIhC,IAAAG,gBAAS,EAAC,YAAM;IACd,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAgC,EAAK;MACxDH,aAAa,CAAC,UAACI,KAAK;QAAA,IAAAC,SAAA;QAAA,OAAK,EAAAA,SAAA,GAAAF,KAAK,CAACG,EAAE,qBAARD,SAAA,CAAUD,KAAK,KAAIA,KAAK,IAAI,EAAE;MAAA,EAAC;IAC1D,CAAC;IAED,IAAMG,QAAQ,GAAGb,MAAM,oBAANA,MAAM,CAAEc,EAAE,CAAC,4BAA4B,EAAEN,WAAW,CAAC;IACtE,OAAO;MAAA,OAAMK,QAAQ,oBAARA,QAAQ,CAAEE,WAAW,CAAC,CAAC;IAAA;EACtC,CAAC,EAAE,CAACT,aAAa,CAAC,CAAC;EAEnB,OAAOH,UAAU;AACnB,CAAC;AAACa,OAAA,CAAAjB,aAAA,GAAAA,aAAA"}