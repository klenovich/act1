{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ThemeContext","_this","_jsxFileName","styles","StyleSheet","create","bold","fontWeight","message","flexShrink","fontSize","ChannelPreviewMessage","props","_latestMessagePreview","latestMessagePreview","_useTheme","useTheme","_useTheme$theme","theme","channelPreview","grey","colors","createElement","Text","numberOfLines","style","color","__self","__source","fileName","lineNumber","columnNumber","previews","map","preview","index","text","key","exports"],"sources":["ChannelPreviewMessage.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Text } from 'react-native';\n\nimport type { LatestMessagePreview } from './hooks/useLatestMessagePreview';\n\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\n\nconst styles = StyleSheet.create({\n  bold: { fontWeight: '600' },\n  message: {\n    flexShrink: 1,\n    fontSize: 12,\n  },\n});\n\nexport type ChannelPreviewMessageProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  latestMessagePreview: LatestMessagePreview<StreamChatGenerics>;\n};\n\nexport const ChannelPreviewMessage = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ChannelPreviewMessageProps<StreamChatGenerics>,\n) => {\n  const { latestMessagePreview } = props;\n\n  const {\n    theme: {\n      channelPreview: { message },\n      colors: { grey },\n    },\n  } = useTheme();\n\n  return (\n    <Text numberOfLines={1} style={[styles.message, { color: grey }, message]}>\n      {latestMessagePreview?.previews?.map(\n        (preview, index) =>\n          preview.text && (\n            <Text\n              key={`${preview.text}_${index}`}\n              style={[{ color: grey }, preview.bold ? styles.bold : {}, message]}\n            >\n              {preview.text}\n            </Text>\n          ),\n      )}\n    </Text>\n  );\n};\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAIA,IAAAE,aAAA,GAAAF,OAAA;AAAoE,IAAAG,KAAA;EAAAC,YAAA;AAIpE,IAAMC,MAAM,GAAGC,uBAAU,CAACC,MAAM,CAAC;EAC/BC,IAAI,EAAE;IAAEC,UAAU,EAAE;EAAM,CAAC;EAC3BC,OAAO,EAAE;IACPC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAQK,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAGhCC,KAAqD,EAClD;EAAA,IAAAC,qBAAA;EACH,IAAQC,oBAAoB,GAAKF,KAAK,CAA9BE,oBAAoB;EAE5B,IAAAC,SAAA,GAKI,IAAAC,sBAAQ,EAAC,CAAC;IAAAC,eAAA,GAAAF,SAAA,CAJZG,KAAK;IACeV,OAAO,GAAAS,eAAA,CAAzBE,cAAc,CAAIX,OAAO;IACfY,IAAI,GAAAH,eAAA,CAAdI,MAAM,CAAID,IAAI;EAIlB,OACExB,MAAA,YAAA0B,aAAA,CAACvB,YAAA,CAAAwB,IAAI;IAACC,aAAa,EAAE,CAAE;IAACC,KAAK,EAAE,CAACtB,MAAM,CAACK,OAAO,EAAE;MAAEkB,KAAK,EAAEN;IAAK,CAAC,EAAEZ,OAAO,CAAE;IAAAmB,MAAA,EAAA1B,KAAA;IAAA2B,QAAA;MAAAC,QAAA,EAAA3B,YAAA;MAAA4B,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvEjB,oBAAoB,qBAAAD,qBAAA,GAApBC,oBAAoB,CAAEkB,QAAQ,qBAA9BnB,qBAAA,CAAgCoB,GAAG,CAClC,UAACC,OAAO,EAAEC,KAAK;IAAA,OACbD,OAAO,CAACE,IAAI,IACVxC,MAAA,YAAA0B,aAAA,CAACvB,YAAA,CAAAwB,IAAI;MACHc,GAAG,EAAKH,OAAO,CAACE,IAAI,SAAID,KAAQ;MAChCV,KAAK,EAAE,CAAC;QAAEC,KAAK,EAAEN;MAAK,CAAC,EAAEc,OAAO,CAAC5B,IAAI,GAAGH,MAAM,CAACG,IAAI,GAAG,CAAC,CAAC,EAAEE,OAAO,CAAE;MAAAmB,MAAA,EAAA1B,KAAA;MAAA2B,QAAA;QAAAC,QAAA,EAAA3B,YAAA;QAAA4B,UAAA;QAAAC,YAAA;MAAA;IAAA,GAElEG,OAAO,CAACE,IACL,CACP;EAAA,CACL,CACI,CAAC;AAEX,CAAC;AAACE,OAAA,CAAA3B,qBAAA,GAAAA,qBAAA"}