{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNativeGestureHandler","_reactNativeReanimated","_interopRequireWildcard","_reactNativeSvg","_MessageOverlayContext","_MessagesContext","_OverlayContext","_ThemeContext","_icons","_native","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","AnimatedCircle","Animated","createAnimatedComponent","Circle","styles","StyleSheet","create","notLastReaction","marginRight","reactionList","alignItems","borderRadius","flexDirection","justifyContent","paddingHorizontal","paddingVertical","position","selectedIcon","reactionData","Icon","LoveReaction","type","ThumbsUpReaction","ThumbsDownReaction","LOLReaction","WutReaction","ReactionButton","props","handleReaction","index","numberOfReactions","ownReactionTypes","setOverlay","showScreen","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","accent_blue","grey","_useTheme$theme$overl","overlay","reactionsList","reaction","reactionSize","selected","includes","animationScale","useSharedValue","hasShown","scale","selectedOpacity","onTap","useAnimatedGestureHandler","onEnd","runOnJS","triggerHaptic","value","withTiming","duration","onFinish","cancelAnimation","onStart","useAnimatedReaction","result","withSequence","withDelay","iconStyle","useAnimatedStyle","transform","selectedStyle","opacity","createElement","TapGestureHandler","hitSlop","bottom","Number","paddingBottom","left","paddingLeft","right","paddingRight","top","paddingTop","maxDurationMs","onHandlerStateChange","__self","__source","fileName","lineNumber","columnNumber","View","style","height","pathFill","width","exports","OverlayReactionListWithContext","alignment","fill","messageLayout","setReactionListHeight","_props$supportedReact","supportedReactions","_useTheme2","_useTheme2$theme","white_snow","_useTheme2$theme$over","screenPadding","padding","_useTheme2$theme$over2","radius","reactionListHeight","reactionBubbleWidth","reactionListLayout","_useWindowDimensions","useWindowDimensions","animatedStyle","insideLeftBound","x","insideRightBound","y","animatedBigCircleProps","useAnimatedProps","cx","cy","r","animateSmallCircleProps","showScreenStyle","translateY","interpolate","translateX","length","absoluteFill","testID","onLayout","_ref","layout","nativeEvent","animatedProps","_ref2","_ref2$nativeEvent$lay","layoutWidth","backgroundColor","map","_ref3","areEqual","prevProps","nextProps","prevAlignment","prevOwnReactionTypes","nextAlignment","nextOwnReactionTypes","alignmentEqual","ownReactionTypesEqual","MemoizedOverlayReactionList","React","memo","OverlayReactionList","_useMessageOverlayCon","useMessageOverlayContext","data","_useMessagesContext","useMessagesContext","_useOverlayContext","useOverlayContext","_extends2","displayName"],"sources":["OverlayReactionList.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, useWindowDimensions, View, ViewStyle } from 'react-native';\nimport { TapGestureHandler, TapGestureHandlerStateChangeEvent } from 'react-native-gesture-handler';\nimport Animated, {\n  cancelAnimation,\n  interpolate,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedProps,\n  useAnimatedReaction,\n  useAnimatedStyle,\n  useSharedValue,\n  withDelay,\n  withSequence,\n  withTiming,\n} from 'react-native-reanimated';\nimport Svg, { Circle, CircleProps, FillProps } from 'react-native-svg';\n\nimport {\n  MessageOverlayData,\n  useMessageOverlayContext,\n} from '../../contexts/messageOverlayContext/MessageOverlayContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport {\n  OverlayContextValue,\n  useOverlayContext,\n} from '../../contexts/overlayContext/OverlayContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport {\n  IconProps,\n  LOLReaction,\n  LoveReaction,\n  ThumbsDownReaction,\n  ThumbsUpReaction,\n  WutReaction,\n} from '../../icons';\n\nimport { triggerHaptic } from '../../native';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport type { ReactionData } from '../../utils/utils';\n\nconst AnimatedCircle = Animated.createAnimatedComponent\n  ? Animated.createAnimatedComponent(Circle)\n  : Circle;\n\nconst styles = StyleSheet.create({\n  notLastReaction: {\n    marginRight: 16,\n  },\n  reactionList: {\n    alignItems: 'center',\n    borderRadius: 24,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    position: 'absolute',\n  },\n  selectedIcon: {\n    position: 'absolute',\n  },\n});\n\nconst reactionData: ReactionData[] = [\n  {\n    Icon: LoveReaction,\n    type: 'love',\n  },\n  {\n    Icon: ThumbsUpReaction,\n    type: 'like',\n  },\n  {\n    Icon: ThumbsDownReaction,\n    type: 'sad',\n  },\n  {\n    Icon: LOLReaction,\n    type: 'haha',\n  },\n  {\n    Icon: WutReaction,\n    type: 'wow',\n  },\n];\n\ntype ReactionButtonProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  OverlayReactionListPropsWithContext<StreamChatGenerics>,\n  'ownReactionTypes' | 'handleReaction' | 'setOverlay'\n> & {\n  Icon: React.FC<IconProps>;\n  index: number;\n  numberOfReactions: number;\n  showScreen: Animated.SharedValue<number>;\n  type: string;\n};\n\nexport const ReactionButton = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ReactionButtonProps<StreamChatGenerics>,\n) => {\n  const {\n    handleReaction,\n    Icon,\n    index,\n    numberOfReactions,\n    ownReactionTypes,\n    setOverlay,\n    showScreen,\n    type,\n  } = props;\n  const {\n    theme: {\n      colors: { accent_blue, grey },\n      overlay: {\n        reactionsList: { reaction, reactionSize },\n      },\n    },\n  } = useTheme();\n  const selected = ownReactionTypes.includes(type);\n  const animationScale = useSharedValue(0);\n  const hasShown = useSharedValue(0);\n  const scale = useSharedValue(1);\n  const selectedOpacity = useSharedValue(selected ? 1 : 0);\n\n  const onTap = useAnimatedGestureHandler<TapGestureHandlerStateChangeEvent>(\n    {\n      onEnd: () => {\n        runOnJS(triggerHaptic)('impactLight');\n        selectedOpacity.value = withTiming(selected ? 0 : 1, { duration: 250 }, () => {\n          if (handleReaction) {\n            runOnJS(handleReaction)(type);\n          }\n          runOnJS(setOverlay)('none');\n        });\n      },\n      onFinish: () => {\n        cancelAnimation(scale);\n        scale.value = withTiming(1, { duration: 100 });\n      },\n      onStart: () => {\n        cancelAnimation(scale);\n        scale.value = withTiming(1.5, { duration: 100 });\n      },\n    },\n    [handleReaction, selected, setOverlay, type],\n  );\n\n  useAnimatedReaction(\n    () => {\n      if (showScreen.value > 0.8 && hasShown.value === 0) {\n        return 1;\n      }\n      return 0;\n    },\n    (result) => {\n      if (hasShown.value === 0 && result !== 0) {\n        hasShown.value = 1;\n        animationScale.value = withSequence(\n          withDelay(60 * (numberOfReactions - (index + 1)), withTiming(0.1, { duration: 50 })),\n          withTiming(1.5, { duration: 250 }),\n          withTiming(1, { duration: 250 }),\n        );\n      }\n    },\n    [index, numberOfReactions],\n  );\n\n  const iconStyle = useAnimatedStyle<ViewStyle>(\n    () => ({\n      transform: [\n        {\n          scale: animationScale.value,\n        },\n        {\n          scale: scale.value,\n        },\n      ],\n    }),\n    [],\n  );\n\n  const selectedStyle = useAnimatedStyle<ViewStyle>(() => ({\n    opacity: selectedOpacity.value,\n  }));\n\n  return (\n    <TapGestureHandler\n      hitSlop={{\n        bottom:\n          Number(reaction.paddingVertical || 0) ||\n          Number(reaction.paddingBottom || 0) ||\n          styles.reactionList.paddingVertical,\n        left:\n          (Number(reaction.paddingHorizontal || 0) ||\n            Number(reaction.paddingLeft || 0) ||\n            styles.notLastReaction.marginRight) / 2,\n        right:\n          (Number(reaction.paddingHorizontal || 0) ||\n            Number(reaction.paddingRight || 0) ||\n            styles.notLastReaction.marginRight) / 2,\n        top:\n          Number(reaction.paddingVertical || 0) ||\n          Number(reaction.paddingTop || 0) ||\n          styles.reactionList.paddingVertical,\n      }}\n      maxDurationMs={3000}\n      onHandlerStateChange={onTap}\n    >\n      <Animated.View\n        style={[index !== numberOfReactions - 1 ? styles.notLastReaction : {}, reaction, iconStyle]}\n      >\n        <Icon height={reactionSize} pathFill={grey} width={reactionSize} />\n        <Animated.View style={[styles.selectedIcon, selectedStyle]}>\n          <Icon height={reactionSize} pathFill={accent_blue} width={reactionSize} />\n        </Animated.View>\n      </Animated.View>\n    </TapGestureHandler>\n  );\n};\n\nexport type OverlayReactionListPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  MessageOverlayData<StreamChatGenerics>,\n  'alignment' | 'handleReaction' | 'messagesContext'\n> &\n  Pick<MessagesContextValue<StreamChatGenerics>, 'supportedReactions'> &\n  Pick<OverlayContextValue, 'setOverlay'> & {\n    messageLayout: Animated.SharedValue<{\n      x: number;\n      y: number;\n    }>;\n    ownReactionTypes: string[];\n    setReactionListHeight: React.Dispatch<React.SetStateAction<number>>;\n    showScreen: Animated.SharedValue<number>;\n    fill?: FillProps['fill'];\n  };\n\nconst OverlayReactionListWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: OverlayReactionListPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    alignment,\n    fill,\n    handleReaction,\n    messageLayout,\n    ownReactionTypes,\n    setReactionListHeight,\n    showScreen,\n    setOverlay,\n    supportedReactions = reactionData,\n  } = props;\n\n  const {\n    theme: {\n      colors: { white_snow },\n      overlay: {\n        padding: screenPadding,\n        reactionsList: { radius, reactionList },\n      },\n    },\n  } = useTheme();\n\n  const reactionListHeight = useSharedValue(0);\n  const reactionBubbleWidth = useSharedValue(0);\n  const reactionListLayout = useSharedValue({\n    height: 0,\n    width: 0,\n  });\n\n  const { width } = useWindowDimensions();\n\n  const animatedStyle = useAnimatedStyle<ViewStyle>(() => {\n    const borderRadius = reactionList.borderRadius || styles.reactionList.borderRadius;\n    const insideLeftBound =\n      messageLayout.value.x - reactionListLayout.value.width + borderRadius > screenPadding;\n    const insideRightBound = messageLayout.value.x + borderRadius < width - screenPadding;\n    const left = !insideLeftBound\n      ? screenPadding\n      : !insideRightBound\n      ? width - screenPadding - reactionListLayout.value.width\n      : messageLayout.value.x - reactionListLayout.value.width + borderRadius;\n    const top = messageLayout.value.y - reactionListLayout.value.height - radius * 2;\n\n    return {\n      left,\n      top,\n    };\n  });\n\n  const animatedBigCircleProps = useAnimatedProps<CircleProps>(() => ({\n    cx: messageLayout.value.x - radius * 3,\n    cy: messageLayout.value.y - radius * 3,\n    r: radius * 2,\n  }));\n\n  const animateSmallCircleProps = useAnimatedProps<CircleProps>(() => ({\n    cx: messageLayout.value.x - radius,\n    cy: messageLayout.value.y,\n    r: radius,\n  }));\n\n  const showScreenStyle = useAnimatedStyle<ViewStyle>(\n    () => ({\n      transform: [\n        {\n          translateY: interpolate(showScreen.value, [0, 1], [-reactionListHeight.value / 2, 0]),\n        },\n        {\n          translateX: interpolate(\n            showScreen.value,\n            [0, 1],\n            [\n              alignment === 'left' ? -reactionBubbleWidth.value / 2 : reactionBubbleWidth.value / 2,\n              0,\n            ],\n          ),\n        },\n        {\n          scale: interpolate(showScreen.value, [0, 0.8, 1], [0, 0, 1]),\n        },\n      ],\n    }),\n    [alignment],\n  );\n\n  const numberOfReactions = supportedReactions.length;\n\n  return (\n    <View style={StyleSheet.absoluteFill} testID='overlay-reaction-list'>\n      <Animated.View\n        onLayout={({ nativeEvent: { layout } }) => {\n          reactionBubbleWidth.value = layout.width;\n        }}\n        style={showScreenStyle}\n      >\n        <Svg>\n          <AnimatedCircle animatedProps={animatedBigCircleProps} fill={fill || white_snow} />\n          <AnimatedCircle animatedProps={animateSmallCircleProps} fill={fill || white_snow} />\n        </Svg>\n        <Animated.View\n          onLayout={({\n            nativeEvent: {\n              layout: { height, width: layoutWidth },\n            },\n          }) => {\n            reactionListLayout.value = { height, width: layoutWidth };\n            reactionListHeight.value = height;\n            setReactionListHeight(height);\n          }}\n          style={[\n            styles.reactionList,\n            { backgroundColor: white_snow },\n            animatedStyle,\n            reactionList,\n          ]}\n        >\n          {supportedReactions?.map(({ Icon, type }, index) => (\n            <ReactionButton<StreamChatGenerics>\n              handleReaction={handleReaction}\n              Icon={Icon}\n              index={index}\n              key={`${type}_${index}`}\n              numberOfReactions={numberOfReactions}\n              ownReactionTypes={ownReactionTypes}\n              setOverlay={setOverlay}\n              showScreen={showScreen}\n              type={type}\n            />\n          ))}\n        </Animated.View>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: OverlayReactionListPropsWithContext<StreamChatGenerics>,\n  nextProps: OverlayReactionListPropsWithContext<StreamChatGenerics>,\n) => {\n  const { alignment: prevAlignment, ownReactionTypes: prevOwnReactionTypes } = prevProps;\n  const { alignment: nextAlignment, ownReactionTypes: nextOwnReactionTypes } = nextProps;\n\n  const alignmentEqual = prevAlignment === nextAlignment;\n  if (!alignmentEqual) return false;\n\n  const ownReactionTypesEqual = prevOwnReactionTypes.length === nextOwnReactionTypes.length;\n  if (!ownReactionTypesEqual) return false;\n\n  return true;\n};\n\nconst MemoizedOverlayReactionList = React.memo(\n  OverlayReactionListWithContext,\n  areEqual,\n) as typeof OverlayReactionListWithContext;\n\nexport type OverlayReactionListProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Omit<\n  OverlayReactionListPropsWithContext<StreamChatGenerics>,\n  'setOverlay' | 'supportedReactions'\n> &\n  Partial<\n    Pick<\n      OverlayReactionListPropsWithContext<StreamChatGenerics>,\n      'setOverlay' | 'supportedReactions'\n    >\n  >;\n\n/**\n * OverlayReactionList - A high level component which implements all the logic required for a message overlay reaction list\n */\nexport const OverlayReactionList = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: OverlayReactionListProps<StreamChatGenerics>,\n) => {\n  const { data } = useMessageOverlayContext<StreamChatGenerics>();\n  const { supportedReactions } = useMessagesContext<StreamChatGenerics>();\n  const { setOverlay } = useOverlayContext();\n\n  return (\n    <MemoizedOverlayReactionList\n      {...(data || {})}\n      {...{ setOverlay, supportedReactions }}\n      {...props}\n    />\n  );\n};\n\nOverlayReactionList.displayName = 'OverlayReactionList{overlay{reactionList}}';\n"],"mappings":"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"}