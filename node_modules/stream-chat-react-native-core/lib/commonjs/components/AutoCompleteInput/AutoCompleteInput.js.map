{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_throttle","_interopRequireDefault","_ChannelContext","_MessageInputContext","_SuggestionsContext","_ThemeContext","_TranslationContext","_utils","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","styles","StyleSheet","create","inputBox","flex","fontSize","includeFontPadding","padding","paddingTop","textAlignVertical","computeCaretPosition","token","startOfTokenPosition","length","isCommand","text","split","AutoCompleteInputWithContext","props","additionalTextInputProps","autoCompleteSuggestionsLimit","closeSuggestions","_props$cooldownActive","cooldownActive","giphyActive","giphyEnabled","maxMessageLength","mentionAllAppUsersEnabled","mentionAllAppUsersQuery","numberOfLines","onChange","openSuggestions","setGiphyActive","setInputBoxRef","setShowMoreOptions","t","triggerSettings","updateSuggestionsContext","updateSuggestions","isTrackingStarted","useRef","selectionEnd","_useState","useState","_useState2","_slicedToArray2","textHeight","setTextHeight","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","black","grey","messageInput","handleChange","newText","fromUpdate","arguments","undefined","handleSuggestionsThrottled","useEffect","startTracking","trigger","triggerSetting","current","type","stopTracking","_ref2","_asyncToGenerator2","_regenerator","mark","_callee","_ref","query","_triggerSetting","_triggerSetting2","wrap","_callee$","_context","prev","next","isMentionTrigger","dataProvider","data","queryCallback","onSelect","item","onSelectSuggestion","queryText","limit","isCommandTrigger","stop","_x","apply","handleSelectionChange","_ref3","end","nativeEvent","selection","_ref4","newTokenString","isSuggestionCommand","output","isEmojiTrigger","isSuggestionEmoji","isSuggestionUser","textToModify","slice","lastIndexOf","newCaretPosition","modifiedText","substring","replace","startsWith","callback","handleCommand","_ref5","_callee2","actualToken","_callee2$","_context2","abrupt","trim","_x2","handleMentions","_ref6","tokenMatch","lastToken","handleMentionsTrigger","keys","find","handleEmojis","_ref7","handleEmojisTrigger","handleSuggestions","_ref8","_callee3","mentionTokenMatch","emojiTokenMatch","_callee3$","_context3","test","sent","match","_x3","placeholderText","throttle","leading","createElement","TextInput","_extends2","autoFocus","maxLength","multiline","onChangeText","onContentSizeChange","_ref9","height","contentSize","onSelectionChange","placeholder","placeholderTextColor","ref","style","color","maxHeight","textAlign","I18nManager","isRTL","testID","value","onBlur","event","__self","__source","fileName","lineNumber","columnNumber","areEqual","prevProps","nextProps","prevCooldownActive","prevGiphyActive","prevT","prevText","nextCooldownActive","nextGiphyActive","nextT","nextText","giphyActiveEqual","tEqual","textEqual","cooldownActiveEqual","MemoizedAutoCompleteInput","React","memo","AutoCompleteInput","_useChannelContext","useChannelContext","_useMessageInputConte","useMessageInputContext","_useSuggestionsContex","useSuggestionsContext","_useTranslationContex","useTranslationContext","exports","displayName"],"sources":["AutoCompleteInput.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { I18nManager, StyleSheet, TextInput, TextInputProps } from 'react-native';\n\nimport throttle from 'lodash/throttle';\n\nimport {\n  ChannelContextValue,\n  useChannelContext,\n} from '../../contexts/channelContext/ChannelContext';\nimport {\n  MessageInputContextValue,\n  useMessageInputContext,\n} from '../../contexts/messageInputContext/MessageInputContext';\nimport {\n  isSuggestionCommand,\n  isSuggestionEmoji,\n  isSuggestionUser,\n  Suggestion,\n  SuggestionCommand,\n  SuggestionsContextValue,\n  SuggestionUser,\n  useSuggestionsContext,\n} from '../../contexts/suggestionsContext/SuggestionsContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport {\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../contexts/translationContext/TranslationContext';\nimport type { Emoji } from '../../emoji-data/compiled';\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { isCommandTrigger, isEmojiTrigger, isMentionTrigger } from '../../utils/utils';\n\nimport type { Trigger } from '../../utils/utils';\n\nconst styles = StyleSheet.create({\n  inputBox: {\n    flex: 1,\n    fontSize: 14,\n    includeFontPadding: false, // for android vertical text centering\n    padding: 0, // removal of default text input padding on android\n    paddingTop: 0, // removal of iOS top padding for weird centering\n    textAlignVertical: 'center', // for android vertical text centering\n  },\n});\n\nconst computeCaretPosition = (token: string, startOfTokenPosition: number) =>\n  startOfTokenPosition + token.length;\n\nconst isCommand = (text: string) => text[0] === '/' && text.split(' ').length <= 1;\n\ntype AutoCompleteInputPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<ChannelContextValue<StreamChatGenerics>, 'giphyEnabled'> &\n  Pick<\n    MessageInputContextValue<StreamChatGenerics>,\n    | 'additionalTextInputProps'\n    | 'autoCompleteSuggestionsLimit'\n    | 'giphyActive'\n    | 'maxMessageLength'\n    | 'mentionAllAppUsersEnabled'\n    | 'mentionAllAppUsersQuery'\n    | 'numberOfLines'\n    | 'onChange'\n    | 'setGiphyActive'\n    | 'setInputBoxRef'\n    | 'setShowMoreOptions'\n    | 'text'\n    | 'triggerSettings'\n  > &\n  Pick<\n    SuggestionsContextValue<StreamChatGenerics>,\n    'closeSuggestions' | 'openSuggestions' | 'updateSuggestions'\n  > &\n  Pick<TranslationContextValue, 't'> & {\n    /**\n     * This is currently passed in from MessageInput to avoid rerenders\n     * that would happen if we put this in the MessageInputContext\n     */\n    cooldownActive?: boolean;\n  };\n\nexport type AutoCompleteInputProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<AutoCompleteInputPropsWithContext<StreamChatGenerics>>;\n\nconst AutoCompleteInputWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: AutoCompleteInputPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    additionalTextInputProps,\n    autoCompleteSuggestionsLimit,\n    closeSuggestions,\n    cooldownActive = false,\n    giphyActive,\n    giphyEnabled,\n    maxMessageLength,\n    mentionAllAppUsersEnabled,\n    mentionAllAppUsersQuery,\n    numberOfLines,\n    onChange,\n    openSuggestions,\n    setGiphyActive,\n    setInputBoxRef,\n    setShowMoreOptions,\n    t,\n    text,\n    triggerSettings,\n    updateSuggestions: updateSuggestionsContext,\n  } = props;\n\n  const isTrackingStarted = useRef(false);\n  const selectionEnd = useRef(0);\n  const [textHeight, setTextHeight] = useState(0);\n\n  const {\n    theme: {\n      colors: { black, grey },\n      messageInput: { inputBox },\n    },\n  } = useTheme();\n\n  const handleChange = (newText: string, fromUpdate = false) => {\n    if (!fromUpdate) {\n      onChange(newText);\n    } else {\n      handleSuggestionsThrottled(newText);\n    }\n  };\n\n  useEffect(() => {\n    handleChange(text, true);\n  }, [text]);\n\n  const startTracking = (trigger: Trigger) => {\n    const triggerSetting = triggerSettings[trigger];\n    if (triggerSetting) {\n      isTrackingStarted.current = true;\n      const { type } = triggerSetting;\n      openSuggestions(type);\n    }\n  };\n\n  const stopTracking = () => {\n    isTrackingStarted.current = false;\n    closeSuggestions();\n  };\n\n  const updateSuggestions = async ({\n    query,\n    trigger,\n  }: {\n    query: Suggestion['name'];\n    trigger: Trigger;\n  }) => {\n    if (isMentionTrigger(trigger)) {\n      const triggerSetting = triggerSettings[trigger];\n      if (triggerSetting) {\n        await triggerSetting.dataProvider(\n          query as SuggestionUser<StreamChatGenerics>['name'],\n          text,\n          (data, queryCallback) => {\n            if (query === queryCallback) {\n              updateSuggestionsContext({\n                data,\n                onSelect: (item) => onSelectSuggestion({ item, trigger }),\n                queryText: query,\n              });\n            }\n          },\n          {\n            limit: autoCompleteSuggestionsLimit,\n            mentionAllAppUsersEnabled,\n            mentionAllAppUsersQuery,\n          },\n        );\n      }\n    } else if (isCommandTrigger(trigger)) {\n      const triggerSetting = triggerSettings[trigger];\n      if (triggerSetting) {\n        await triggerSetting.dataProvider(\n          query as SuggestionCommand<StreamChatGenerics>['name'],\n          text,\n          (data, queryCallback) => {\n            if (query !== queryCallback) {\n              return;\n            }\n\n            updateSuggestionsContext({\n              data,\n              onSelect: (item) => onSelectSuggestion({ item, trigger }),\n              queryText: query,\n            });\n          },\n          {\n            limit: autoCompleteSuggestionsLimit,\n          },\n        );\n      }\n    } else {\n      const triggerSetting = triggerSettings[trigger];\n      if (triggerSetting) {\n        await triggerSetting.dataProvider(query as Emoji['name'], text, (data, queryCallback) => {\n          if (query !== queryCallback) {\n            return;\n          }\n\n          updateSuggestionsContext({\n            data,\n            onSelect: (item) => onSelectSuggestion({ item, trigger }),\n            queryText: query,\n          });\n        });\n      }\n    }\n  };\n\n  const handleSelectionChange: TextInputProps['onSelectionChange'] = ({\n    nativeEvent: {\n      selection: { end },\n    },\n  }) => {\n    selectionEnd.current = end;\n  };\n\n  const onSelectSuggestion = ({\n    item,\n    trigger,\n  }: {\n    item: Suggestion<StreamChatGenerics>;\n    trigger: Trigger;\n  }) => {\n    if (!trigger || !triggerSettings[trigger]) {\n      return;\n    }\n\n    let newTokenString = '';\n    if (isCommandTrigger(trigger) && isSuggestionCommand(item)) {\n      const triggerSetting = triggerSettings[trigger];\n      if (triggerSetting) {\n        newTokenString = `${triggerSetting.output(item).text} `;\n      }\n    }\n    if (isEmojiTrigger(trigger) && isSuggestionEmoji(item)) {\n      const triggerSetting = triggerSettings[trigger];\n      if (triggerSetting) {\n        newTokenString = `${triggerSetting.output(item).text} `;\n      }\n    }\n    if (isMentionTrigger(trigger) && isSuggestionUser(item)) {\n      const triggerSetting = triggerSettings[trigger];\n      if (triggerSetting) {\n        newTokenString = `${triggerSetting.output(item).text} `;\n      }\n    }\n\n    const textToModify = text.slice(0, selectionEnd.current);\n\n    const startOfTokenPosition = textToModify.lastIndexOf(trigger, selectionEnd.current);\n\n    const newCaretPosition = computeCaretPosition(newTokenString, startOfTokenPosition);\n\n    const modifiedText = `${textToModify.substring(0, startOfTokenPosition)}${newTokenString}`;\n\n    stopTracking();\n\n    const newText = text.replace(textToModify, modifiedText);\n\n    if (giphyEnabled && newText.startsWith('/giphy ')) {\n      onChange(newText.slice(7)); // 7 because of '/giphy ' length\n      setGiphyActive(true);\n    } else {\n      onChange(newText);\n    }\n\n    selectionEnd.current = newCaretPosition || 0;\n\n    if (isMentionTrigger(trigger) && isSuggestionUser(item)) {\n      const triggerSetting = triggerSettings[trigger];\n      if (triggerSetting) {\n        triggerSetting.callback(item);\n      }\n    }\n  };\n\n  const handleCommand = async (text: string) => {\n    if (!isCommand(text)) {\n      return false;\n    }\n\n    if (!isTrackingStarted.current) {\n      startTracking('/');\n    }\n    const actualToken = text.trim().slice(1);\n    await updateSuggestions({ query: actualToken, trigger: '/' });\n\n    return true;\n  };\n\n  const handleMentions = ({ tokenMatch }: { tokenMatch: RegExpMatchArray | null }) => {\n    const lastToken = tokenMatch?.[tokenMatch.length - 1];\n    const handleMentionsTrigger =\n      (lastToken && Object.keys(triggerSettings).find((trigger) => trigger === lastToken[0])) ||\n      null;\n\n    /*\n      if we lost the trigger token or there is no following character we want to close\n      the autocomplete\n    */\n    if (!lastToken || lastToken.length <= 0) {\n      stopTracking();\n      return;\n    }\n\n    const actualToken = lastToken.slice(1);\n\n    // if trigger is not configured step out from the function, otherwise proceed\n    if (!handleMentionsTrigger) {\n      return;\n    }\n\n    if (!isTrackingStarted.current) {\n      startTracking('@');\n    }\n\n    updateSuggestions({ query: actualToken, trigger: '@' });\n  };\n\n  const handleEmojis = ({ tokenMatch }: { tokenMatch: RegExpMatchArray | null }) => {\n    const lastToken = tokenMatch?.[tokenMatch.length - 1].trim();\n    const handleEmojisTrigger =\n      (lastToken && Object.keys(triggerSettings).find((trigger) => trigger === lastToken[0])) ||\n      null;\n\n    /*\n      if we lost the trigger token or there is no following character we want to close\n      the autocomplete\n    */\n    if (!lastToken || lastToken.length <= 0) {\n      stopTracking();\n      return;\n    }\n\n    const actualToken = lastToken.slice(1);\n\n    // if trigger is not configured step out from the function, otherwise proceed\n    if (!handleEmojisTrigger) {\n      return;\n    }\n\n    if (!isTrackingStarted.current) {\n      startTracking(':');\n    }\n\n    updateSuggestions({ query: actualToken, trigger: ':' });\n  };\n\n  const handleSuggestions = async (text: string) => {\n    if (\n      /\\s/.test(text.slice(selectionEnd.current - 1, selectionEnd.current)) &&\n      isTrackingStarted.current\n    ) {\n      stopTracking();\n    } else if (!(await handleCommand(text))) {\n      const mentionTokenMatch = text\n        .slice(0, selectionEnd.current)\n        .match(/(?!^|\\W)?@[^\\s@]*\\s?[^\\s@]*$/g);\n      if (mentionTokenMatch) {\n        handleMentions({ tokenMatch: mentionTokenMatch });\n      } else {\n        const emojiTokenMatch = text\n          .slice(0, selectionEnd.current)\n          .match(/(?!^|\\W)?:\\w{2,}[^\\s]*\\s?[^\\s]*$/g);\n        handleEmojis({ tokenMatch: emojiTokenMatch });\n      }\n    }\n  };\n\n  const placeholderText = giphyActive\n    ? t('Search GIFs')\n    : cooldownActive\n    ? t('Slow mode ON')\n    : t('Send a message');\n\n  const handleSuggestionsThrottled = throttle(handleSuggestions, 100, {\n    leading: false,\n  });\n\n  return (\n    <TextInput\n      autoFocus={giphyActive}\n      maxLength={maxMessageLength}\n      multiline\n      onChangeText={(newText) => {\n        if (giphyEnabled && newText.startsWith('/giphy ')) {\n          handleChange(newText.slice(7)); // 7 because of '/giphy' length\n          setGiphyActive(true);\n        } else {\n          handleChange(newText);\n        }\n      }}\n      onContentSizeChange={({\n        nativeEvent: {\n          contentSize: { height },\n        },\n      }) => {\n        if (!textHeight) {\n          setTextHeight(height);\n        }\n      }}\n      onSelectionChange={handleSelectionChange}\n      placeholder={placeholderText}\n      placeholderTextColor={grey}\n      ref={setInputBoxRef}\n      style={[\n        styles.inputBox,\n        {\n          color: black,\n          maxHeight: (textHeight || 17) * numberOfLines,\n          textAlign: I18nManager.isRTL ? 'right' : 'left',\n        },\n        inputBox,\n      ]}\n      testID='auto-complete-text-input'\n      value={text}\n      {...additionalTextInputProps}\n      onBlur={(event) => {\n        if (additionalTextInputProps?.onBlur) {\n          additionalTextInputProps?.onBlur(event);\n        }\n        setShowMoreOptions(true);\n      }}\n    />\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: AutoCompleteInputPropsWithContext<StreamChatGenerics>,\n  nextProps: AutoCompleteInputPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    cooldownActive: prevCooldownActive,\n    giphyActive: prevGiphyActive,\n    t: prevT,\n    text: prevText,\n  } = prevProps;\n  const {\n    cooldownActive: nextCooldownActive,\n    giphyActive: nextGiphyActive,\n    t: nextT,\n    text: nextText,\n  } = nextProps;\n\n  const giphyActiveEqual = prevGiphyActive === nextGiphyActive;\n  if (!giphyActiveEqual) return false;\n\n  const tEqual = prevT === nextT;\n  if (!tEqual) return false;\n\n  const textEqual = prevText === nextText;\n  if (!textEqual) return false;\n\n  const cooldownActiveEqual = prevCooldownActive === nextCooldownActive;\n  if (!cooldownActiveEqual) return false;\n\n  return true;\n};\n\nconst MemoizedAutoCompleteInput = React.memo(\n  AutoCompleteInputWithContext,\n  areEqual,\n) as typeof AutoCompleteInputWithContext;\n\nexport const AutoCompleteInput = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: AutoCompleteInputProps<StreamChatGenerics>,\n) => {\n  const { giphyEnabled } = useChannelContext<StreamChatGenerics>();\n  const {\n    additionalTextInputProps,\n    autoCompleteSuggestionsLimit,\n    giphyActive,\n    maxMessageLength,\n    mentionAllAppUsersEnabled,\n    mentionAllAppUsersQuery,\n    numberOfLines,\n    onChange,\n    setGiphyActive,\n    setInputBoxRef,\n    setShowMoreOptions,\n    text,\n    triggerSettings,\n  } = useMessageInputContext<StreamChatGenerics>();\n  const { closeSuggestions, openSuggestions, updateSuggestions } =\n    useSuggestionsContext<StreamChatGenerics>();\n  const { t } = useTranslationContext();\n\n  return (\n    <MemoizedAutoCompleteInput\n      {...{\n        additionalTextInputProps,\n        autoCompleteSuggestionsLimit,\n        closeSuggestions,\n        giphyActive,\n        giphyEnabled,\n        maxMessageLength,\n        mentionAllAppUsersEnabled,\n        mentionAllAppUsersQuery,\n        numberOfLines,\n        onChange,\n        openSuggestions,\n        setGiphyActive,\n        setInputBoxRef,\n        setShowMoreOptions,\n        t,\n        text,\n        triggerSettings,\n        updateSuggestions,\n      }}\n      {...props}\n    />\n  );\n};\n\nAutoCompleteInput.displayName = 'AutoCompleteInput{messageInput{inputBox}}';\n"],"mappings":"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"}