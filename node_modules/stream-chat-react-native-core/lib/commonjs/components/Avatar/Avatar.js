var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Avatar = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _reactNativeSvg = _interopRequireWildcard(require("react-native-svg"));
var _ThemeContext = require("../../contexts/themeContext/ThemeContext");
var _useLoadingImage2 = require("../../hooks/useLoadingImage");
var _getResizedImageUrl = require("../../utils/getResizedImageUrl");
var _this = this,
  _jsxFileName = "/home/runner/work/stream-chat-react-native/stream-chat-react-native/package/src/components/Avatar/Avatar.tsx";
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var randomImageBaseUrl = 'https://getstream.io/random_png/';
var randomSvgBaseUrl = 'https://getstream.io/random_svg/';
var streamCDN = 'stream-io-cdn.com';
var styles = _reactNative.StyleSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center',
    overflow: 'hidden'
  },
  presenceIndicatorContainer: {
    height: 12,
    position: 'absolute',
    right: 0,
    top: 0,
    width: 12
  }
});
var getInitials = function getInitials(fullName) {
  return fullName.split(' ').slice(0, 2).map(function (name) {
    return name.charAt(0);
  }).join(' ');
};
var Avatar = function Avatar(props) {
  var containerStyle = props.containerStyle,
    _props$ImageComponent = props.ImageComponent,
    ImageComponent = _props$ImageComponent === void 0 ? _reactNative.Image : _props$ImageComponent,
    imageProp = props.image,
    imageStyle = props.imageStyle,
    name = props.name,
    online = props.online,
    presenceIndicatorProp = props.presenceIndicator,
    presenceIndicatorContainerStyle = props.presenceIndicatorContainerStyle,
    size = props.size,
    testID = props.testID;
  var _useTheme = (0, _ThemeContext.useTheme)(),
    _useTheme$theme = _useTheme.theme,
    _useTheme$theme$avata = _useTheme$theme.avatar,
    container = _useTheme$theme$avata.container,
    image = _useTheme$theme$avata.image,
    presenceIndicator = _useTheme$theme$avata.presenceIndicator,
    presenceIndicatorContainer = _useTheme$theme$avata.presenceIndicatorContainer,
    _useTheme$theme$color = _useTheme$theme.colors,
    accent_green = _useTheme$theme$color.accent_green,
    white = _useTheme$theme$color.white;
  var _useLoadingImage = (0, _useLoadingImage2.useLoadingImage)(),
    isLoadingImageError = _useLoadingImage.isLoadingImageError,
    setLoadingImageError = _useLoadingImage.setLoadingImageError;
  return _react["default"].createElement(_reactNative.View, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 5
    }
  }, _react["default"].createElement(_reactNative.View, {
    style: [styles.container, {
      borderRadius: size / 2,
      height: size,
      width: size
    }, container, containerStyle],
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 7
    }
  }, isLoadingImageError ? _react["default"].createElement(_reactNative.View, {
    style: {
      backgroundColor: '#ececec',
      borderRadius: size / 2,
      height: size,
      width: size
    },
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 11
    }
  }) : _react["default"].createElement(ImageComponent, {
    accessibilityLabel: testID || 'Avatar Image',
    onError: function onError() {
      return setLoadingImageError(true);
    },
    source: {
      uri: !imageProp || imageProp.includes(randomImageBaseUrl) || imageProp.includes(randomSvgBaseUrl) ? imageProp != null && imageProp.includes(streamCDN) ? imageProp : "" + randomImageBaseUrl + (name ? "?name=" + getInitials(name) + "&size=" + size : '') : (0, _getResizedImageUrl.getResizedImageUrl)({
        height: size,
        url: imageProp,
        width: size
      })
    },
    style: [image, size ? {
      backgroundColor: '#ececec',
      borderRadius: size / 2,
      height: size,
      width: size
    } : {}, imageStyle],
    testID: testID || 'avatar-image',
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 108,
      columnNumber: 11
    }
  })), online && _react["default"].createElement(_reactNative.View, {
    style: [styles.presenceIndicatorContainer, presenceIndicatorContainer, presenceIndicatorContainerStyle],
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 9
    }
  }, _react["default"].createElement(_reactNativeSvg["default"], {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151,
      columnNumber: 11
    }
  }, _react["default"].createElement(_reactNativeSvg.Circle, (0, _extends2["default"])({
    fill: accent_green,
    stroke: white
  }, presenceIndicator, presenceIndicatorProp, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 13
    }
  })))));
};
exports.Avatar = Avatar;
Avatar.displayName = 'Avatar{avatar}';
//# sourceMappingURL=Avatar.js.map