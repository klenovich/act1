{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_renderText","_this","_jsxFileName","describe","createNode","_ref","amount","_ref$ordered","ordered","_ref$start","start","items","Array","from","keys","type","mockOutput","node","createElement","Text","__self","__source","fileName","lineNumber","columnNumber","MockText","_ref2","output","state","Fragment","ListOutput","styles","it","_render","render","container","textInstances","children","forEach","_ref3","_asyncToGenerator2","_regenerator","mark","_callee","instance","index","text","wrap","_callee$","_context","prev","next","waitFor","expect","within","getByText","toBeTruthy","stop","_x","_x2","apply","arguments","_render2","_ref4","_callee2","_callee2$","_context2","_x3","_x4","_extends2","_render3","_ref5","_callee3","_callee3$","_context3","_x5","_x6","_render4","_ref6","_callee4","_callee4$","_context4","_x7"],"sources":["renderText.test.tsx"],"sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\n\nimport type { ReactTestInstance } from 'react-test-renderer';\n\nimport { render, waitFor, within } from '@testing-library/react-native';\n\n// @ts-ignore\nimport { ASTNode, SingleASTNode } from 'simple-markdown';\n\nimport { ListOutput, ListOutputProps } from './renderText';\n\ndescribe('list', () => {\n  const createNode = ({\n    amount,\n    ordered = false,\n    start = 1,\n  }: {\n    amount: number;\n    ordered?: boolean;\n    start?: number;\n  }): SingleASTNode => ({\n    items: Array.from(Array(amount).keys()),\n    ordered,\n    start,\n    type: 'text',\n  });\n\n  const mockOutput = (node: ASTNode) => <Text>{node}</Text>;\n  const MockText = ({ node, output, state }: ListOutputProps) => (\n    <>\n      <ListOutput node={node} output={output} state={state} styles={{}} />\n    </>\n  );\n\n  it('renders numbered items', () => {\n    const node = createNode({ amount: 3, ordered: true, start: 1 });\n    const { container } = render(<MockText node={node} output={mockOutput} state={{}} />);\n    const textInstances = container.children as ReactTestInstance[];\n    textInstances.forEach(async (instance, index) => {\n      const text = `${index + node.start}. `; // 1. , 2. ...\n      await waitFor(() => expect(within(instance).getByText(text)).toBeTruthy());\n    });\n  });\n\n  it('renders numbered items from a start index', () => {\n    const node = createNode({ amount: 3, ordered: true, start: 3 });\n    const { container } = render(<MockText node={node} output={mockOutput} state={{}} />);\n    const textInstances = container.children as ReactTestInstance[];\n    textInstances.forEach(async (instance, index) => {\n      const text = `${index + node.start}. `; // 3. , 4. ...\n      await waitFor(() => expect(within(instance).getByText(text)).toBeTruthy());\n    });\n  });\n\n  it('does not throw an error if an item is empty', () => {\n    const node = {\n      ...createNode({ amount: 3, ordered: true }),\n      items: ['Not empty', null, 'Not empty'],\n    };\n    const { container } = render(<MockText node={node} output={mockOutput} state={{}} />);\n    const textInstances = container.children as ReactTestInstance[];\n    textInstances.forEach(async (instance, index) => {\n      const text = `${index + 1}. `; // 1. , 2. ...\n      await waitFor(() => expect(within(instance).getByText(text)).toBeTruthy());\n    });\n  });\n\n  it('renders an unordered list', () => {\n    const node = createNode({ amount: 3 });\n    const { container } = render(<MockText node={node} output={mockOutput} state={{}} />);\n    const textInstances = container.children as ReactTestInstance[];\n    textInstances.forEach(async (instance) => {\n      await waitFor(() => expect(within(instance).getByText('\\u2022 ')).toBeTruthy());\n    });\n  });\n});\n"],"mappings":"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"}