{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ChatContext","_MessageContext","_ThemeContext","_Avatar","_this","_jsxFileName","MessageAvatarWithContext","props","_message$user","_message$user2","_message$user3","alignment","ImageComponent","lastGroupMessage","message","showAvatar","size","_useTheme","useTheme","_useTheme$theme","theme","BASE_AVATAR_SIZE","avatar","_useTheme$theme$messa","messageSimple","avatarWrapper","container","leftAlign","rightAlign","spacer","visible","createElement","View","style","testID","__self","__source","fileName","lineNumber","columnNumber","Avatar","image","user","name","id","areEqual","prevProps","nextProps","_prevMessage$user","_nextMessage$user","_prevMessage$user2","_nextMessage$user2","_prevMessage$user3","_nextMessage$user3","prevLastGroupMessage","prevMessage","nextLastGroupMessage","nextMessage","lastGroupMessageEqual","userEqual","MemoizedMessageAvatar","React","memo","MessageAvatar","_useMessageContext","useMessageContext","_useChatContext","useChatContext","_extends2","exports","displayName"],"sources":["MessageAvatar.tsx"],"sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\n\nimport { ChatContextValue, useChatContext } from '../../../contexts/chatContext/ChatContext';\nimport {\n  MessageContextValue,\n  useMessageContext,\n} from '../../../contexts/messageContext/MessageContext';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\n\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\nimport { Avatar, AvatarProps } from '../../Avatar/Avatar';\n\nexport type MessageAvatarPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  MessageContextValue<StreamChatGenerics>,\n  'alignment' | 'lastGroupMessage' | 'message' | 'showAvatar'\n> &\n  Pick<ChatContextValue<StreamChatGenerics>, 'ImageComponent'> &\n  Partial<Pick<AvatarProps, 'size'>>;\n\nconst MessageAvatarWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageAvatarPropsWithContext<StreamChatGenerics>,\n) => {\n  const { alignment, ImageComponent, lastGroupMessage, message, showAvatar, size } = props;\n  const {\n    theme: {\n      avatar: { BASE_AVATAR_SIZE },\n      messageSimple: {\n        avatarWrapper: { container, leftAlign, rightAlign, spacer },\n      },\n    },\n  } = useTheme();\n\n  const visible = typeof showAvatar === 'boolean' ? showAvatar : lastGroupMessage;\n\n  return (\n    <View\n      style={[alignment === 'left' ? leftAlign : rightAlign, container]}\n      testID='message-avatar'\n    >\n      {visible ? (\n        <Avatar\n          image={message.user?.image}\n          ImageComponent={ImageComponent}\n          name={message.user?.name || message.user?.id}\n          size={size || BASE_AVATAR_SIZE}\n        />\n      ) : (\n        <View style={spacer} testID='spacer' />\n      )}\n    </View>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageAvatarPropsWithContext<StreamChatGenerics>,\n  nextProps: MessageAvatarPropsWithContext<StreamChatGenerics>,\n) => {\n  const { lastGroupMessage: prevLastGroupMessage, message: prevMessage } = prevProps;\n  const { lastGroupMessage: nextLastGroupMessage, message: nextMessage } = nextProps;\n\n  const lastGroupMessageEqual = prevLastGroupMessage === nextLastGroupMessage;\n  if (!lastGroupMessageEqual) return false;\n\n  const userEqual =\n    prevMessage.user?.image === nextMessage.user?.image &&\n    prevMessage.user?.name === nextMessage.user?.name &&\n    prevMessage.user?.id === nextMessage.user?.id;\n  if (!userEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageAvatar = React.memo(\n  MessageAvatarWithContext,\n  areEqual,\n) as typeof MessageAvatarWithContext;\n\nexport type MessageAvatarProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<MessageAvatarPropsWithContext<StreamChatGenerics>>;\n\nexport const MessageAvatar = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageAvatarProps<StreamChatGenerics>,\n) => {\n  const { alignment, lastGroupMessage, message, showAvatar } =\n    useMessageContext<StreamChatGenerics>();\n  const { ImageComponent } = useChatContext<StreamChatGenerics>();\n  return (\n    <MemoizedMessageAvatar\n      {...{\n        alignment,\n        ImageComponent,\n        lastGroupMessage,\n        message,\n        showAvatar,\n      }}\n      {...props}\n    />\n  );\n};\n\nMessageAvatar.displayName = 'MessageAvatar{messageSimple{avatarWrapper}}';\n"],"mappings":"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"}