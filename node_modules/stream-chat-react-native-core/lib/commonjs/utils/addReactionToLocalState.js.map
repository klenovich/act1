{"version":3,"names":["_apis","require","_insertReaction","addReactionToLocalState","_ref","channel","enforceUniqueReaction","messageId","reactionType","user","message","state","messages","find","_ref2","id","reaction","created_at","Date","toISOString","message_id","type","updated_at","user_id","hasOwnReaction","own_reactions","length","latest_reactions","currentReaction","filter","r","reaction_counts","_defineProperty2","_message$reaction_cou2","concat","_toConsumableArray2","updateReaction","insertReaction","exports"],"sources":["addReactionToLocalState.ts"],"sourcesContent":["import type { Channel, ReactionResponse, UserResponse } from 'stream-chat';\n\nimport { updateReaction } from '../store/apis';\nimport { insertReaction } from '../store/apis/insertReaction';\n\nimport type { DefaultStreamChatGenerics } from '../types/types';\n\nexport const addReactionToLocalState = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  channel,\n  enforceUniqueReaction,\n  messageId,\n  reactionType,\n  user,\n}: {\n  channel: Channel<StreamChatGenerics>;\n  enforceUniqueReaction: boolean;\n  messageId: string;\n  reactionType: string;\n  user: UserResponse<StreamChatGenerics>;\n}) => {\n  const message = channel.state.messages.find(({ id }) => id === messageId);\n\n  if (!message) return;\n\n  const reaction: ReactionResponse = {\n    created_at: new Date().toISOString(),\n    message_id: messageId,\n    type: reactionType,\n    updated_at: new Date().toISOString(),\n    user,\n    user_id: user?.id,\n  };\n\n  const hasOwnReaction = message.own_reactions && message.own_reactions.length > 0;\n  if (!message.own_reactions) {\n    message.own_reactions = [];\n  }\n\n  if (!message.latest_reactions) {\n    message.latest_reactions = [];\n  }\n\n  if (enforceUniqueReaction) {\n    const currentReaction = message.own_reactions[0];\n    message.own_reactions = [];\n    if (!message.latest_reactions) {\n      message.latest_reactions = [];\n    }\n    message.latest_reactions = message.latest_reactions.filter((r) => r.user_id !== user.id);\n    if (currentReaction && message.reaction_counts) {\n      message.reaction_counts[currentReaction.type] =\n        message.reaction_counts[currentReaction.type] - 1;\n    }\n\n    if (!message.reaction_counts) {\n      message.reaction_counts = {\n        [reactionType]: 1,\n      };\n    } else {\n      message.reaction_counts[reactionType] = (message.reaction_counts?.[reactionType] || 0) + 1;\n    }\n  } else {\n    if (!message.reaction_counts) {\n      message.reaction_counts = {\n        [reactionType]: 1,\n      };\n    } else {\n      message.reaction_counts[reactionType] = message.reaction_counts[reactionType] + 1;\n    }\n  }\n\n  message.own_reactions = [...message.own_reactions, reaction];\n  message.latest_reactions = [...message.latest_reactions, reaction];\n\n  if (enforceUniqueReaction && hasOwnReaction) {\n    updateReaction({\n      message,\n      reaction,\n    });\n  } else {\n    insertReaction({\n      reaction,\n    });\n  }\n};\n"],"mappings":";;;;;;;AAEA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,eAAA,GAAAD,OAAA;AAIO,IAAME,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAAC,IAAA,EAc9B;EAAA,IAXJC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACPC,qBAAqB,GAAAF,IAAA,CAArBE,qBAAqB;IACrBC,SAAS,GAAAH,IAAA,CAATG,SAAS;IACTC,YAAY,GAAAJ,IAAA,CAAZI,YAAY;IACZC,IAAI,GAAAL,IAAA,CAAJK,IAAI;EAQJ,IAAMC,OAAO,GAAGL,OAAO,CAACM,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC,UAAAC,KAAA;IAAA,IAAGC,EAAE,GAAAD,KAAA,CAAFC,EAAE;IAAA,OAAOA,EAAE,KAAKR,SAAS;EAAA,EAAC;EAEzE,IAAI,CAACG,OAAO,EAAE;EAEd,IAAMM,QAA0B,GAAG;IACjCC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACpCC,UAAU,EAAEb,SAAS;IACrBc,IAAI,EAAEb,YAAY;IAClBc,UAAU,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACpCV,IAAI,EAAJA,IAAI;IACJc,OAAO,EAAEd,IAAI,oBAAJA,IAAI,CAAEM;EACjB,CAAC;EAED,IAAMS,cAAc,GAAGd,OAAO,CAACe,aAAa,IAAIf,OAAO,CAACe,aAAa,CAACC,MAAM,GAAG,CAAC;EAChF,IAAI,CAAChB,OAAO,CAACe,aAAa,EAAE;IAC1Bf,OAAO,CAACe,aAAa,GAAG,EAAE;EAC5B;EAEA,IAAI,CAACf,OAAO,CAACiB,gBAAgB,EAAE;IAC7BjB,OAAO,CAACiB,gBAAgB,GAAG,EAAE;EAC/B;EAEA,IAAIrB,qBAAqB,EAAE;IACzB,IAAMsB,eAAe,GAAGlB,OAAO,CAACe,aAAa,CAAC,CAAC,CAAC;IAChDf,OAAO,CAACe,aAAa,GAAG,EAAE;IAC1B,IAAI,CAACf,OAAO,CAACiB,gBAAgB,EAAE;MAC7BjB,OAAO,CAACiB,gBAAgB,GAAG,EAAE;IAC/B;IACAjB,OAAO,CAACiB,gBAAgB,GAAGjB,OAAO,CAACiB,gBAAgB,CAACE,MAAM,CAAC,UAACC,CAAC;MAAA,OAAKA,CAAC,CAACP,OAAO,KAAKd,IAAI,CAACM,EAAE;IAAA,EAAC;IACxF,IAAIa,eAAe,IAAIlB,OAAO,CAACqB,eAAe,EAAE;MAC9CrB,OAAO,CAACqB,eAAe,CAACH,eAAe,CAACP,IAAI,CAAC,GAC3CX,OAAO,CAACqB,eAAe,CAACH,eAAe,CAACP,IAAI,CAAC,GAAG,CAAC;IACrD;IAEA,IAAI,CAACX,OAAO,CAACqB,eAAe,EAAE;MAC5BrB,OAAO,CAACqB,eAAe,OAAAC,gBAAA,iBACpBxB,YAAY,EAAG,CAAC,CAClB;IACH,CAAC,MAAM;MAAA,IAAAyB,sBAAA;MACLvB,OAAO,CAACqB,eAAe,CAACvB,YAAY,CAAC,GAAG,CAAC,EAAAyB,sBAAA,GAAAvB,OAAO,CAACqB,eAAe,qBAAvBE,sBAAA,CAA0BzB,YAAY,CAAC,KAAI,CAAC,IAAI,CAAC;IAC5F;EACF,CAAC,MAAM;IACL,IAAI,CAACE,OAAO,CAACqB,eAAe,EAAE;MAC5BrB,OAAO,CAACqB,eAAe,OAAAC,gBAAA,iBACpBxB,YAAY,EAAG,CAAC,CAClB;IACH,CAAC,MAAM;MACLE,OAAO,CAACqB,eAAe,CAACvB,YAAY,CAAC,GAAGE,OAAO,CAACqB,eAAe,CAACvB,YAAY,CAAC,GAAG,CAAC;IACnF;EACF;EAEAE,OAAO,CAACe,aAAa,MAAAS,MAAA,KAAAC,mBAAA,aAAOzB,OAAO,CAACe,aAAa,IAAET,QAAQ,EAAC;EAC5DN,OAAO,CAACiB,gBAAgB,MAAAO,MAAA,KAAAC,mBAAA,aAAOzB,OAAO,CAACiB,gBAAgB,IAAEX,QAAQ,EAAC;EAElE,IAAIV,qBAAqB,IAAIkB,cAAc,EAAE;IAC3C,IAAAY,oBAAc,EAAC;MACb1B,OAAO,EAAPA,OAAO;MACPM,QAAQ,EAARA;IACF,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,IAAAqB,8BAAc,EAAC;MACbrB,QAAQ,EAARA;IACF,CAAC,CAAC;EACJ;AACF,CAAC;AAACsB,OAAA,CAAAnC,uBAAA,GAAAA,uBAAA"}