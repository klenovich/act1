{"version":3,"names":["patchMessageTextCommand","messageText","mentionedUserIds","length","trimmedMessageText","trim","startsWith","replace","_trimmedMessageText$s","reasonText","split","pop"],"sources":["patchMessageTextCommand.ts"],"sourcesContent":["/**\n * Converts a message text command to proper format\n * Example: \"/mute @username\" to \"/mute @userId\"\n * Supports \"/ban\", \"/unban\", \"/mute\", \"/unmute\"\n * @param messageText\n * @param mentionedUsers\n * @returns\n */\nexport function patchMessageTextCommand(messageText: string, mentionedUserIds: string[]): string {\n  if (mentionedUserIds.length === 0) {\n    return messageText;\n  }\n  const trimmedMessageText = messageText.trim();\n\n  /**\n   * The required formats are \"/unban @userid\" or \"/mute @userid\" or \"/unmute @userid\"\n   */\n  if (\n    trimmedMessageText.startsWith('/mute ') ||\n    trimmedMessageText.startsWith('/unmute ') ||\n    trimmedMessageText.startsWith('/unban ')\n  ) {\n    return trimmedMessageText.replace(/@.+/, `@${mentionedUserIds[0]}`);\n  }\n\n  /**\n   * The required format is \"/ban @userid reason\"\n   */\n  if (trimmedMessageText.startsWith('/ban ')) {\n    const reasonText = trimmedMessageText.split(' ').pop() ?? '';\n    return `/ban @${mentionedUserIds[0]} ${reasonText}`.trim();\n  }\n\n  return messageText;\n}\n"],"mappings":";;;;AAQO,SAASA,uBAAuBA,CAACC,WAAmB,EAAEC,gBAA0B,EAAU;EAC/F,IAAIA,gBAAgB,CAACC,MAAM,KAAK,CAAC,EAAE;IACjC,OAAOF,WAAW;EACpB;EACA,IAAMG,kBAAkB,GAAGH,WAAW,CAACI,IAAI,CAAC,CAAC;EAK7C,IACED,kBAAkB,CAACE,UAAU,CAAC,QAAQ,CAAC,IACvCF,kBAAkB,CAACE,UAAU,CAAC,UAAU,CAAC,IACzCF,kBAAkB,CAACE,UAAU,CAAC,SAAS,CAAC,EACxC;IACA,OAAOF,kBAAkB,CAACG,OAAO,CAAC,KAAK,QAAML,gBAAgB,CAAC,CAAC,CAAG,CAAC;EACrE;EAKA,IAAIE,kBAAkB,CAACE,UAAU,CAAC,OAAO,CAAC,EAAE;IAAA,IAAAE,qBAAA;IAC1C,IAAMC,UAAU,IAAAD,qBAAA,GAAGJ,kBAAkB,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,YAAAH,qBAAA,GAAI,EAAE;IAC5D,OAAO,YAASN,gBAAgB,CAAC,CAAC,CAAC,SAAIO,UAAU,EAAGJ,IAAI,CAAC,CAAC;EAC5D;EAEA,OAAOJ,WAAW;AACpB"}